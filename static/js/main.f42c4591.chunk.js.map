{"version":3,"sources":["serviceWorker.js","App.js","utils/utils.js","axios/axios.js","components/Header/Header.jsx","components/Footer/Footer.jsx","config/menuConfig.js","pages/redux-thunk-demo/actionCreators/actionTypes.js","pages/redux-thunk-demo/actionCreators/getAction.js","components/NavLeft/NavLeft.jsx","Admin.js","pages/home/index.jsx","pages/ui/Buttons.jsx","pages/ui/Modals.jsx","pages/ui/Loadings.jsx","pages/ui/Notification.jsx","pages/ui/Messages.jsx","pages/ui/Tabs.jsx","pages/ui/Gallery.jsx","pages/ui/Carousels.jsx","pages/form/Login.jsx","pages/form/Register.jsx","pages/table/BasicTable.jsx","pages/table/HightTable.jsx","components/filterForm/FilterForm.jsx","pages/city/city.jsx","pages/order/Order.jsx","pages/order/OrderDetail.jsx","pages/user/User.jsx","pages/map/BikeMap.jsx","pages/echarts/echartTheme.js","pages/echarts/bar/Bar.jsx","pages/echarts/themeLight.js","pages/echarts/pie/Pie.jsx","pages/echarts/line/Line.jsx","pages/permission/Permission.jsx","common.js","pages/redux-thunk-demo/reducers/reducer_todo_list.js","pages/redux-thunk-demo/reducers/reducer_title.js","pages/redux-thunk-demo/reducers/reducer_common.js","pages/redux-thunk-demo/store/store.js","pages/redux-thunk-demo/todoListUI.jsx","pages/redux-thunk-demo/redux-thunk-demo.jsx","pages/redux-saga-demo/todoListUI.jsx","pages/redux-saga-demo/actionCreators/actionTypes.js","pages/redux-saga-demo/reducers/reducer_todo_list.js","pages/redux-saga-demo/reducers/reducer_title.js","pages/redux-saga-demo/reducers/reducer_common.js","pages/redux-saga-demo/actionCreators/getAction.js","pages/redux-saga-demo/sagas/todoListSaga.js","pages/redux-saga-demo/store/store.js","pages/redux-saga-demo/redux-saga-demo.jsx","pages/redux-react-todoList/todoListUI.jsx","pages/redux-react-todoList/actionCreators/actionTypes.js","pages/redux-react-todoList/actionCreators/getAction.js","pages/redux-react-todoList/redux-react-todoList.jsx","router.js","pages/redux-react-todoList/reducers/reducer_todo_list.js","pages/redux-react-todoList/reducers/reducer_title.js","pages/redux-react-todoList/reducers/reducer_common.js","pages/redux-react-todoList/store/store.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","Component","Option","select_default","cdnUrl","host","utils","filterDate","date","fmt","arguments","length","undefined","Date","o","M+","getMonth","D+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","0","1","2","3","4","5","6","getDay","pagination","data","pageOrPageSizeChange","onChange","currentPage","currentPageSize","onShowSizeChange","current","result","page","pageSize","total","totalCount","showTotal","concat","showQuickJumper","showSizeChanger","pageSizeOptions","getOptions","key","value","options","option","map","item","index","push","Axios","Promise","resolve","reject","JsonP","url","param","err","res","status","msssage","_this","params","ajax","then","list","setState","getList","isShowLoading","document","getElementById","style","display","baseURL","console","log","postData","method","tiemout","axios","response","code","modal_default","info","title","content","msg","Header","state","userName","Utils","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","Object","objectSpread","city","currentCity","_this2","setInterval","menuType","className","row_default","col_default","span","src","alt","href","dayPictureUrl","weather","temperature","React","connect","titleReducers","Footer","menuList","btnList","ACTION_TYPES","TODOLIST_VALUE_CHANGE","TODOLIST_TODO_ITEM_ADD","TODOLIST_TODO_ITEM_DELETE","INIT_ACTION_DATA","INDEX_TITLE","getAction","getInputChangeAction","type","getTodoItemAddAction","getTodoItemDeleteAction","getIndexTitleAction","initActionData","getInitActionData","callback","dispatch","SubMenu","menu_default","NavLeft","currentKey","renderTitle","handleClick","_ref","renderMenu","Item","NavLink","to","menuTreeNode","MenuConfig","hash","onClick","selectedKeys","theme","Admin","components_NavLeft_NavLeft","components_Header_Header","Footer_Footer","Home","nextProps","nextState","prevProps","prevState","Buttons","loading","size","handleCloseLoading","handleChangeSize","e","target","card_default","button_default","disabled","icon","shape","marginBottom","Group","icon_default","radio_default","Modals","visible0","visible1","visible2","visible3","visible4","ModalText","visible4confirmLoading","openBaseModal","visible","defineProperty","handleConfirm","okText","cancelText","onOk","onCancel","top","centered","confirmLoading","setTimeout","Loadings","handleChangeLoading","bool","spin_default","indicator","marginLeft","switch_default","checked","alert_default","showIcon","closable","onClose","alert","message","description","spinning","tip","Notification","handleOpen","notification_default","duration","defaultValue","width","marginRight","val","open","placement","Messages","message_default","Tabpages","newTabIndex","panes","mode","activeKey","handleTab","handleChangeMode","onEdit","targetKey","action","add","remove","lastIndex","forEach","pane","i","filter","tabs_default","defaultActiveKey","TabPane","tab","Button","tabPosition","Gallery","currentImg","openGallery","imgUrl","imgList","cover","Meta","gutter","md","height","footer","Carousels","afterChange","currentIndex","beforeChange","from","carousel_default","autoplay","effect","Login","handleSubmit","preventDefault","form","validateFields","values","handleSubmit2","fieldsError","_this$props$form","isFieldTouched","getFieldError","getFieldDecorator","getFieldsError","userNameError","passwordError","form_default","layout","onSubmit","validateStatus","help","rules","required","min","max","pattern","input_default","prefix","color","placeholder","prefx","htmlType","keys","some","field","marginTop","initialValue","valuePropName","checkbox_default","float","form_Login","create","Register","userImg","JSON","stringify","success","password","displayRender","label","join","beforeUpload","file","isJPG","error","isLt2M","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","handleChange","originFileObj","imageUrl","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","uploadButton","assign","input_number_default","id","checkedChildren","unCheckedChildren","moment","date_picker_default","showTime","format","TextArea","autosize","minRows","maxRows","cascader_default","vlaue","expandTrigger","time_picker_default","upload_default","listType","showUploadList","form_Register","BasicTable","dataSource","selectedRowKeys","actionMode","onChangeBtn","handleDelete","confirm","onRowClick","record","selectedItem","onSelectChange","selectedRows","assertThisInitialized","columns","dataIndex","render","avatar_default","backgroundColor","sex","badge_default","count","role","interest","interestObj","strArr","tooltip_default","slice","isMarried","text","birthday","address","align","_this$state","rowSelection","hasSelected","buttonStyle","table_default","bordered","onRow","FormItem","scrollY","y","scrollX","x","HightTable","handleScollYChange","enable","handleScollXChange","columns1","sorter","b","age","columns2","fixed","scroll","FilterForm","search","filterList","searchData","getFieldsValue","formatStr","start_time_field","startField","end_time_field","endField","isUnTimeStamp","unix","getItems","formItems","showSearch","allowClear","inputType","initialStartTime","initialEndTime","startPlaceholder","endPlaceholder","select","FilterForm_FormItem","input","startTime","endTime","colon","checkbox","margin","resetFields","filterForm_FilterForm","cityIdArr","name","modeArr","opModeArr","City","isShowOpenCityModal","handleOpenCity","openCitySubmit","cityInfo","cityForm","op_mode","arr","user_name","open_time","update_time","city_OpenCityFormModal","wrappedComponentRef","OpenCityFormModal","city_FormItem","city_Option","Order","isShowFinishOrderModal","orderInfo","finishOrderBtnDisabled","orderDetailBtnDisabled","orderDetail","orderId","finishOrder","getOrderInfo","onFinishOrderSubmit","distance","Order_FormItem","bikeSn","battery","getInfo","regenerator_default","wrap","_context","prev","next","stop","_marked","OrderDetail","getOrderDetailInfo","renderMap","BMap","Map","addMapControl","drawBikeRoute","positionList","drwaServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","areaList","polygon","Polygon","fillColor","fillOpacity","orderSn","mobile","startLocation","endLocation","RadioGroup","roleSelectList","interestSelectList","User","actionBtndisabled","deleteVisible","isVisible","handleOperator","userInfo","resetSubmit","userForm","delete","userId","_this3","User_UserForm","inset","UserForm","User_FormItem","getRole","User_Option","names","item1","item2","getInterest","BikeMap","getMapData","routeList","enableMapClick","split","startPointIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","p","point","serviceList","servicePointist","servicesPolygon","bikeList","bikeIcon","bikeMarker","colorPalette","tooltip","axisPointer","lineStyle","crossStyle","legend","textStyle","toolbox","iconStyle","normal","borderColor","dataZoom","timeline","itemStyle","controlStyle","timeAxis","axisLine","axisTick","axisLabel","splitLine","splitArea","areaStyle","logAxis","valueAxis","categoryAxis","line","symbol","graph","gauge","candlestick","color0","borderColor0","Bar","getOption","trigger","xAxis","yAxis","series","getOption2","echarts","registerTheme","echartTheme","lib_default","themeLight","fontWeight","visualMap","shadowStyle","dataBackgroundColor","fillerColor","handleColor","show","symbolSize","borderWidth","emphasis","areaColor","splitNumber","offsetCenter","orient","right","bottom","formatter","radius","center","shadowBlur","shadowOffsetX","shadowColor","sort","roseType","animationType","animationEasing","animationDelay","idx","random","notMerge","lazyUpdate","getOption3","boundaryGap","TreeNode","tree_default","Permission","btnDisabled","isShowCreateModal","isShowAuthModal","handleCreate","onCreateSubmit","roleForm","handleAuth","menus","setMenus","onAuthSubmit","authForm","authorizeTime","Permission_RoleForm","sss","bodyStyle","overflow","Permission_AuthForm","RoleForm","Permission_FormItem","AuthForm","getTreeNode","_this4","roleName","defaultExpandAll","checkable","checkedKeys","onCheck","menuConfig","Common","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleState","inputVal","toConsumableArray","splice","defaultState","rootReducers","combineReducers","newState","parse","_ref2","slicedToArray","func","todoListReducers","_ref3","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","TodoListUI","handleInputChange","handleBtnAdd","list_default","renderItem","handleItemDelete","Name","subscribe","getState","todoListUI","GET_LIST_DATA","getListData","valueChange","todoListSaga","actionInit","_actionInit","sent","put","t0","todoListSaga_marked","_context2","_marked2","_context3","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","run","ReduxSagaDemo","redux_saga_demo_todoListUI","ReduxReactTodoList","addItem","_this$props","redux_react_todoList_todoListUI","ERouter","HashRouter","src_App","Switch","Route","path","component","src_common","src_Admin","Pie","Line","ReduxThunkDemo","Redirect","ReactDOM","es","router_ERouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f42c4591.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './style/common.less'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n           {this.props.children}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Select } from 'antd';\nconst Option = Select.Option;\n\nconst filterDate = (date, fmt = 'YYYY-MM-DD HH:mm:ss') => {\n    if (!date) {\n        return '';\n    }\n    if (typeof date === 'number') {\n        date = new Date(date * 1000);\n    }\n    var o = {\n        'M+': date.getMonth() + 1,\n        'D+': date.getDate(),\n        'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n        'H+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    }\n    var week = {\n        '0': '\\u65e5',\n        '1': '\\u4e00',\n        '2': '\\u4e8c',\n        '3': '\\u4e09',\n        '4': '\\u56db',\n        '5': '\\u4e94',\n        '6': '\\u516d'\n    }\n    if (/(Y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\n    }\n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n        }\n    }\n    return fmt\n}\n\nconst pagination = (data,pageOrPageSizeChange) =>{\n    return {\n        //这里page和pageSize 的回调是同一个函数处理\n        //page 变化的回调 参数是改变后的页码page及每页条数pageSize\n        onChange:(currentPage,currentPageSize)=>{\n            pageOrPageSizeChange(currentPage,currentPageSize)\n        },\n        //pageSize 变化的回调\n        onShowSizeChange: (currentPage,currentPageSize) => {\n            pageOrPageSizeChange(currentPage,currentPageSize);\n        },\n        // itemRender:(current, type, originalElement)=> {\n        //     console.log(type)\n        //     if (type === 'prev') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>上一页</Button>);\n        //     } if (type === 'next') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>下一页</Button>);\n        //     }\n        //     return originalElement;\n        // },\n        current:data.result.page,\n        pageSize:data.result.pageSize,\n        total: data.result.totalCount,\n        showTotal:()=>{\n            return `共${data.result.totalCount}条`\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,//是否可以改变 pageSize\n        pageSizeOptions:['10','20','50','100','200','500','1000']\n    }\n}\n\nconst getOptions = (data, key, value) => {\n    if (!data) {\n        return [];\n    }\n    let options = [];\n    let option = '';\n    data.map((item, index) => {\n        if (key && value) {\n            option = <Option key={item[value]} value={item[value]}>{item[key]}</Option>;\n        } else {\n            option = <Option key={index} value={item}>{item}</Option>;\n        }\n\n        options.push(option);\n    })\n    return options;\n}\n\n//设置打包部署到github 上图片404问题\n//https://xuwenliu.github.io/react-antd 线上地址\n//需要在本地图片链接前加上 /react-antd，而本地访问确不需要，则需要cdnUrl来区分\n\nlet cdnUrl = '';\nlet host = window.location.host;\nif (host === \"xuwenliu.github.io\") {\n    cdnUrl = '/react-antd';\n}\n\n\n\nexport default {\n    filterDate,\n    pagination,\n    getOptions,\n    cdnUrl\n}","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nimport utils from '../utils/utils';\n\n\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, (err, res) => {\n                if (res.status === 'success') {\n                    resolve(res);\n                } else {\n                    reject(res.msssage);\n                }\n            })\n        })\n    }\n\n    static getList(_this,url, params){\n        this.ajax({\n            url,\n            params\n        }).then((res) => {\n            let list = res.result.list.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            _this.setState({\n                list,\n                pagination: utils.pagination(res, (page,pageSize) => {\n                    _this.params.page = page;\n                    _this.params.pageSize = pageSize;\n                    _this.getList();\n                })\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.isShowLoading !==false){\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n\n        let baseURL = 'https://www.easy-mock.com/mock/5c83123e23107a1da64ea2fb/api';\n        return new Promise((resolve, reject) => {\n            console.log(options)\n            let postData = {};\n\n            if (options.params) { //get 请求\n                postData = {\n                    url: options.url,\n                    method:'get',\n                    baseURL,\n                    tiemout: 5000,\n                    params: options.params || ''\n    \n                }\n            }\n\n            if (options.data) {//post 请求\n                postData = {\n                    url: options.url,\n                    method: options.method || 'post',\n                    baseURL,\n                    tiemout: 5000,\n                    data: options.data || null\n                }\n            }\n\n            axios(postData).then((response) => {\n                if (options.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n\n                if (response.status === 200){\n                    let res = response.data;\n                    if (res.data.code == 0){\n                        resolve(res.data);\n                    }else{\n                        Modal.info({\n                            title:\"提示\",\n                            content:res.data.msg\n                        })\n                    }\n                }else{\n                    reject(response.data);\n                }\n            })\n        })\n    }\n}","import React from 'react';\nimport { Row, Col} from 'antd'\nimport './header.less'\nimport Utils from '../../utils/utils'\nimport axios from '../../axios/axios';\nimport { connect } from 'react-redux'\n\n\n\n\nclass Header extends React.Component {\n    state = {\n        userName: '',\n        date: Utils.filterDate(new Date()),\n    }\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        this.setState({\n            userName:'一定要爱你'\n        })\n        setInterval(() => {\n            this.setState({\n                date: Utils.filterDate(new Date())\n            })\n        }, 1000)\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData = () => {\n        let city = \"成都\";\n        axios.jsonp({\n            url: `https://api.map.baidu.com/telematics/v3/weather?location=${encodeURIComponent(city)}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\n        }).then((res) => {\n            let data = res.results[0].weather_data[0];\n            this.setState({\n                city:res.results[0].currentCity,\n                ...data\n            })\n            console.log(res)\n        })\n    }\n\n    render() {\n        const menuType = this.props.menuType;\n        return (\n            <div className=\"header \">\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src={`${Utils.cdnUrl}/assets/img/me.png`} alt=\"\" />\n                                <span>heng 通用管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ?18:24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"#\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' :\n                    <Row className=\"breadcrumb\">\n                        <Col span={4} className=\"breadcrumb-title\">\n                            {this.props.title}\n                        </Col>\n                        <Col span={20} className=\"weather\">\n                            <span className=\"date\">{this.state.date}</span>\n                            <span className=\"weather-city\">\n                                {this.state.city}\n                            </span>\n                            <span className=\"weather-img\">\n                                <img src={this.state.dayPictureUrl} alt=\"\" />\n                            </span>\n                            <span className=\"weather-detail\">\n                                {this.state.weather}{this.state.temperature}\n                            </span>\n                        </Col>\n                    </Row>\n                }\n                    \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.titleReducers.title\n    }\n}\n\nexport default connect(mapStateToProps,null)(Header);","import React from 'react';\nimport './footer.less'\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n            一定要爱你（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：一定要爱你\n         </div>\n        )\n    }\n}\n","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel',\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login',\n            },\n            {\n                title: '注册',\n                key: '/form/register',\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic',\n            },\n            {\n                title: '高级表格',\n                key: '/table/hight',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    },\n    {\n        title: 'Redux demo',\n        key: '/redux',\n        children: [\n            {\n                title: 'redux-thunk',\n                key: '/redux/thunk'\n            },\n            {\n                title: 'redux-saga',\n                key: '/redux/saga'\n            },\n            {\n                title: 'react-redux-todolist',\n                key: '/redux/react/todolist',\n            }\n            \n        ]\n    },\n];\nexport default menuList;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\nimport axios from '../../../axios/axios';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getInitActionData: ((callback) => {\n        return (dispatch) => {\n            axios.ajax({\n                url: '/user/list',\n            }).then((res) => {\n                if (res.code === 0) {\n                    dispatch(getAction.initActionData(res.result.list));\n                    callback && callback();\n                }\n            })\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport MenuConfig from '../../config/menuConfig';\nimport { Menu } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport './navLeft.less';\nimport { connect } from 'react-redux'\n\n// import store from '../../pages/redux-thunk-demo/store/store';\nimport getAction from '../../pages/redux-thunk-demo/actionCreators/getAction';\n\n\nconst SubMenu = Menu.SubMenu;\n\n\nclass NavLeft extends React.Component {\n    state = {\n        menuList: [],\n        currentKey:'',\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.setState({\n            menuTreeNode\n        })\n\n    }\n    componentDidMount() {\n        // store.dispatch(getAction.getIndexTitleAction('首页'));\n        // this.props.dispatch();\n        let key = window.location.hash.replace(/#|\\?.*$/g,'');\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        //每次刷新浏览器就触发一次action\n        this.renderTitle(MenuConfig,key);\n       \n\n    }\n\n    renderTitle = (data,key) => {\n        data.map(item => {\n            if (item.key === key) {\n                this.props.dispatch(getAction.getIndexTitleAction(item.title));\n                return;\n            } \n            if (item.children) {\n                this.renderTitle(item.children,key);\n            } \n        })\n    }\n\n    handleClick = ({item,key})=>{\n        if (key === this.state.currentKey) {\n            return false;\n        }\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        this.props.dispatch(getAction.getIndexTitleAction(item.props.title));\n    }   \n\n    //菜单渲染\n    renderMenu = (data) => {\n        return data.map((item) => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        {this.renderMenu(item.children)}\n                    </SubMenu>\n                )\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{item.title}</NavLink>\n            </Menu.Item>\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src=\"/assets/img/me.jpeg\" alt=\"\" />\n                    <h1>heng Sys</h1>\n                </div>\n                <Menu \n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.currentKey]}\n                    theme='dark'>\n                    {this.state.menuTreeNode}\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NavLeft);","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport NavLeft from './components/NavLeft/NavLeft'\nimport { connect } from 'react-redux'\n\nclass Admin extends React.Component {\n    state = {};\n    render() {\n        return (\n            <div>\n                <Row className=\"container\">\n                    <Col span={3} className=\"nav-left\">\n                    <NavLeft></NavLeft>\n                    </Col>\n                    <Col span={21} className=\"main\">\n                        \n                        <Header></Header>\n                        <Row className=\"content\">\n                            {/* <Home></Home> */}\n                            {this.props.children}\n                        </Row>\n                        <Footer></Footer>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\nexport default connect()(Admin)\n\n","import React from 'react';\nimport './index.less'\n\nexport default class Home extends React.Component {\n    state = {};\n\n    render() {\n        return (\n            <div className=\"home-wrap\">\n                高兴地学习React\n            </div>\n        )\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n\n    }\n\n    //props变化了-->接受到了新的props\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    //props或者state变化了-->接受到了新的props或者state\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    //即将更新-->render函数还未执行\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    //更新完毕-->render函数执行完毕\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    //销毁之前\n    componentWillUnMount() {\n\n    }\n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,Icon,Radio } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Buttons extends React.Component{\n    \n    state={\n        loading:true,\n        size:'default'\n    }\n    //不显示loading\n    handleCloseLoading = ()=>{\n        this.setState({\n            loading:false\n        })\n    }\n    //大小设置\n    handleChangeSize = (e) => {\n        this.setState({\n            size:e.target.value\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button>default按钮</Button>\n                    <Button type=\"primary\">primary按钮</Button>\n                    <Button type=\"dashed\">dashed按钮</Button>\n                    <Button type=\"danger\">danger按钮</Button>\n                    <Button disabled>disabled按钮</Button>\n                </Card>\n                <Card title=\"图像按钮\" className=\"card-wrap\">\n                    <Button icon=\"plus\">创建</Button>\n                    <Button icon=\"edit\">编辑</Button>\n                    <Button icon=\"delete\">删除</Button>\n                    <Button icon=\"search\" shape=\"circle\"></Button>\n                    <Button icon=\"search\" type=\"primary\">搜索</Button>\n                    <Button icon=\"download\" type=\"primary\">下载</Button>\n                    <Button icon=\"download\" type=\"primary\" shape=\"round\">下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button loading={this.state.loading}>确定</Button>\n                    <Button loading={this.state.loading}  type=\"primary\" shape=\"circle\"></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button loading={this.state.loading} shape=\"circle\"></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\" style={{marginBottom:10}}>\n                    <Button.Group>\n                        <Button type=\"primary\" icon=\"left\">返回</Button>\n                        <Button type=\"primary\">前进<Icon type=\"right\" /></Button>\n                    </Button.Group>\n                </Card>\n\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group onChange={this.handleChangeSize} value={this.state.size}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button size={this.state.size}>default按钮</Button>\n                    <Button size={this.state.size} type=\"primary\">primary按钮</Button>\n                    <Button size={this.state.size} type=\"dashed\">dashed按钮</Button>\n                    <Button size={this.state.size} type=\"danger\">danger按钮</Button>\n                    <Button size={this.state.size} disabled>disabled按钮</Button>\n                </Card>\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Button,Modal } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Modals extends React.Component{\n    state={\n        visible0: false,\n        visible1: false,\n        visible2: false,\n        visible3: false,\n        visible4: false,\n        ModalText:\"我是5s自动关闭弹框\",\n        visible4confirmLoading:false,\n    }\n\n    openBaseModal = (visible) => {\n        this.setState({\n            [visible]:true\n        })        \n    }\n\n    handleConfirm = (type) => {\n        Modal[type]({\n            title: '确定？',\n            content: '您确定进行该操作吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                console.log('ok')\n            },\n            onCancel() {\n                console.log('cancel')\n            }\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible0')}>Open</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible1')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible2')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible3')}>水平垂直居中</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible4')}>点击确定5s后自动关闭</Button>\n                    \n                    \n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n\n                <Modal \n                    title=\"基本弹框\"\n                    visible={this.state.visible0}\n                    onOk={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}>\n                    <p>知人者智，自知者明。胜人者有力，自胜者强。——老子</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自定义页脚\"\n                    visible={this.state.visible1}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    onOk={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}>\n                    <p>设置Modal属性 okText=\"确定\" cancelText=\"取消\"</p>\n                </Modal>\n\n                <Modal \n                    title=\"顶部20px弹框\"\n                    visible={this.state.visible2}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    style={{top:20}}\n                    onOk={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}>\n                    <p>顶部20px弹框 - 给Modal 设置style top:20即可</p>\n                </Modal>\n\n                <Modal \n                    title=\"水平垂直居中\"\n                    visible={this.state.visible3}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    centered\n                    onOk={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}>\n                    <p>水平垂直居中 - 给Modal添加centered属性即可</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自动关闭\"\n                    visible={this.state.visible4}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    centered\n                    confirmLoading={this.state.visible4confirmLoading}\n                    onOk={() => {\n                        this.setState({\n                            ModalText: '点击确定5s后自动关闭-在5s之内连续点击按钮是不会多次触发滴',\n                            visible4confirmLoading: true,\n                        });\n\n                        setTimeout(()=>{\n                            this.setState({\n                                visible4:false,\n                                visible4confirmLoading: false,\n                            });\n                        },5000)\n\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible4:false\n                        })\n                    }}>\n                    <p>{this.state.ModalText}</p>\n                </Modal>\n\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Spin,Radio, Icon,Alert,Switch } from 'antd';\nimport './ui.less';\n\nexport default class Loadings extends React.Component {\n    state = {\n        size: 'default',\n        loading:true,\n    }\n\n    handleChangeSize = (e)=>{\n        this.setState({\n            size:e.target.value\n        })\n    }\n\n    handleChangeLoading = (bool) => {\n        this.setState({\n            loading:bool\n        })\n    }\n\n    render() {\n        const icon = <Icon type=\"loading\"></Icon>\n        return (\n            <div>\n               \n                <Card title=\"spin用法\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChangeSize}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Spin size={this.state.size}></Spin>\n                    <Spin size={this.state.size} indicator={icon} style={{ marginLeft: 20 }}></Spin>\n                </Card>\n\n                <Card title=\"内容遮罩Spin + Alert\" className=\"card-wrap\">\n                   \n                    <div style={{marginBottom:20}}>\n                        Loading state: <Switch checked={this.state.loading} onChange={this.handleChangeLoading}/>\n                    </div>\n                    <Alert\n                        showIcon\n                        closable\n                        onClose={() => {\n                            alert('点击了关闭');\n                        }}\n                        message=\"Alert type='success'\"\n                        description=\"命名使用英文语义化，禁止使用特殊字符，禁止使用拼音，禁止使用中英文混合！\"\n                        type=\"success\"\n                        style={{marginBottom:20}}\n                    />\n                    \n                    <Spin size={this.state.size} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='info'\"\n                            description=\"项目、目录、html/css/js等文件命名全部采用小写方式， 以下划线分隔。eg：my_project_name\"\n                            type=\"info\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} tip=\"加载中...\" spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='warning' Spin tip='加载中...' \"\n                            description=\"html/css/js文件名一一对应参考微信小程序.eg: login.html、login.css、login.js\"\n                            type=\"warning\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} indicator={icon} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='error' indicator='<Icon type='loading'></Icon>' \"\n                            description=\"class、图片、视频、音频采用小写方式，以下划线或中划线分隔；eg：btn-play或btn_play\"\n                            type=\"error\"\n                        />\n                    </Spin>\n\n                </Card>\n\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,notification,Select } from 'antd';\nimport './ui.less';\n\nexport default class Notification extends React.Component {\n    state = {\n        size: 'default',\n        loading:true,\n    }\n\n    handleOpen = (type) => {\n        notification[type]({\n            message: '我是通知消息的title',\n            description: '我是通知消息的desc',\n            duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n            \n        })\n    }\n\n    \n\n    render() {\n        const options = ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'];\n\n        return (\n            <div>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框-方向控制\" className=\"card-wrap\">\n                    <Select\n                        defaultValue=\"topRight\"\n                        style={{ width: 140, marginRight: 10 }}\n                        onChange={(val) => {\n                            notification.open({\n                                type:'info',\n                                message:`我是${val} title`,\n                                description: '这里是好长好长的描述',\n                                placement: val,//方向\n                            });\n                        }}\n                    >\n                        {options.map(val => \n                            <Select.Option key={val} value={val}>\n                                {val}\n                            </Select.Option>\n                        )}\n                    </Select>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nexport default class Messages extends React.Component {\n\n    state = {};\n    /**\n     * 第一个参数，提示内容\n     * 第二个参数，自动关闭的延时，单位秒。设为 0 时不自动关闭。\n     * 第三个参数，关闭时触发的回调函数\n     * 详情：https://ant.design/components/message-cn/#components-message-demo-duration\n     */\n    handleOpen = (type)=>{\n        message[type]('我是全局Message提示内容',2,()=>{\n            alert('2s -->close')\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('loading')}>Loading</Button>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from \"react\";\nimport { Card, Tabs, message, Icon, Radio } from \"antd\";\nimport \"./ui.less\";\n\nexport default class Tabpages extends React.Component {\n    newTabIndex = 0;\n\n    panes = [\n        { title: \"Tab 1\", content: \"Content of Tab 1\", key: \"1\" },\n        { title: \"Tab 2\", content: \"Content of Tab 2\", key: \"2\" },\n        {\n            title: \"Tab 3\",\n            content: \"Content of Tab 3\",\n            key: \"3\",\n            closable: false\n        }\n    ];\n    state = {\n        mode: \"top\",\n        size: \"default\",\n        activeKey: this.panes[0].key,\n        panes:this.panes\n    };\n\n    handleTab = key => {\n        message.info(\"选择了Tab\" + key, 3);\n    };\n\n    handleChangeMode = e => {\n        this.setState({\n            mode: e.target.value\n        });\n    };\n\n    handleChangeSize = e => {\n        this.setState({\n            size: e.target.value\n        });\n    };\n\n    onChange = activeKey => {\n        this.setState({\n            activeKey\n        });\n    };\n\n    onEdit = (targetKey, action) => {\n        // console.log(action);\n        // console.log(targetKey);\n        //action= 'remove' | 'add'\n        this[action](targetKey);\n    };\n\n    add = () => {\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: activeKey,\n            content: `New Tab Pane${activeKey}`,\n            key: activeKey\n        });\n        this.setState({ panes, activeKey });\n    };\n\n    remove = targetKey => {\n        console.log(targetKey);\n        console.log(this.state.activeKey);\n        let activeKey = this.state.activeKey;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (lastIndex >= 0 && activeKey === targetKey) {\n            activeKey = panes[lastIndex].key;\n        }\n        this.setState({ panes, activeKey });\n    };\n\n    render() {\n        return (\n            <div>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane tab=\"首页\" key=\"1\">\n                            我是首页内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"财富\" key=\"2\">\n                            我是财富内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"出境\" key=\"3\" disabled>\n                            我是出境内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"朋友\" key=\"4\">\n                            我是朋友内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"我的\" key=\"5\">\n                            我是我的内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"Tab带图标页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"android\" />\n                                    android\n                                </span>\n                            }\n                            key=\"1\"\n                        >\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"apple\" />\n                                    apple\n                                </span>\n                            }\n                            key=\"2\"\n                        >\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"Tab方向/大小控制\" className=\"card-wrap\">\n                    <Radio.Group\n                        value={this.state.mode}\n                        onChange={this.handleChangeMode}\n                        style={{ marginBottom: 20 }}\n                    >\n                        <Radio.Button value=\"top\">top</Radio.Button>\n                        <Radio.Button value=\"left\">left</Radio.Button>\n                        <Radio.Button value=\"bottom\">bottom</Radio.Button>\n                        <Radio.Button value=\"right\">right</Radio.Button>\n                    </Radio.Group>\n\n                    <Radio.Group\n                        value={this.state.size}\n                        onChange={this.handleChangeSize}\n                        style={{ marginBottom: 20, marginLeft: 20 }}\n                    >\n                        <Radio.Button value=\"small\">小</Radio.Button>\n                        <Radio.Button value=\"default\">中</Radio.Button>\n                        <Radio.Button value=\"large\">大</Radio.Button>\n                    </Radio.Group>\n\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        onChange={this.handleTab}\n                        tabPosition={this.state.mode}\n                        size={this.state.size}\n                    >\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"android\" />\n                                    android\n                                </span>\n                            }\n                            key=\"1\"\n                        >\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"apple\" />\n                                    apple\n                                </span>\n                            }\n                            key=\"2\"\n                        >\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"windows\" />\n                                    windows\n                                </span>\n                            }\n                            key=\"3\"\n                        >\n                            我是windows内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"ie\" />\n                                    ie\n                                </span>\n                            }\n                            key=\"4\"\n                        >\n                            我是ie内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"chrome\" />\n                                    chrome\n                                </span>\n                            }\n                            key=\"5\"\n                        >\n                            我是chrome内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"github\" />\n                                    github\n                                </span>\n                            }\n                            key=\"6\"\n                        >\n                            我是github内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"weibo\" />\n                                    weibo\n                                </span>\n                            }\n                            key=\"7\"\n                        >\n                            我是weibo内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"html5\" />\n                                    html5\n                                </span>\n                            }\n                            key=\"8\"\n                        >\n                            我是html5内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"qq\" />\n                                    qq\n                                </span>\n                            }\n                            key=\"9\"\n                        >\n                            我是qq内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"alipay\" />\n                                    alipay\n                                </span>\n                            }\n                            key=\"10\"\n                        >\n                            我是alipay内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"google\" />\n                                    google\n                                </span>\n                            }\n                            key=\"11\"\n                        >\n                            我是google内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"taobao\" />\n                                    taobao\n                                </span>\n                            }\n                            key=\"12\"\n                        >\n                            我是taobao内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"可添加/删除\" className=\"card-wrap\">\n                    <Tabs\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onChange={this.onChange}\n                        onEdit={this.onEdit}\n                    >\n                        {this.state.panes.map(pane => (\n                            <Tabs.TabPane\n                                tab={pane.title}\n                                closable={pane.closable}\n                                key={pane.key}\n                            >\n                                {pane.content}\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Row,Col,Card,Modal } from 'antd';\nimport Utils from '../../utils/utils';\n\nexport default class Gallery extends React.Component {\n\n\n    state = {\n        visible: false,\n        currentImg:''\n    }\n\n    openGallery = (imgUrl) => {\n        this.setState({\n            visible: true,\n            currentImg:'/assets/img/gallery/'+imgUrl\n        })\n    }\n\n    render() {\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ]\n        const imgList = imgs.map((list)=>\n            list.map(item=>\n                <Card\n                    key={item}\n                    style={{ marginBottom: 10 }}\n                    cover={<img alt={item} src={`${Utils.cdnUrl}/assets/img/gallery/` + item} />}\n                    onClick={()=>this.openGallery(item)}\n                   \n                >\n                <Card.Meta\n                    title=\"React antd gallery画廊\"\n                    description=\"www.google.com\"\n                    />\n                </Card>\n            )\n        );\n        return (\n            <div className=\"card-warp\">\n                <Row gutter={10}>\n                    {\n                        imgList.map((item,index) =>\n                            <Col key={index} md={index === imgList.length-1?4:5}>{item}</Col>\n                        )\n                    }\n                    {/* <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={4}></Col> */}\n                </Row>\n\n                <Modal\n                    width={300}\n                    height={500}\n                    title=\"图片画廊\"\n                    visible={this.state.visible}\n                    footer={null}\n                    onCancel={() => {\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n\n                >\n                    {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport Utils from '../../utils/utils';\nimport { Card,Carousel} from 'antd';\n\nexport default class Carousels extends React.Component {\n    state = {};\n\n    afterChange = (currentIndex)=>{\n        // console.log('afterChange--currentIndex->',currentIndex)\n    }\n\n    beforeChange = (from,to) => {\n        // console.log('beforeChange--from->',from)\n        // console.log('beforeChange--to->',to)\n        \n    }\n\n    render() {\n        console.log(Utils.cdnUrl)\n        return (\n            <div>\n                <Card title=\"文字背景轮播\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay afterChange={this.afterChange} beforeChange={this.beforeChange}>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-1.jpg`} alt=\"\"/></div>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-2.jpg`} alt=\"\"/></div>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-3.jpg`} alt=\"\"/></div>\n                    </Carousel>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\n\nimport { Card,Form,Icon,Input,Button, Checkbox } from 'antd';\n\n\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\n  \n\nclass Login extends React.Component {\n   \n    state = {};\n\n    componentDidMount() {\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n\n    handleSubmit2 = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n    \n\n   \n    render() {\n        // console.log(this.props.form);\n        const { isFieldTouched, getFieldError,getFieldDecorator,getFieldsError } = this.props.form;\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n\n        return (\n            <div>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                        <Form.Item\n                            validateStatus={userNameError ? \"error\" : \"\"}\n                            help={userNameError || \"\"}\n                        >\n                            {\n                                getFieldDecorator('userName', {\n                                    rules: [\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={passwordError ? \"error\" : ''}\n                            help={passwordError || ''}\n                        >\n                            {\n                                getFieldDecorator('password',{\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'密码不能为空'\n                                        },\n                                        // {\n                                        //     min:6,max:20,\n                                        //     message:'密码长度在6-20位'\n                                        // },\n                                        {\n                                            pattern:new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/,'g'),\n                                            message:'6-20位密码(包含字母、数字和下划线)'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefx={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            \n            \n                <Card title=\"登录水平表单\" style={{marginTop:20}}>\n                    <Form style={{width:300}}>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('userName',{\n                                    initialValue:'',\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: []\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('remember', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>记住密码</Checkbox>\n                                )\n                            }\n                            <a href=\"#\" style={{float:'right'}}>忘记密码</a>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button onClick={this.handleSubmit2} type=\"primary\" htmlType=\"submit\" style={{width:'100%'}}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\nexport default Form.create()(Login);\n\n\n","import React from 'react';\nimport { Card, Form, Input, Button, Icon, message, Radio, InputNumber, Select, Switch, DatePicker, TimePicker, Cascader, Upload, Checkbox } from 'antd';\nimport moment from 'moment';\n\nclass Register extends React.Component {\n    state = {\n        userImg: '',//头像\n        loading:false,\n    }\n\n\n\n    handleSubmit = () => {\n        // let values = this.props.form.getFieldsValue();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(JSON.stringify(values,null,2));\n                message.success(`恭喜${values.userName}注册成功，密码：${values.password}`)\n            }\n        })\n    }\n\n    //地址选择返回的自定义格式\n    displayRender = (label) => {\n        console.log(label)\n        return label.join('-');\n    }\n\n    //头像上传之前 可做一些对图片的要求\n    beforeUpload = (file)=>{\n        const isJPG = file.type === 'image/jpeg';\n        if (!isJPG) {\n            message.error('上传的图片必须是jpg格式');\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('上传的图片必须小于2MB!');\n        }\n        return isJPG && isLt2M;\n    }\n\n    getBase64 = (img,callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 3\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        }\n        const offsetLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24\n                },\n                sm: {\n                    span: 12,\n                    offset: 3\n                }\n            }\n        }\n        const roleSelectList = [\n            { id: 1, value: '皇帝' },\n            { id: 2, value: '大臣' },\n            { id: 3, value: '宰相' },\n            { id: 4, value: '将军' },\n            { id: 5, value: '臣子' }\n        ]\n        const interestSelectList = [\n            { id: 1, value: '写代码' },\n            { id: 2, value: '撩妹子' },\n            { id: 3, value: '打篮球' },\n            { id: 4, value: '泡网吧' },\n            { id: 5, value: 'K歌' }\n        ]\n        const options = [\n            {\n                value: '四川省',//获取的值\n                label: '四川省',//显示的值\n                children: [\n                    {\n                        value: '成都市',\n                        label: '成都市',\n                        children: [\n                            {\n                                value: '高新区',\n                                label: '高新区',\n                            },\n                            {\n                                value: '武侯区',\n                                label: '武侯区',\n                            },\n                            {\n                                value: '青羊区',\n                                label: '青羊区',\n                            },\n                            {\n                                value: '锦江区',\n                                label: '锦江区',\n                            }\n                        ]\n                    },\n                    {\n                        value: '绵阳市',\n                        label: '绵阳市',\n                        children: [\n                            {\n                                value: '涪城区',\n                                label: '涪城区',\n                            },\n                            {\n                                value: '三台县',\n                                label: '三台县',\n                            },\n                            {\n                                value: '江油市',\n                                label: '江油市',\n                            },\n                            {\n                                value: '游仙区',\n                                label: '游仙区',\n                            }\n\n                        ]\n                    }\n                ]\n            },\n            {\n                value: '广东省',\n                label: '广东省',\n                children: [\n                    {\n                        value: '广州市',\n                        label: '广州市',\n                        children: [\n                            {\n                                vlaue:'天河区',\n                                label:'天河区',\n                            },\n                            {\n                                vlaue:'白云区',\n                                label:'白云区',\n                            },\n                            {\n                                vlaue:'海珠区',\n                                label:'海珠区',\n                            }\n                       \n                        ]\n                    },\n                    {\n                        value: '中山市',\n                        label: '中山市',\n                    },\n                    {\n                        value: '珠海市',\n                        label: '珠海市',\n                    },\n                    {\n                        value: '江门市',\n                        label: '江门市',\n                    }\n                ]\n            }\n        ]\n\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        return (\n            <div>\n                <Card title=\"注册表单\">\n                    <Form layout=\"horizontal\">\n                        <Form.Item label=\"用户名\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '用户名不能为空'\n                                        },\n                                        {\n                                            min: 5, max: 12,\n                                            message: '用户名长度5-12'\n                                        }, {\n                                            pattern: new RegExp('^\\\\w+$', 'g'),\n                                            message: '用户名必须是字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"密码\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '密码不能为空'\n                                        },\n                                        {\n                                            pattern: new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/, 'g'),\n                                            message: '密码必须是6-20位(包含字母、数字和下划线、特殊字符)'\n                                        }\n                                    ]\n                                })(\n                                    <Input type=\"password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"性别\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('sex', {\n                                    initialValue: 1,\n                                })(\n                                    <Radio.Group>\n                                        <Radio value={1}>男</Radio>\n                                        <Radio value={2}>女</Radio>\n                                    </Radio.Group>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"年龄\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('age', {\n                                    initialValue: 23,\n                                })(\n                                    <InputNumber min={18} max={60} />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"角色选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('role', {\n                                    initialValue: 3,\n                                })(\n                                    <Select>\n                                        {\n                                            roleSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"爱好选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('interest', {\n                                    initialValue: [2, 3, 4],\n                                })(\n                                    <Select mode=\"multiple\" placeholder=\"可多选爱好\">\n                                        {\n                                            interestSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"是否婚配\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('isMarried', {\n                                    initialValue: false,\n                                    valuePropName:'checked'\n                                })(\n                                    <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"生日\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('birthday', {\n                                    initialValue: moment('1993-06-06'),\n                                })(\n                                    <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                                )\n                            }\n                        </Form.Item>\n\n\n                        <Form.Item label=\"填写联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('address', {\n                                    initialValue: '四川省成都市高新区',\n                                })(\n                                    <Input.TextArea autosize={{\n                                        minRows: 4, maxRows: 6\n                                    }}></Input.TextArea>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"选择联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('addressSelect', {\n                                    initialValue: ['四川省','成都市','高新区'],\n                                })(\n                                    <Cascader\n                                        options={options}\n                                        expandTrigger=\"hover\"\n                                        displayRender={this.displayRender}\n                                    />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"早起时间\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('time', {\n                                    initialValue: moment('08-10-00',\"HH:mm:ss\"),\n                                })(\n                                    <TimePicker />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"头像\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userImg', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message:'请上传头像'\n                                        }\n                                    ]\n                                })(\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        showUploadList={false}\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\n                                        beforeUpload={this.beforeUpload}\n                                        onChange={this.handleChange}\n                                    >\n                                    {this.state.userImg?<img src={this.state.userImg} alt=\"头像\"/>:uploadButton}\n                                    </Upload>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            {\n                                getFieldDecorator('isAgree', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>我已阅读过<a>注册协议</a> </Checkbox>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}>注册</Button>\n                        </Form.Item>\n\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(Register);\n\n","import React from 'react';\nimport { Card, Table, Avatar,Badge,Tooltip, Button,Radio,Modal,notification }from 'antd';\nimport moment from 'moment';\nimport axios from './../../axios/axios';\nimport Utils from './../../utils/utils';\n\nexport default class BasicTable extends React.Component {\n    state = {\n        dataSource: [],\n        selectedRowKeys: [],\n        loading: false,\n        actionMode: 'radio',\n    }\n\n    params = {\n        page: 1,\n        pageSize:10\n    }\n\n    onChangeBtn = (e)=>{\n        this.setState({\n            actionMode: e.target.value,\n            selectedRowKeys: [],//单选和多选切换时将之前选中的清空\n            loading: false,\n        })\n    }\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk:()=> {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n    onRowClick = (record,index) => {\n        console.log('onRowClick->record',record);\n        console.log('onRowClick->index', index);\n        const selectedRowKeys = [index];\n        this.setState({\n            selectedRowKeys,\n            selectedItem:record\n        });\n    }\n\n   \n\n    onSelectChange = (selectedRowKeys,selectedRows) => {\n        console.log(selectedRowKeys);\n        console.log('selectedRows',selectedRows);\n        this.setState({\n            selectedRowKeys,\n            selectedRows\n        });\n    }\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params\n        }).then((res) => {\n            console.log('res',res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource:res.result.list,\n                    selectedRowKeys:[],\n                    selectedRows:null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n\n\n    render() {\n        const columns = [\n            {\n                title:'id',\n                key:'id',\n                dataIndex:'id'\n            },\n            {\n                title:'用户名',\n                key:'userName',\n                dataIndex:'userName'\n            },\n            {\n                title:'头像',\n                key:'userImg',\n                dataIndex: 'userImg',\n                render : (userImg) => {\n                    return userImg?<Avatar src={userImg}/>:<Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title:'性别',\n                key:'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title:'年龄',\n                key:'age',\n                dataIndex:'age'\n            },\n            {\n                title:'角色',\n                key:'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1:'皇帝',\n                        2:'大臣',\n                        3:'宰相',\n                        4:'将军',\n                        5:'臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title:'爱好',\n                key:'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1:'写代码',\n                        2:'撩妹子',\n                        3:'打篮球',\n                        4:'泡网吧',\n                        5:'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length >2? strArr.join(','):''}>\n                        <span>{strArr.length === 0?'无':strArr.length > 2?strArr.slice(0,2).join(',')+'...':strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n                  \n                }\n            },\n            {\n                title:'是否婚配',\n                key:'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title:'生日',\n                key:'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title:'联系地址',\n                key:'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length >10? address:''}>\n                        <span>{address.length >10?address.slice(0,10)+'...':address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title:'早起时间',\n                key:'time',\n                dataIndex:'time'\n            }\n        ]\n        //设置表格内容 居中显示\n        columns.map(item => {\n            item.align = \"center\";\n        })\n        const { loading, selectedRowKeys,actionMode } = this.state;\n        const rowSelection = {\n            type:actionMode,\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        \n\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Radio.Group defaultValue={actionMode} buttonStyle=\"solid\" onChange={this.onChangeBtn}>\n                                <Radio.Button value=\"radio\">单选</Radio.Button>\n                                <Radio.Button value=\"checkbox\">多选</Radio.Button>\n                            </Radio.Group>\n                            <Button\n                                style={{marginLeft:8}}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n                            \n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected?`当前选中${selectedRowKeys.length}项`:''}\n                            </span>\n                        </div>\n\n                    <Table\n                        size=\"middle\"\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        // pagination={false}\n                        pagination={this.state.pagination}\n                            rowSelection={rowSelection} //选择行\n                            onRow={(record,index) => {\n                                return {\n                                    onClick: () => {\n                                        //如果是单选模式可以点击行选中，多选不行\n                                        if (actionMode === \"radio\") {\n                                            this.onRowClick(record,index);\n                                        }\n                                    }\n                                }\n                            }}\n                    />\n                    </div>\n                    \n\n                    \n                </Card>\n            </div>\n        )\n    }\n\n    \n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Table, Avatar, Badge, Tooltip, Button, Radio, Modal, notification, Form, Switch } from 'antd';\nimport moment from 'moment';\nimport axios from '../../axios/axios';\nimport Utils from '../../utils/utils';\nconst FormItem = Form.Item;\n\nconst scrollY = { y: 300 };\nconst scrollX = { x: 1300 };\n\nexport default class HightTable extends React.Component {\n    state = {\n        dataSource: [],\n        selectedRowKeys: [],\n        loading: false,\n        scrollY: undefined,\n        scrollX: undefined,\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10\n    }\n\n\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration: 3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params\n        }).then((res) => {\n            console.log('res', res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n    //固定头部\n    handleScollYChange = (enable) => {\n        this.setState({\n            scrollY: enable ? scrollY : undefined\n        })\n    }\n\n    handleScollXChange = (enable) => {\n        this.setState({\n            scrollX: enable ? scrollX : undefined\n        })\n    }\n\n\n    render() {\n        const columns1 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => a.age - b.age\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '功能操作',\n                key: 'action',\n                dataIndex: 'action',\n                render: () => {\n                    return (\n                        <div>\n                            <Button size=\"small\" type=\"primary\">修改</Button>\n                            <Button onClick={this.handleDelete} size=\"small\" type=\"danger\">删除</Button>\n                            <Button size=\"small\" type=\"default\">记录</Button>\n                            <Button size=\"small\" type=\"dashed\">复制</Button>\n                        </div>\n                    )\n                }\n            },\n\n        ]\n\n        columns1.map((item,index) => {\n            item.align = \"center\";\n            item.width = 80\n            if (index === columns1.length - 1) {\n                item.width = 200\n            }\n        })\n\n\n\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n                fixed: 'left',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age'\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n                fixed: 'right',\n            }\n        ]\n\n       \n\n\n        //设置表格内容 居中显示\n        columns2.map(item => {\n            item.align = \"center\";\n            item.width = 80\n        })\n        const { loading, selectedRowKeys } = this.state;\n\n        const hasSelected = selectedRowKeys.length > 0;\n\n\n        return (\n            <div>\n                <Card title=\"高级表格-头固定-排序-操作按钮\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"头部固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollY} onChange={this.handleScollYChange} />\n                                </FormItem>\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns1}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollY}\n                        />\n                    </div>\n\n\n\n                </Card>\n\n                <Card title=\"高级表格-列固定\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"列固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollX} onChange={this.handleScollXChange} />\n                                </FormItem>\n\n\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns2}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollX}\n                        />\n                    </div>\n\n\n\n                </Card>\n            </div>\n        )\n    }\n\n\n\n\n\n}\n\n\n","import React from 'react';\nimport { Form, Select,Input,DatePicker,Checkbox,Button } from 'antd';\nimport utils from '../../utils/utils';\nimport moment from 'moment';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nclass FilterForm extends React.Component{\n    state = {};\n\n    search = () => {\n        let data = this.props.filterList;\n        let searchData = this.props.form.getFieldsValue();\n        // isUnTimeStamp 默认不传返回的就是时间戳 传了true 就按照传递的format进行格式化。\n        data.map((item) => {\n            if (item.type === 'timeSelect') {\n                let formatStr = item.format || 'YYYY-MM-DD';\n                let start_time_field = item.startField || 'startTime';\n                let end_time_field = item.endField || 'endTime';\n                if (!item.isUnTimeStamp) {\n                    searchData[start_time_field] = searchData[start_time_field]?moment(searchData[start_time_field]).unix():'';\n                    searchData[end_time_field] = searchData[end_time_field]?moment(searchData[end_time_field]).unix():'';\n                } else {\n                    searchData[start_time_field] = searchData[start_time_field]?searchData[start_time_field].format(formatStr):'';\n                    searchData[end_time_field] = searchData[end_time_field]?searchData[end_time_field].format(formatStr):'';\n                }\n                \n            }\n        })\n        this.props.search(searchData);\n    }\n\n    getItems = () => {\n        const { getFieldDecorator } = this.props.form;\n        let data = this.props.filterList;\n        let formItems = [];\n        if (data && data.length > 0) {\n            data.map(item => {\n                let label = item.label;\n                let field = item.field;\n                let initialValue = item.initialValue || '';\n                let width = item.width || 120;\n                let list = item.list || [];\n                let key = item.key || '';\n                let value = item.value || '';\n                let placeholder = item.placeholder || '请选择';\n                let showSearch = item.showSearch || false; //是否开启搜索\n                let mode = item.mode && item.mode === 'm' ? \"multiple\" : '';//m多选 否则单选\n\n                //input\n                let allowClear = item.allowClear || false;//是否显示清除按钮\n                let inputType = item.inputType || 'text';//类型\n\n                //时间区间选择相关属性\n                let showTime = item.showTime || true;//时间选择 是否显示选择时分秒\n                let format = item.format || 'YYYY-MM-DD HH:mm:ss';\n\n                let startField = item.startField || 'startTime';\n                let endField = item.endField || 'endTime';\n\n                let initialStartTime = item.initialStartTime || null;//开始时间 初始值\n                let initialEndTime = item.initialEndTime || null;//结束时间 初始值\n                \n                let startPlaceholder = item.startPlaceholder || '开始时间';\n                let endPlaceholder = item.endPlaceholder || '结束时间';\n\n\n                switch (item.type) {\n                    case 'select':\n                        let select = <FormItem key={field} label={label}>\n                            {\n                                getFieldDecorator([field], {\n                                    initialValue:initialValue\n                                })(\n                                    <Select\n                                        key={field}\n                                        style={{ width }}\n                                        placeholder={placeholder}\n                                        showSearch={showSearch}\n                                        mode={mode}\n                                    >\n                                        { utils.getOptions(list,key,value)}\n                                    </Select>\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(select);\n                        break;\n                    case 'input':\n                        let input = <FormItem key={field} label={label}>\n                            {\n                                getFieldDecorator([field], {\n                                    initialValue:initialValue\n                                })(\n                                    <Input\n                                        style={{ width }}\n                                        type={inputType}\n                                        placeholder={placeholder}\n                                        allowClear={allowClear}\n                                    />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(input);\n                        break;\n                    case 'timeSelect':\n                        let startTime = <FormItem label={label} key={startField}>\n                            {\n                                getFieldDecorator([startField], {\n                                    initialValue: initialStartTime,\n                                })(\n                                    <DatePicker\n                                        style={{width}}\n                                        showTime={showTime}\n                                        placeholder={startPlaceholder}\n                                        format={format} />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(startTime);\n\n                        let endTime = <FormItem label=\"~\" colon={false} key={endField}>\n                            {\n                                getFieldDecorator([endField], {\n                                    initialValue: initialEndTime,\n                                })(\n                                    <DatePicker\n                                        style={{ width }}\n                                        showTime={showTime}\n                                        placeholder={endPlaceholder}\n                                        format={format} />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(endTime);\n                        break;\n                    case 'checkbox':\n                    let checkbox = <FormItem key={field}>\n                        {\n                            getFieldDecorator([field], {\n                                valuePropName: 'checked',\n                                initialValue: initialValue || false,\n                            })(\n                                <Checkbox>\n                                    {label}\n                                </Checkbox>\n                            )\n                        }\n                    </FormItem>\n                    formItems.push(checkbox);\n                        break;\n                    \n                }\n            })\n            return formItems;\n\n        }\n    }\n\n    render() {\n        return (\n            <Form layout=\"inline\">\n                {this.getItems()}\n                <FormItem>\n                    <Button onClick={this.search} type=\"primary\" icon=\"search\" style={{ margin: '0 10px' }}>搜索</Button>\n                    <Button onClick={()=>this.props.form.resetFields()}>重置</Button>\n                 </FormItem>\n            </Form>\n        )\n    }\n\n\n}\n\nexport default Form.create({})(FilterForm);\n","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\n\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst cityIdArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '北京' },\n    { id: 2, name: '上海' },\n    { id: 3, name: '广州' },\n    { id: 4, name: '深圳' },\n    { id: 5, name: '成都' }\n]\n\nconst modeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '指定停车点模式' },\n    { id: 2, name: '禁停区模式' },\n]\nconst opModeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '自营' },\n    { id: 2, name: '加盟' },\n]\n\nexport default class City extends React.Component {\n   \n    state = {\n        isShowOpenCityModal: false,\n    };\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n    \n\n    getList() {\n        axios.getList(this,'/open/city',this.params);\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n\n    //开通城市按钮-显示Modal\n    handleOpenCity = () => {\n        this.setState(() => {\n            return {\n                isShowOpenCityModal: true\n            }\n        })\n    }\n\n    //弹框-开通城市-确定提交\n    openCitySubmit = () => {\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\n        message.info(`开通城市所选数据：${JSON.stringify(cityInfo)}`);\n        setTimeout(() => {\n            this.setState(() => {\n                return {\n                    isShowOpenCityModal: false\n                }\n            })\n            notification.success({\n                message: '提示',\n                description: '开通成功',\n            })\n        }, 3000)\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id',\n                width: 80,\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name',\n                width: 135,\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render: (mode) => {\n                    return mode == 1 ? '停车点' : '禁停区';\n                },\n                width: 135,\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode == 1 ? '自营' : '加盟';\n                },\n                width: 100,\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name',\n                width: 135,\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map((item) => {\n                        return item.user_name;\n                    }).join(',');\n                },\n                width: 150,\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time',\n                render: (open_time) => {\n                    return moment(open_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: (update_time) => {\n                    return moment(update_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name',\n            }\n        ]\n\n        columns.map((item, index) => {\n            item.align = \"center\";\n        })\n\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'select',\n                label: '用车模式',\n                field: 'mode',\n                placeholder: '请选择用车模式',\n                width: 140,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '指定停车点模式' },\n                    { id: 2, name: '禁停区模式' },\n                ]\n            },\n            {\n                type: 'select',\n                label: '营运模式',\n                field: 'op_mode',\n                placeholder: '请选择营运模式',\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '自营' },\n                    { id: 2, name: '加盟' },\n                ]\n            },\n            {\n                type: 'select',\n                label: '加盟商授权状态',\n                field: 'auth_status',\n                placeholder: '请选择加盟商授权状态',\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '已授权' },\n                    { id: 2, name: '未授权' },\n                ]\n            },\n            // {\n            //     type: 'input',\n            //     inputType:'number',\n            //     label: '账号',\n            //     field: 'account',\n            //     placeholder: '请输入账号',\n            //     width:150,\n            //     initialValue: '',\n            //     allowClear:true,\n            // },\n            // {\n            //     type: 'checkbox',\n            //     label: '精确',\n            //     field: 'isMatch',\n            // },\n            // {\n            //     type: 'timeSelect',\n            //     label: '注册时间',\n            //     format:'YYYY-MM-DD',\n            //     width:200,\n            // },\n\n        ]\n\n\n\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search}\n                    />\n                </Card>\n                <Card style={{ marginTop: 20 }}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        scroll={{ y: 350 }}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCityModal}\n                    onCancel={() => {\n                        this.setState(() => {\n                            return {\n                                isShowOpenCityModal: false\n                            }\n                        })\n                        this.cityForm.props.form.resetFields();\n                    }}\n                    onOk={this.openCitySubmit}\n                >\n                    <OpenCityFormModal wrappedComponentRef={(open) => { this.cityForm = open; }} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nclass OpenCityFormModal extends React.Component {\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        }\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"选择城市\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('city_id', {\n                            initialValue: 1,\n                        })(\n                            <Select style={{ width: 100 }}>\n                                {\n                                    cityIdArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"运营模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('op_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    opModeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"用车模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('use_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    modeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n            </Form>\n        );\n    }\n}\n\nOpenCityFormModal = Form.create({})(OpenCityFormModal);","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification, DatePicker } from 'antd';\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\nimport FilterForm from '../../components/filterForm/FilterForm';\n\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nexport default class Order extends React.Component {\n    state = {\n        list: [],//列表数据\n        pagination:()=>{},//分页\n        selectedRowKeys: [],//选择列表index数组 单选就是类似：[0]\n        selectedItem: {},//选中列表项\n        isShowFinishOrderModal: false,//是否显示结束订单弹框\n        orderInfo: {},//结束订单弹框详情\n        finishOrderBtnDisabled: true,\n        orderDetailBtnDisabled:true,\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    onRowClick = (item,index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            finishOrderBtnDisabled: false,\n            orderDetailBtnDisabled: false,\n        })\n    }\n\n    //订单详情\n    orderDetail = () => {\n        let orderId = this.state.selectedItem.id;\n        window.open(`/#/common/order/detail/${orderId}`,'_blank')\n    }\n\n    //结束订单 弹框\n    finishOrder = () => {\n        let item = this.state.selectedItem;\n       \n        // if (Object.keys(item).length === 0) {\n        //     //判断是否选择了，这里是由于在constructor里面的state初始化了selectedItem为{}\n        //     Modal.info({\n        //         title: '提示',\n        //         content:'请选择一条订单进行结束'\n        //     })\n        //     return;\n        // }\n        this.getOrderInfo(item);\n    }\n\n    //结束订单提交\n    onFinishOrderSubmit = () => {\n        axios.ajax({\n            url: '/order/finish',\n            method: 'post',\n            data: {\n                orderId:this.state.selectedItem.id\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success('订单结束成功');\n                this.setState({\n                    isShowFinishOrderModal:false\n                })\n                this.getList();\n                this.setState({\n                    selectedRowKeys: [],//结束后取消掉之前的选中\n                    selectedItem: {},//结束后重置详情数据\n                    finishOrderBtnDisabled: true,\n                    orderDetailBtnDisabled: true,\n                    \n                })\n            }\n        })\n    }\n\n    //获取订单详情\n    getOrderInfo = (item) => {\n        axios.ajax({\n            url: '/order/finish/info',\n            params: {\n                orderId:item.id\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    isShowFinishOrderModal:true,\n                    orderInfo:res.result\n                })\n            }\n        })\n    }\n\n    getList = () => {\n        axios.getList(this,'/order/list',this.params);\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '订单编号',\n                dataIndex: 'orderSn',\n            },\n            {\n                title: '车辆编号',\n                dataIndex: 'bikeSn',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName',\n            },\n            {\n                title: '手机号码',\n                dataIndex: 'mobile',\n            },\n            {\n                title: '里程',\n                dataIndex: 'distance',\n                render: (distance) => {\n                    return distance/1000 + 'km'\n                }\n            },\n            {\n                title: '行程时长',\n                dataIndex: 'totalTime',\n            },\n            {\n                title: '状态',\n                dataIndex: 'status',\n                render: (status) => {\n                    return status === 1?'进行中':'行程结束'\n                }\n            },\n            {\n                title: '开始时间',\n                dataIndex:'startTime',\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'endTime',\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'totalFee',\n            },\n            {\n                title: '实付金额',\n                dataIndex: 'userPay',\n            }\n        ]\n        columns.map(item => item.align = \"center\");\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        }\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'timeSelect',\n                label: '订单时间',\n                width: 200,\n            },\n            {\n                type: 'select',\n                label: '订单状态',\n                field: 'orderStatus',\n                placeholder: '请选择订单状态',\n                width: 135,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '进行中' },\n                    { id: 2, name: '进行中(临时锁车)' },\n                    { id: 3, name: '行程结束' }\n                ]\n            },\n        ]\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search} />\n                </Card>\n                <Card style={{marginTop:20}}>\n                    <Button type=\"primary\" disabled={this.state.orderDetailBtnDisabled} onClick={this.orderDetail}>订单详情</Button>\n                    <Button type=\"primary\" disabled={this.state.finishOrderBtnDisabled} style={{marginLeft:10}} onClick={this.finishOrder}>结束订单</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item,index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item,index);\n                                }\n                            }\n                        }}\n                    />\n                </div>\n                <Modal\n                    title=\"结束订单\"\n                    width={600}\n                    visible={this.state.isShowFinishOrderModal}\n                    onCancel={() => {\n                        this.setState({\n                            isShowFinishOrderModal:false,\n                        })\n                    }}\n                    onOk={this.onFinishOrderSubmit}\n                >\n                    <Form layout=\"horizontal\">\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\n                            {this.state.orderInfo.bikeSn}\n                        </FormItem>\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\n                            {this.state.orderInfo.battery + '%'}\n                        </FormItem>\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\n                            {this.state.orderInfo.startTime}\n                        </FormItem>\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\n                            {this.state.orderInfo.location}\n                        </FormItem>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport { Card } from 'antd';\nimport axios from '../../axios/axios';\nimport './detail.less';\nimport Utils from '../../utils/utils';\n\n\n\nfunction* getInfo(orderId) {\n    yield axios.ajax({\n            url: '/order/detail',\n            params: {\n                orderId,\n            }\n        })\n}\n\nexport default class OrderDetail extends React.Component{\n    state = {\n        orderInfo: {}\n    }\n\n    componentDidMount() {\n        let orderId = this.props.match.params.orderId * 1;\n        this.getOrderDetailInfo(orderId);\n    }\n\n    getOrderDetailInfo = (orderId) => {\n        let order = getInfo(orderId).next().value;\n        order.then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                })\n                this.renderMap(res.result);\n            }\n        })\n\n        // axios.ajax({\n        //     url: '/order/detail',\n        //     data: {\n        //         orderId,\n        //     }\n        // }).then((res) => {\n        //     if (res.code === 0) {\n        //         this.setState({\n        //             orderInfo: res.result\n        //         })\n        //         this.renderMap(res.result);\n        //     }\n        // })\n    }\n\n    renderMap = (result)=>{\n        this.map = new window.BMap.Map('orderDetailMap');\n        this.addMapControl();\n        this.drawBikeRoute(result.positionList);\n        this.drwaServiceArea(result.area);\n    }\n\n    //添加控件\n    addMapControl = () => {\n        this.map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        this.map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    }\n    //画行使路线\n    drawBikeRoute = (positionList) => {\n        let startPoint = '';\n        let endPoint = '';\n        if (positionList.length > 0) {\n            let first = positionList[0];\n            let last = positionList[positionList.length - 1];\n            startPoint = new window.BMap.Point(first.lon, first.lat);\n            endPoint = new window.BMap.Point(last.lon, last.lat);\n            let startIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/start_point.png`,\n                new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon });\n            this.map.addOverlay(startMarker);\n\n            //终点\n            let endIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/end_point.png`,\n            new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\n            this.map.addOverlay(endMarker);\n            \n            //连接路线\n            let trackPoint = [];\n            positionList.map((item) => {\n                trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n            })\n            let polyline = new window.BMap.Polyline(trackPoint, {\n                strokeColor:'#1869AD',\n                strokeWeight:3,\n                strokeOpacity:1\n            });\n            this.map.addOverlay(polyline);\n            this.map.centerAndZoom(endPoint, 11);\n\n        }\n    }\n\n    //画服务区\n    drwaServiceArea = (areaList) => {\n        let trackPoint = [];\n        areaList.map((item) => {\n            trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n        })\n        let polygon = new window.BMap.Polygon(trackPoint, {\n            strokeColor:'#CE0000',\n            strokeWeight:4,\n            strokeOpacity: 1,\n            fillColor: '#ff8605',\n            fillOpacity:0.4\n        });\n        this.map.addOverlay(polygon);\n    }\n\n\n    render() {\n        const orderInfo = this.state.orderInfo;\n        return (\n            <div>\n                <Card title=\"订单详情\">\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{orderInfo.mode === 1?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{orderInfo.orderSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                    <div className=\"detail-form-content\">{orderInfo.bikeSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{orderInfo.userName}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{orderInfo.mobile}</div>\n                            </li> \n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{orderInfo.startLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{orderInfo.endLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{orderInfo.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Card, Avatar, Badge, Tooltip, Table, message, Button, Modal, Form, Input, Select, Radio, InputNumber, DatePicker,Switch } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\nimport axios from '../../axios/axios';\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nconst roleSelectList = [\n    { id: 1, value: '皇帝' },\n    { id: 2, value: '大臣' },\n    { id: 3, value: '宰相' },\n    { id: 4, value: '将军' },\n    { id: 5, value: '臣子' }\n]\nconst interestSelectList = [\n    { id: 1, value: '写代码' },\n    { id: 2, value: '撩妹子' },\n    { id: 3, value: '打篮球' },\n    { id: 4, value: '泡网吧' },\n    { id: 5, value: 'K歌' }\n]\n\nexport default class User extends React.Component {\n    \n    state = {\n        actionBtndisabled: true,//\n        deleteVisible: false,//删除强提示\n        title: '',\n        isVisible: false,\n        type: ''\n    };\n\n    params = {\n        page: 1,\n        pageSize: 10\n    }\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n    getList = () => {\n        axios.getList(this, '/user/list', this.params);\n    }\n\n    onRowClick = (item, index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            actionBtndisabled: false,\n        })\n    }\n    componentDidMount() {\n        this.getList();\n    }\n\n\n    // 创建 修改 详情\n    handleOperator = (type) => {\n        let item = this.state.selectedItem;\n        if (type === 'add') {\n            this.setState(() => {\n                return {\n                    title: '创建员工',\n                    isVisible: true,\n                    type,\n                    userInfo: {}\n                }\n            })\n        } else {\n            this.setState({\n                title: type === 'update' ? '修改员工' : '员工详情',\n                isVisible: true,\n                userInfo: item,\n                type\n            })\n        }\n    }\n\n    resetSubmit = () => {\n        this.setState({\n            isVisible: false,\n            selectedRowKeys: [],//结束后取消掉之前的选中\n            actionBtndisabled: true,\n        })\n        this.userForm.props.form.resetFields();\n    }\n\n    // 创建 修改 详情 -确定\n    handleSubmit = () => {\n        let type = this.state.type;\n        let _this = this;\n        if (type === 'detail') {\n            this.setState({\n                isVisible: false,\n                selectedRowKeys: [],//结束后取消掉之前的选中\n                actionBtndisabled: true,\n            })\n            return;\n        }\n\n\n        this.userForm.props.form.validateFields((err, values) => {\n            values.birthday = moment(values.birthday).unix();\n            if (!err) {\n                \n                axios.ajax({\n                    url:type == 'add'?'/user/add':'/user/update',\n                    data:{\n                        ...values\n                    }\n                }).then((res)=>{\n                    if(res.code === 0){\n                        _this.resetSubmit();\n                        _this.getList();\n                    }\n                })\n            }\n        })\n    }\n    //删除\n    delete = () => {\n        let item = this.state.selectedItem;\n        let _this = this;\n        Modal.confirm({\n            title: '确定要删除此用户吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                axios.ajax({\n                    url: '/user/delete',\n                    data: {\n                        userId: item.id,\n                    }\n                }).then(res => {\n                    if (res.code === 0) {\n                        message.success('删除成功');\n                        _this.setState({\n                            selectedRowKeys: [],//结束后取消掉之前的选中\n                            actionBtndisabled: true,\n                        })\n                        _this.getList();\n                    } else {\n                        message.success(res.msg);\n\n                    }\n                })\n            }\n\n        })\n\n\n    }\n\n    render() {\n        const filterList = [\n            {\n                type: 'input',\n                label: '用户名',\n                field: 'userName',\n                placeholder: '请输入用户名'\n            },\n            {\n                type: 'input',\n                label: '联系地址',\n                field: 'address',\n                placeholder: '请输入联系地址'\n            }\n        ]\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age'\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ]\n        //设置表格内容 居中显示\n        columns.map(item => item.align = \"center\");\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n        }\n        let footer = {};\n        if (this.state.type === 'detail') {\n            footer = { footer: null }\n        }\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search}\n                    />\n                </Card>\n                <Card style={{ marginTop: 20 }}>\n                    <Button icon=\"plus\" onClick={() => this.handleOperator('add')}>创建</Button>\n                    <Button icon=\"edit\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={() => this.handleOperator('update')}>修改</Button>\n                    <Button icon=\"info-circle\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={() => this.handleOperator('detail')}>详情</Button>\n                    <Button icon=\"delete\" type=\"danger\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={this.delete}>删除</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item, index);\n                                }\n                            }\n                        }}\n                    />\n                </div>\n                <Modal\n                    width={800}\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.resetSubmit();\n                    }}\n                    {...footer}\n\n                >\n                    <UserForm\n                        userInfo={this.state.userInfo}\n                        type={this.state.type}\n                        wrappedComponentRef={(inset) => this.userForm = inset}\n                    />\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nclass UserForm extends React.Component {\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 16 }\n        }\n        const userInfo = this.props.userInfo || {};\n        const type = this.props.type;\n\n        let getRole = (role) => {\n            let name = '';\n            roleSelectList.map(item => {\n                if (item.id === role) {\n                    name = item.value;\n                }\n            })\n            return name;\n        }\n\n        let getInterest = (interest) => {\n            interest = interest || [];\n            let names = [];\n            interestSelectList.map((item1) => {\n                interest.map((item2) => {\n                    if (item1.id === item2) {\n                        names.push(item1.value)\n                    }\n                })\n            })\n            return names.join(',');\n        }\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"姓名\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.userName :\n                            getFieldDecorator('userName', {\n                                initialValue: userInfo.userName,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '用户名不能为空'\n                                    },\n                                    {\n                                        min: 5, max: 12,\n                                        message: '用户名长度5-12'\n                                    }, {\n                                        pattern: new RegExp('^\\\\w+$', 'g'),\n                                        message: '用户名必须是字母或者数字'\n                                    }\n                                ]\n                            })(\n                                <Input placeholder=\"请输入用户名\" />\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"性别\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.sex === 1 ? '男' : '女' :\n                            getFieldDecorator('sex', {\n                                initialValue: userInfo.sex || 1\n                            })(\n                                <RadioGroup>\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                </RadioGroup>\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"角色\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? getRole(userInfo.role) :\n                            getFieldDecorator('role', {\n                                initialValue: userInfo.role\n                            })(\n                                <Select>\n                                    {\n                                        roleSelectList.map((item, index) => {\n                                            return <Option key={index} value={item.id}>{item.value}</Option>\n                                        })\n                                    }\n                                </Select>\n                            )\n                    }\n                </FormItem>\n                <Form.Item label=\"爱好\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? getInterest(userInfo.interest) :\n                            getFieldDecorator('interest', {\n                                initialValue: userInfo.interest,\n                            })(\n                                <Select mode=\"multiple\" placeholder=\"可多选爱好\">\n                                    {\n                                        interestSelectList.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            )\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"是否婚配\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.isMarried ? '是':'否' :\n                        getFieldDecorator('isMarried', {\n                            initialValue: userInfo.isMarried || false,\n                        })(\n                            <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" />\n                        )\n                    }\n                </Form.Item>\n\n                <FormItem label=\"生日\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? moment(userInfo.birthday * 1000).format('YYYY-MM-DD') :\n                            getFieldDecorator('birthday', {\n                                initialValue: userInfo.birthday ? moment(userInfo.birthday * 1000) : null\n                            })(\n                                <DatePicker placeholder=\"请选择出生日期\" format=\"YYYY-MM-DD\" />\n                            )\n                    }\n                </FormItem>\n            </Form>\n        )\n    }\n}\nUserForm = Form.create({})(UserForm);\n","import React from 'react';\n\nimport { Card } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\nimport Axios from '../../axios/axios';\nimport Utils from '../../utils/utils';\n\nexport default class BikeMap extends React.Component{\n    state = {}\n\n    params = {};\n    search = (data) => {\n        this.params = data;\n        this.getMapData();\n    }\n\n    getMapData = () => {\n        Axios.ajax({\n            url: '/map/bike',\n            params:this.params\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    totalCount:res.result.totalCount\n                })\n                this.renderMap(res.result);\n            }\n        })\n    }\n\n    renderMap = (data) => {\n        let list = data.routeList;\n        this.map = new window.BMap.Map('container', { enableMapClick: false });\n        let first = list[0].split(',');\n        let last = list[list.length-1].split(',');\n        let startPoint = new window.BMap.Point(first[0], first[1]);\n        let endPoint = new window.BMap.Point(last[0], last[1]);\n        this.map.centerAndZoom(endPoint, 11);\n        \n        //添加起始图标\n        let startPointIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/start_point.png`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        var bikeMarkerStart = new window.BMap.Marker(startPoint, { icon: startPointIcon });\n        this.map.addOverlay(bikeMarkerStart);\n\n        //添加结束图标\n        let endPointIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/end_point.png`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        var bikeMarkerEnd = new window.BMap.Marker(endPoint, { icon: endPointIcon });\n        this.map.addOverlay(bikeMarkerEnd);\n\n\n        //链接起始结束路线\n        let routeList = [];\n        list.map(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            routeList.push(point);\n        })\n        let polyline = new window.BMap.Polyline(routeList,{\n            strokeColor: \"#ef4136\",\n            strokeWeight: 3,\n            strokeOpacity: 1\n        })\n        this.map.addOverlay(polyline);\n\n        //添加服务区\n        let serviceList = data.serviceList;\n        let servicePointist = [];\n        serviceList.map(item => {\n            let point = new window.BMap.Point(item.lon, item.lat);\n            servicePointist.push(point);\n        })\n\n        let servicesPolygon = new window.BMap.Polygon(servicePointist,{\n            strokeColor: \"#ef4136\",\n            strokeWeight: 3,\n            strokeOpacity: 1\n        })\n        this.map.addOverlay(servicesPolygon);\n\n        //添加地图中的自行车\n        let bikeList = data.bikeList;\n        let bikeIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/bike.jpg`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n\n        bikeList.map(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            let bikeMarker = new window.BMap.Marker(point, { icon: bikeIcon });\n            this.map.addOverlay(bikeMarker);\n        })\n\n        this.addMapControl();\n    }\n\n    //添加控件\n    addMapControl = () => {\n        this.map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        this.map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    }\n\n    componentDidMount() {\n        this.getMapData();\n    }\n\n    render() {\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'timeSelect',\n                label: '行使时间',\n                width: 200,\n            }\n        ]\n        return (\n            <div>\n                <Card>\n                    <FilterForm filterList={filterList} search={this.search} />\n                </Card>\n                <Card style={{marginTop:10}}>\n                    <div>共{this.state.totalCount}辆车</div>\n                    <div id=\"container\" style={{height:500}}></div>\n                </Card>\n            </div>\n        )\n    }\n}","\nlet contrastColor = '#eee';\nlet axisCommon = function () {\n    return {\n        axisLine: {\n            lineStyle: {\n                color: contrastColor\n            }\n        },\n        axisTick: {\n            lineStyle: {\n                color: contrastColor\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        splitLine: {\n            lineStyle: {\n                type: 'dashed',\n                color: '#aaa'\n            }\n        },\n        splitArea: {\n            areaStyle: {\n                color: contrastColor\n            }\n        }\n    };\n};\n\nlet colorPalette = ['#dd6b66','#759aa0','#e69d87','#8dc1a9','#ea7e53','#eedd78','#73a373','#73b9bc','#7289ab', '#91ca8c','#f49f42'];\nlet theme = {\n    color: colorPalette,\n    backgroundColor: '#333',\n    tooltip: {\n        axisPointer: {\n            lineStyle: {\n                color: contrastColor\n            },\n            crossStyle: {\n                color: contrastColor\n            }\n        }\n    },\n    legend: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    textStyle: {\n        color: contrastColor\n    },\n    title: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: contrastColor\n            }\n        }\n    },\n    dataZoom: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    timeline: {\n        lineStyle: {\n            color: contrastColor\n        },\n        itemStyle: {\n            normal: {\n                color: colorPalette[1]\n            }\n        },\n        label: {\n            normal: {\n                textStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        controlStyle: {\n            normal: {\n                color: contrastColor,\n                borderColor: contrastColor\n            }\n        }\n    },\n    timeAxis: axisCommon(),\n    logAxis: axisCommon(),\n    valueAxis: axisCommon(),\n    categoryAxis: axisCommon(),\n\n    line: {\n        symbol: 'circle'\n    },\n    graph: {\n        color: colorPalette\n    },\n    gauge: {\n        title: {\n            textStyle: {\n                color: contrastColor\n            }\n        }\n    },\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#FD1050',\n                color0: '#0CF49B',\n                borderColor: '#FD1050',\n                borderColor0: '#0CF49B'\n            }\n        }\n    }\n};\n\nexport default theme;","import React from 'react';\nimport { Card } from 'antd';\n\nimport echartTheme from '../echartTheme';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', echartTheme);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'bar',\n                    data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            legend:{\n                data:['ofo','mobile','blue gogo']\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'ofo',\n                    type: 'bar',\n                    data: [2000, 3000, 5500, 7000, 8000, 12000, 20000]\n                },\n                {\n                    name: 'mobile',\n                    type: 'bar',\n                    data: [1500, 3000, 4500, 6000, 8000, 10000, 15000]\n                },\n                {\n                    name: 'blue gogo',\n                    type: 'bar',\n                    data: [1000, 2000, 2500, 4000, 6000, 7000, 8000]\n                }\n            ]\n        }\n        return option;\n    }\n    render() {\n        return (\n            <div>\n                <Card title=\"柱形图一\">\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption()} />\n                </Card>\n                <Card title=\"柱形图二\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption2()} />\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n","var colorPalette = [\n    '#C1232B',\n    '#27727B',\n    '#FCCE10',\n    '#E87C25',\n    '#B5C334',\n    '#FE8463',\n    '#9BCA63',\n    '#FAD860',\n    '#F3A43B',\n    '#60C0DD',\n    '#D7504B',\n    '#C6E579',\n    '#F4E001',\n    '#F0805A',\n    '#26C0C0'\n];\nexport default {\n\n    color: colorPalette,\n\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'\n        }\n    },\n\n    visualMap: {\n        color: ['#C1232B', '#FCCE10']\n    },\n\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: colorPalette[0]\n            }\n        }\n    },\n\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',\n        axisPointer: {\n            type: 'line',\n            lineStyle: {\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle: {\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',\n        fillerColor: 'rgba(181,195,52,0.2)',\n        handleColor: '#27727B'\n    },\n\n    categoryAxis: {\n        axisLine: {\n            lineStyle: {\n                color: '#27727B'\n            }\n        },\n        splitLine: {\n            show: false\n        }\n    },\n\n    valueAxis: {\n        axisLine: {\n            show: false\n        },\n        splitArea: {\n            show: false\n        },\n        splitLine: {\n            lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    timeline: {\n        lineStyle: {\n            color: '#27727B'\n        },\n        controlStyle: {\n            normal: {\n                color: '#27727B',\n                borderColor: '#27727B'\n            }\n        },\n        symbol: 'emptyCircle',\n        symbolSize: 3\n    },\n\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth: 2,\n                borderColor: '#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth: 0\n            }\n        },\n        symbol: 'circle',\n        symbolSize: 3.5\n    },\n\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',\n                color0: '#B5C334',\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',\n                    color0: '#B5C334'\n                }\n            }\n        }\n    },\n\n    graph: {\n        color: colorPalette\n    },\n\n    map: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: '#C1232B'\n                }\n            },\n            emphasis: {\n                textStyle: {\n                    color: 'rgb(100,0,0)'\n                }\n            }\n        },\n        itemStyle: {\n            normal: {\n                areaColor: '#ddd',\n                borderColor: '#eee'\n            },\n            emphasis: {\n                areaColor: '#fe994e'\n            }\n        }\n    },\n\n    gauge: {\n        axisLine: {\n            lineStyle: {\n                color: [\n                    [\n                        0.2, '#B5C334'\n                    ],\n                    [\n                        0.8, '#27727B'\n                    ],\n                    [1, '#C1232B']\n                ]\n            }\n        },\n        axisTick: {\n            splitNumber: 2,\n            length: 5,\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        splitLine: {\n            length: '5%',\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        title: {\n            offsetCenter: [0, -20]\n        }\n    }\n}","import React from 'react';\nimport { Card } from 'antd';\n\nimport themeLight from '../themeLight';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', themeLight);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x : 'center'\n            },\n            legend : {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: ['周一','周二','周三','周四','周五','周六','周日']\n            },\n            tooltip: {\n                trigger : 'item',\n                formatter : \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name : '订单量',\n                    type : 'pie',\n                    radius : '55%',\n                    center : [\n                        '50%', '60%'\n                    ],\n                    data:[\n                        {\n                            value:1000,\n                            name:'周一'\n                        },\n                        {\n                            value: 1000,\n                            name: '周二'\n                        },\n                        {\n                            value: 2000,\n                            name: '周三'\n                        },\n                        {\n                            value: 1500,\n                            name: '周四'\n                        },\n                        {\n                            value: 3000,\n                            name: '周五'\n                        },\n                        {\n                            value: 2000,\n                            name: '周六'\n                        },\n                        {\n                            value: 1200,\n                            name: '周日'\n                        },\n                    ],\n                    itemStyle : {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2() {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: ['50%', '70%'],\n                    center: [\n                        '50%', '60%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ],\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption3() {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: '55%',\n                    center: [\n                        '50%', '50%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ].sort(function (a, b) { return a.value - b.value; }),\n                    roseType: 'radius',\n                    animationType: 'scale',\n                    animationEasing: 'elasticOut',\n                    animationDelay: function (idx) {\n                        return Math.random() * 200;\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"饼图一\">\n                    <ReactEcharts\n                        theme=\"heng\"\n                        style={{ height: 500 }}\n                        option={this.getOption()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                    />\n                </Card>\n                <Card title=\"饼图二\" style={{marginTop:10}}>\n                    <ReactEcharts\n                        theme=\"heng\"\n                        style={{ height: 500 }}\n                        option={this.getOption2()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                    />\n                </Card>\n                <Card title=\"饼图三\" style={{marginTop:10}}>\n                    <ReactEcharts\n                        option={this.getOption3()}\n                        theme=\"heng\"\n                        notMerge={true}\n                        lazyUpdate={true}\n                        style={{ height: 500 }}/>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport { Card } from 'antd';\n\nimport echartTheme from '../echartTheme';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', echartTheme);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'line'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'line'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            legend:{\n                data:['ofo','mobile','blue gogo']\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'ofo',\n                    type: 'line',\n                    data: [2000, 3000, 5500, 7000, 8000, 12000, 20000]\n                },\n                {\n                    name: 'mobile',\n                    type: 'line',\n                    data: [1500, 3000, 4500, 6000, 8000, 10000, 15000]\n                },\n                {\n                    name: 'blue gogo',\n                    type: 'line',\n                    data: [1000, 2000, 2500, 4000, 6000, 7000, 8000]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                type:'category',\n                boundaryGap: false,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ],\n                    areaStyle: {}\n                }\n            ]\n        }\n        return option;\n    }\n    render() {\n        return (\n            <div>\n                <Card title=\"折线图一\">\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n                <Card title=\"折线图二\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption2()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n                <Card title=\"折线图三\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption3()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n","import React from \"react\";\nimport {\n    Card,\n    Button,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Switch,\n    message,\n    Tree\n} from \"antd\";\nimport axios from \"../../axios/axios\";\nimport moment from \"moment\";\nimport menuConfig from \"../../config/menuConfig\";\n\nconst FormItem = Form.Item;\nconst TreeNode = Tree.TreeNode;\n\nexport default class Permission extends React.Component {\n    state = {\n        btnDisabled: true,\n        isShowCreateModal: false,\n        isShowAuthModal: false //显示设置权限弹框\n    };\n    params = {\n        page: 1,\n        pageSize: 10\n    };\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    getList = () => {\n        axios.getList(this, \"/role/list\", this.params);\n    };\n\n    onRowClick = (item, index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            btnDisabled: false\n        });\n    };\n\n    handleCreate = () => {\n        this.setState({\n            isShowCreateModal: true\n        });\n    };\n\n    onCreateSubmit = () => {\n        this.roleForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                axios\n                    .ajax({\n                        url: \"/role/add\",\n                        data: values\n                    })\n                    .then(res => {\n                        if (res.code === 0) {\n                            message.success(\"创建成功!\");\n                            this.getList();\n                            this.roleForm.props.form.resetFields();\n                            this.setState({\n                                isShowCreateModal: false\n                            });\n                        }\n                    });\n            }\n        });\n    };\n\n    handleAuth = () => {\n        let item = this.state.selectedItem;\n        this.setState({\n            isShowAuthModal: true,\n            menus: item.menus\n        });\n    };\n\n    setMenus = menus => {\n        this.setState({\n            menus\n        });\n    };\n\n    onAuthSubmit = () => {\n        this.authForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                axios\n                    .ajax({\n                        url: \"/role/auth\",\n                        data: {\n                            ...values,\n                            menus: this.state.menus\n                        }\n                    })\n                    .then(res => {\n                        if (res.code === 0) {\n                            message.success(\"设置成功!\");\n                            this.getList();\n                            this.setState({\n                                isShowAuthModal: false\n                            });\n                        }\n                    });\n            }\n        });\n    };\n\n    render() {\n        const columns = [\n            {\n                title: \"角色ID\",\n                dataIndex: \"id\"\n            },\n            {\n                title: \"角色名称\",\n                dataIndex: \"roleName\"\n            },\n            {\n                title: \"创建时间\",\n                dataIndex: \"createTime\"\n            },\n            {\n                title: \"使用状态\",\n                dataIndex: \"status\",\n                render: status => {\n                    return status === 1 ? \"启用\" : \"停用\";\n                }\n            },\n            {\n                title: \"授权时间\",\n                dataIndex: \"authorizeTime\",\n                render: authorizeTime => {\n                    return moment(authorizeTime * 1000).format(\n                        \"YYYY-MM-DD HH:mm:ss\"\n                    );\n                }\n            },\n            {\n                title: \"授权人\",\n                dataIndex: \"authorizeUserName\"\n            }\n        ];\n        columns.map((item, index) => {\n            item.align = \"center\";\n        });\n\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: \"radio\",\n            selectedRowKeys\n        };\n\n        return (\n            <div>\n                <Card>\n                    <Button type=\"primary\" onClick={this.handleCreate}>\n                        创建角色\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        disabled={this.state.btnDisabled}\n                        style={{ margin: \"0 10\" }}\n                        onClick={this.handleAuth}\n                    >\n                        设置权限\n                    </Button>\n                    <Button type=\"primary\" disabled={this.state.btnDisabled}>\n                        用户授权\n                    </Button>\n                </Card>\n                <div style={{ marginTop: 20 }} className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item, index);\n                                }\n                            };\n                        }}\n                    />\n                </div>\n                <Modal\n                    title=\"创建角色\"\n                    width={600}\n                    visible={this.state.isShowCreateModal}\n                    onCancel={() => {\n                        this.roleForm.props.form.resetFields();\n                        this.setState({\n                            isShowCreateModal: false\n                        });\n                    }}\n                    onOk={this.onCreateSubmit}\n                >\n                    <RoleForm\n                        wrappedComponentRef={sss => (this.roleForm = sss)}\n                    />\n                </Modal>\n\n                <Modal\n                    bodyStyle={{\n                        height: 400,\n                        overflow:'auto'\n                    }}\n                    title=\"权限设置\"\n                    width={600}\n                    visible={this.state.isShowAuthModal}\n                    onCancel={() => {\n                        this.authForm.props.form.resetFields();\n                        this.setState({\n                            isShowAuthModal: false\n                        });\n                    }}\n                    onOk={this.onAuthSubmit}\n                >\n                    <AuthForm\n                        info={this.state.selectedItem}\n                        menus={this.state.menus}\n                        setMenus={this.setMenus}\n                        wrappedComponentRef={sss => (this.authForm = sss)}\n                    />\n                </Modal>\n            </div>\n        );\n    }\n}\n\nclass RoleForm extends React.Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        };\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"roleName\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"角色名称不能为空\"\n                            },\n                            {\n                                min: 5,\n                                max: 12,\n                                message: \"角色名称长度5-12\"\n                            },\n                            {\n                                pattern: new RegExp(\"[\\u4e00-\\u9fa5]\", \"g\"),\n                                message: \"角色名称必须是中文\"\n                            }\n                        ]\n                    })(<Input placeholder=\"请输入角色名称\" />)}\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"status\", {\n                        initialValue: true,\n                        valuePropName: \"checked\"\n                    })(\n                        <Switch\n                            checkedChildren=\"启用\"\n                            unCheckedChildren=\"停用\"\n                        />\n                    )}\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nRoleForm = Form.create({})(RoleForm);\n\nclass AuthForm extends React.Component {\n    getTreeNode = data => {\n        return data.map(item => {\n            if (item.children && item.children.length > 0) {\n                return (\n                    <TreeNode title={item.title} key={item.key}>\n                        {this.getTreeNode(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode {...item} />;\n        });\n    };\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        };\n        const { getFieldDecorator } = this.props.form;\n        const info = this.props.info;\n        const menus = this.props.menus;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"roleName\", {\n                        initialValue: info.roleName\n                    })(<Input placeholder=\"请输入角色名称\" disabled />)}\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"status\", {\n                        initialValue: info.status === 1,\n                        valuePropName: \"checked\"\n                    })(\n                        <Switch\n                            checkedChildren=\"启用\"\n                            unCheckedChildren=\"停用\"\n                        />\n                    )}\n                </FormItem>\n                <Tree\n                    defaultExpandAll\n                    checkable\n                    checkedKeys={menus}\n                    onCheck={checkedKeys => {\n                        this.props.setMenus(checkedKeys);\n                    }}\n                >\n                    <TreeNode title=\"平台权限\">\n                        {this.getTreeNode(menuConfig)}\n                    </TreeNode>\n                </Tree>\n            </Form>\n        );\n    }\n}\nAuthForm = Form.create({})(AuthForm);\n","import React from 'react';\nimport { Row } from 'antd';\n\nimport Header from './components/Header/Header'\nimport './style/common.less'\n\nclass Common extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\"></Header>\n                </Row>\n                <Row className=\"content\" style={{marginTop:54}}>\n                    {this.props.children}\n                </Row>\n            </div>\n        )\n    }\n}\nexport default Common\n\n","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers/reducer_common';\n\n\n//使用redux-thunk中间件 目的是为了 处理异步请求\n//将 异步请求 放到 anctionCreators中去处理了。\n\n/* 原理是：以前的store.dispatch(action)中：\n    action是一个对象\n    而使用了redux-thunk就让这个action变成了一个函数\n    相当于给dispatch方法升级了\n*/\n/*\n    下面这里的写法 参照：https://github.com/zalmoxisus/redux-devtools-extension\n    主要是为了使用 redux-devtools-extension这个浏览器调试插件\n*/\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\nexport default store;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","import React from 'react';\nimport store from './store/store'\nimport getAction from './actionCreators/getAction'\nimport TodoListUI from './todoListUI';\nimport { message } from 'antd';\n\n\n//容器组件，只用于逻辑处理\nexport default class Name extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n        store.subscribe(() => {\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    handleInputChange = (e) => {\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () => {\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n    handleItemDelete = (index) => {\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n  \n    componentDidMount() {\n        //初始化 list 将ajax请求放到了getInitActionData中去处理了。\n        store.dispatch(getAction.getInitActionData(() => {\n            message.success('数据初始化成功');\n        }));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange={this.handleInputChange}\n                handleBtnAdd={this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n            />\n        )\n    }\n\n   \n    \n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import { takeEvery, put } from 'redux-saga/effects';\nimport getAction from '../actionCreators/getAction';\nimport ACTION_TYPES from '../actionCreators/actionTypes';\nimport axios from '../../../axios/axios';\n\nfunction* getListData(action) { \n    try {\n        const res = yield axios.ajax({ url: '/user/list' });\n        const actionInit = getAction.initActionData(res.result.list);\n        yield put(actionInit);\n    } catch (e) {\n        const actionInit = getAction.initActionData([]);\n        yield put(actionInit);\n    }\n   \n}\n\nfunction* valueChange(action){\n    console.log(\"action\",action)\n}\n\n\n\nfunction* todoListSaga() {\n    //这里可以 写多个action的异步处理 后面的函数可以是generator函数 或 普通函数\n    yield takeEvery(ACTION_TYPES.GET_LIST_DATA, getListData);\n    yield takeEvery(ACTION_TYPES.TODOLIST_VALUE_CHANGE, valueChange);\n}\n\nexport default todoListSaga;","import { createStore, applyMiddleware,compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\nimport createSagaMiddleware  from 'redux-saga';\nimport todoListSaga from '../sagas/todoListSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\n\nsagaMiddleware.run(todoListSaga);\n\n\nexport default store;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport store from './store/store';\nimport getAction from './actionCreators/getAction';\n\nclass ReduxSagaDemo extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.state = store.getState().todoListReducers;\n        store.subscribe(() => {\n            console.log(store.getState().todoListReducers)\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    componentDidMount() {\n        const action = getAction.getListData();\n        store.dispatch(action);\n    }\n    handleInputChange = (e) =>{\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () =>{\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n\n    handleItemDelete = (index) =>{\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange = {this.handleInputChange}\n                handleBtnAdd = {this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n        />);\n    }\n}\n\nexport default ReduxSagaDemo;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>{\n    return (<div>\n        <div style={{ width: 400 }}>\n            <Input\n                value={props.inputVal}\n                onChange={props.handleInputChange}\n                style={{ width: 300 }}\n                placeholder=\"请输入item\" />\n            <Button\n                onClick={props.handleBtnAdd}\n                type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n})\n    \n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',//input change\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD', //add \n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',//delete\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport getAction from './actionCreators/getAction';\nimport { connect } from 'react-redux';\n\n\n\nclass ReduxReactTodoList extends React.Component{\n   \n    // componentDidMount() {\n    //     const action = getAction.getListData();\n    //     store.dispatch(action);\n    // }\n    // handleInputChange = (e) =>{\n    //     store.dispatch(getAction.getInputChangeAction(e.target.value));\n    // }\n    addItem = () => {\n        if (this.props.inputVal) {\n            this.props.handleBtnAdd();\n        }\n    }\n\n    // handleItemDelete = (index) =>{\n    //     store.dispatch(getAction.getTodoItemDeleteAction(index));\n    // }\n\n    render() {\n        const { inputVal, list, handleInputChange, handleItemDelete} = this.props;\n        return (\n            <TodoListUI\n                inputVal = {inputVal}\n                list = {list}\n                handleInputChange = {handleInputChange}\n                handleBtnAdd = {this.addItem}\n                handleItemDelete = {handleItemDelete}\n        />);\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    //这里state 里面有todoListReducers 和 titleReducers \n    //里面有todoListReducers 里面有 inputVal 和 list 直接解构赋值\n    return {\n        ...state.todoListReducers\n        // inputVal:state.todoListReducers.inputVal,\n        // list:state.todoListReducers.list,\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        handleInputChange:(e) => {\n            dispatch(getAction.getInputChangeAction(e.target.value));\n        },\n        handleBtnAdd:()=>{\n            dispatch(getAction.getTodoItemAddAction());\n        },\n        handleItemDelete(index){\n            dispatch(getAction.getTodoItemDeleteAction(index));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ReduxReactTodoList);\n\n","import React from 'react'\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\n\nimport App from './App';\nimport Admin from './Admin';\nimport Home from './pages/home';\nimport Buttons from './pages/ui/Buttons';\nimport Modals from './pages/ui/Modals';\nimport Loadings from './pages/ui/Loadings';\nimport Notification from './pages/ui/Notification';\nimport Messages from './pages/ui/Messages';\nimport Tabpages from './pages/ui/Tabs';\nimport Gallery from './pages/ui/Gallery';\nimport Carousels from './pages/ui/Carousels';\nimport Login from './pages/form/Login';\nimport Register from './pages/form/Register';\nimport BasicTable from './pages/table/BasicTable';\nimport HightTable from './pages/table/HightTable';\nimport City from './pages/city/city';\nimport Order from './pages/order/Order';\nimport OrderDetail from './pages/order/OrderDetail';\nimport User from './pages/user/User';\nimport BikeMap from './pages/map/BikeMap';\nimport Bar from './pages/echarts/bar/Bar';\nimport Pie from './pages/echarts/pie/Pie';\nimport Line from './pages/echarts/line/Line';\nimport Permission from './pages/permission/Permission';\n\n\nimport Common from './common';\n\n\n\nimport ReduxThunkDemo from './pages/redux-thunk-demo/redux-thunk-demo';\nimport ReduxSagaDemo from './pages/redux-saga-demo/redux-saga-demo';\nimport ReduxReactTodoList from './pages/redux-react-todoList/redux-react-todoList';\n\n\nexport default class ERouter extends React.Component{\n    render(){\n        return (\n            <HashRouter>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}></Route>\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail}></Route>\n                            </Common>\n                        }></Route>\n                        <Route path=\"/\" render={()=>\n                            <Admin>\n                                <Switch>\n                                    <Route path=\"/home\" component={Home}></Route>\n                                    <Route path=\"/ui/buttons\" component={Buttons}></Route>\n                                    <Route path=\"/ui/modals\" component={Modals}></Route>\n                                    <Route path=\"/ui/loadings\" component={Loadings}></Route>\n                                    <Route path=\"/ui/notification\" component={Notification}></Route>\n                                    <Route path=\"/ui/messages\" component={Messages}></Route>\n                                    <Route path=\"/ui/tabs\" component={Tabpages}></Route>\n                                    <Route path=\"/ui/gallery\" component={Gallery}></Route>\n                                    <Route path=\"/ui/carousel\" component={Carousels}></Route>\n                                    <Route path=\"/form/login\" component={Login}></Route>\n                                    <Route path=\"/form/register\" component={Register}></Route>\n                                    <Route path=\"/table/basic\" component={BasicTable}></Route>\n                                    <Route path=\"/table/hight\" component={HightTable}></Route>\n                                    <Route path=\"/city\" component={City}></Route>\n                                    <Route path=\"/order\" component={Order}></Route>\n                                    <Route path=\"/user\" component={User}></Route>\n                                    <Route path=\"/bikeMap\" component={BikeMap}></Route>\n                                    <Route path=\"/charts/bar\" component={Bar}></Route>\n                                    <Route path=\"/charts/pie\" component={Pie}></Route>\n                                    <Route path=\"/charts/line\" component={Line}></Route>\n                                    <Route path=\"/permission\" component={Permission}></Route>\n\n                                    \n                                    <Route path=\"/redux/thunk\" component={ReduxThunkDemo}></Route>\n                                    <Route path=\"/redux/saga\" component={ReduxSagaDemo}></Route>\n                                    <Route path=\"/redux/react/todolist\" component={ReduxReactTodoList}></Route>\n\n                                    \n                                    <Redirect to=\"/home\" />\n                                </Switch>\n                            </Admin>\n                        }></Route>\n                    </Switch>\n                </App>\n            </HashRouter>\n        );\n    }\n}","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state 导致todolist 删除了视图未更新\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware, compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\n\n\n// const sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware());\n\n\n\nconst store = createStore(rootReducers,enhancer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ERouter from './router';\nimport { Provider } from 'react-redux';\nimport store from './pages/redux-react-todoList/store/store';\n\nReactDOM.render(\n    <Provider\n        store = {store}\n    >\n        <ERouter />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}