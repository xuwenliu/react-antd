{"version":3,"sources":["serviceWorker.js","App.js","utils/utils.js","axios/axios.js","components/Header/Header.jsx","components/Footer/Footer.jsx","config/menuConfig.js","pages/redux-thunk-demo/actionCreators/actionTypes.js","pages/redux-thunk-demo/actionCreators/getAction.js","components/NavLeft/NavLeft.jsx","Admin.js","pages/home/index.jsx","pages/ui/Buttons.jsx","pages/ui/Modals.jsx","pages/ui/Loadings.jsx","pages/ui/Notification.jsx","pages/ui/Messages.jsx","pages/ui/Tabs.jsx","pages/ui/Gallery.jsx","pages/ui/Carousels.jsx","pages/form/Login.jsx","pages/form/Register.jsx","pages/table/BasicTable.jsx","pages/table/HightTable.jsx","components/filterForm/FilterForm.jsx","pages/city/city.jsx","pages/order/Order.jsx","pages/order/OrderDetail.jsx","pages/user/User.jsx","pages/map/BikeMap.jsx","pages/echarts/echartTheme.js","pages/echarts/bar/Bar.jsx","pages/echarts/themeLight.js","pages/echarts/pie/Pie.jsx","pages/echarts/line/Line.jsx","pages/permission/Permission.jsx","pages/salary/Salary.jsx","common.js","pages/redux-thunk-demo/reducers/reducer_todo_list.js","pages/redux-thunk-demo/reducers/reducer_title.js","pages/redux-thunk-demo/reducers/reducer_common.js","pages/redux-thunk-demo/store/store.js","pages/redux-thunk-demo/todoListUI.jsx","pages/redux-thunk-demo/redux-thunk-demo.jsx","pages/redux-saga-demo/todoListUI.jsx","pages/redux-saga-demo/actionCreators/actionTypes.js","pages/redux-saga-demo/reducers/reducer_todo_list.js","pages/redux-saga-demo/reducers/reducer_title.js","pages/redux-saga-demo/reducers/reducer_common.js","pages/redux-saga-demo/actionCreators/getAction.js","pages/redux-saga-demo/sagas/todoListSaga.js","pages/redux-saga-demo/store/store.js","pages/redux-saga-demo/redux-saga-demo.jsx","pages/redux-react-todoList/todoListUI.jsx","pages/redux-react-todoList/actionCreators/actionTypes.js","pages/redux-react-todoList/actionCreators/getAction.js","pages/redux-react-todoList/redux-react-todoList.jsx","router.js","pages/redux-react-todoList/reducers/reducer_todo_list.js","pages/redux-react-todoList/reducers/reducer_title.js","pages/redux-react-todoList/reducers/reducer_common.js","pages/redux-react-todoList/store/store.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","Component","Option","select_default","cdnUrl","host","utils","filterDate","date","fmt","arguments","length","undefined","Date","o","M+","getMonth","D+","getDate","h+","getHours","H+","m+","getMinutes","s+","getSeconds","q+","Math","floor","S","getMilliseconds","k","test","replace","RegExp","$1","getFullYear","substr","0","1","2","3","4","5","6","getDay","pagination","data","pageOrPageSizeChange","onChange","currentPage","currentPageSize","onShowSizeChange","current","result","page","pageSize","total","totalCount","showTotal","concat","showQuickJumper","showSizeChanger","pageSizeOptions","getOptions","key","value","options","option","map","item","index","push","Axios","Promise","resolve","reject","JsonP","url","param","err","res","status","msssage","_this","params","ajax","then","list","setState","getList","isShowLoading","document","getElementById","style","display","baseURL","console","log","postData","method","tiemout","axios","response","config","code","modal_default","info","title","content","msg","Header","state","userName","Utils","getWeatherAPIData","jsonp","encodeURIComponent","results","weather_data","Object","objectSpread","city","currentCity","_this2","setInterval","menuType","className","row_default","col_default","span","src","alt","href","dayPictureUrl","weather","temperature","React","connect","titleReducers","Footer","menuList","btnList","ACTION_TYPES","TODOLIST_VALUE_CHANGE","TODOLIST_TODO_ITEM_ADD","TODOLIST_TODO_ITEM_DELETE","INIT_ACTION_DATA","INDEX_TITLE","getAction","getInputChangeAction","type","getTodoItemAddAction","getTodoItemDeleteAction","getIndexTitleAction","initActionData","getInitActionData","callback","dispatch","SubMenu","menu_default","NavLeft","currentKey","renderTitle","handleClick","_ref","renderMenu","Item","NavLink","to","menuTreeNode","MenuConfig","hash","onClick","selectedKeys","theme","Admin","components_NavLeft_NavLeft","components_Header_Header","Footer_Footer","Home","nextProps","nextState","prevProps","prevState","Buttons","loading","size","handleCloseLoading","handleChangeSize","e","target","card_default","button_default","disabled","icon","shape","marginBottom","Group","icon_default","radio_default","Modals","visible0","visible1","visible2","visible3","visible4","ModalText","visible4confirmLoading","openBaseModal","visible","defineProperty","handleConfirm","okText","cancelText","onOk","onCancel","top","centered","confirmLoading","setTimeout","Loadings","handleChangeLoading","bool","spin_default","indicator","marginLeft","switch_default","checked","alert_default","showIcon","closable","onClose","alert","message","description","spinning","tip","Notification","handleOpen","notification_default","duration","defaultValue","width","marginRight","val","open","placement","Messages","message_default","Tabpages","newTabIndex","panes","mode","activeKey","handleTab","handleChangeMode","onEdit","targetKey","action","add","remove","lastIndex","forEach","pane","i","filter","tabs_default","defaultActiveKey","TabPane","tab","Button","tabPosition","Gallery","currentImg","openGallery","imgUrl","imgList","cover","Meta","gutter","md","height","footer","Carousels","afterChange","currentIndex","beforeChange","from","carousel_default","autoplay","effect","Login","handleSubmit","preventDefault","form","validateFields","values","handleSubmit2","fieldsError","_this$props$form","isFieldTouched","getFieldError","getFieldDecorator","getFieldsError","userNameError","passwordError","form_default","layout","onSubmit","validateStatus","help","rules","required","min","max","pattern","input_default","prefix","color","placeholder","prefx","htmlType","keys","some","field","marginTop","initialValue","valuePropName","checkbox_default","float","form_Login","create","Register","userImg","JSON","stringify","success","password","displayRender","label","join","beforeUpload","file","isJPG","error","isLt2M","getBase64","img","reader","FileReader","addEventListener","readAsDataURL","handleChange","originFileObj","imageUrl","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","offset","uploadButton","assign","input_number_default","id","checkedChildren","unCheckedChildren","moment","date_picker_default","showTime","format","TextArea","autosize","minRows","maxRows","cascader_default","vlaue","expandTrigger","time_picker_default","upload_default","listType","showUploadList","form_Register","BasicTable","dataSource","selectedRowKeys","actionMode","onChangeBtn","handleDelete","confirm","onRowClick","record","selectedItem","onSelectChange","selectedRows","assertThisInitialized","columns","dataIndex","render","avatar_default","backgroundColor","sex","badge_default","count","role","interest","interestObj","strArr","tooltip_default","slice","isMarried","text","birthday","address","align","_this$state","rowSelection","hasSelected","buttonStyle","table_default","bordered","onRow","FormItem","scrollY","y","scrollX","x","HightTable","handleScollYChange","enable","handleScollXChange","columns1","sorter","b","age","columns2","fixed","scroll","locale","MonthPicker","FilterForm","search","filterList","searchData","getFieldsValue","formatStr","start_time_field","startField","end_time_field","endField","isUnTimeStamp","unix","getItems","formItems","showSearch","allowClear","inputType","initialStartTime","initialEndTime","startPlaceholder","endPlaceholder","select","FilterForm_FormItem","input","startTime","endTime","colon","startTimeSingle","checkbox","margin","resetFields","filterForm_FilterForm","cityIdArr","name","modeArr","opModeArr","City","isShowOpenCityModal","handleOpenCity","openCitySubmit","cityInfo","cityForm","op_mode","arr","user_name","open_time","update_time","city_OpenCityFormModal","wrappedComponentRef","OpenCityFormModal","city_FormItem","city_Option","Order","isShowFinishOrderModal","orderInfo","finishOrderBtnDisabled","orderDetailBtnDisabled","orderDetail","orderId","finishOrder","getOrderInfo","onFinishOrderSubmit","distance","Order_FormItem","bikeSn","battery","getInfo","regenerator_default","wrap","_context","prev","next","stop","_marked","OrderDetail","getOrderDetailInfo","renderMap","BMap","Map","addMapControl","drawBikeRoute","positionList","drwaServiceArea","area","addControl","ScaleControl","anchor","BMAP_ANCHOR_TOP_RIGHT","NavigationControl","startPoint","endPoint","first","last","Point","lon","lat","startIcon","Icon","Size","imageSize","startMarker","Marker","addOverlay","endIcon","endMarker","trackPoint","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","centerAndZoom","areaList","polygon","Polygon","fillColor","fillOpacity","orderSn","mobile","startLocation","endLocation","RadioGroup","roleSelectList","interestSelectList","User","actionBtndisabled","deleteVisible","isVisible","handleOperator","userInfo","resetSubmit","userForm","delete","userId","_this3","User_UserForm","inset","UserForm","User_FormItem","getRole","User_Option","names","item1","item2","getInterest","BikeMap","getMapData","routeList","enableMapClick","split","startPointIcon","bikeMarkerStart","endPointIcon","bikeMarkerEnd","p","point","serviceList","servicePointist","servicesPolygon","bikeList","bikeIcon","bikeMarker","colorPalette","tooltip","axisPointer","lineStyle","crossStyle","legend","textStyle","toolbox","iconStyle","normal","borderColor","dataZoom","timeline","itemStyle","controlStyle","timeAxis","axisLine","axisTick","axisLabel","splitLine","splitArea","areaStyle","logAxis","valueAxis","categoryAxis","line","symbol","graph","gauge","candlestick","color0","borderColor0","Bar","getOption","trigger","xAxis","yAxis","series","getOption2","echarts","registerTheme","echartTheme","lib_default","themeLight","fontWeight","visualMap","shadowStyle","dataBackgroundColor","fillerColor","handleColor","show","symbolSize","borderWidth","emphasis","areaColor","splitNumber","offsetCenter","orient","right","bottom","formatter","radius","center","shadowBlur","shadowOffsetX","shadowColor","sort","roseType","animationType","animationEasing","animationDelay","idx","random","notMerge","lazyUpdate","getOption3","boundaryGap","TreeNode","tree_default","Permission","btnDisabled","isShowCreateModal","isShowAuthModal","isShowUserAuthModal","handleCreate","onCreateSubmit","roleForm","handleAuth","menus","setMenus","onAuthSubmit","authForm","handleUserAuth","getUserAuthList","mockData","targetKeys","dataObj","onUserAuthSubmit","roleId","roleName","userIds","authorizeTime","Permission_RoleForm","sss","bodyStyle","overflow","Permission_AuthForm","userAuthForm","Permission_UserAuthForm","setTargetKeys","RoleForm","Permission_FormItem","AuthForm","getTreeNode","_this4","defaultExpandAll","checkable","checkedKeys","onCheck","menuConfig","UserAuthForm","_this5","_this$props","transfer_default","itemUnit","itemsUnit","searchPlaceholder","notFoundContent","listStyle","titles","Salary","listArr","filterData","indexOf","class","lang","time","tiemString","student","Common","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleState","inputVal","toConsumableArray","splice","defaultState","rootReducers","combineReducers","newState","parse","_ref2","slicedToArray","func","todoListReducers","_ref3","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","TodoListUI","handleInputChange","handleBtnAdd","list_default","renderItem","handleItemDelete","Name","subscribe","getState","todoListUI","GET_LIST_DATA","getListData","valueChange","todoListSaga","actionInit","_actionInit","sent","put","t0","todoListSaga_marked","_context2","_marked2","_context3","takeEvery","_marked3","sagaMiddleware","createSagaMiddleware","run","ReduxSagaDemo","redux_saga_demo_todoListUI","ReduxReactTodoList","addItem","redux_react_todoList_todoListUI","ERouter","HashRouter","src_App","Switch","Route","path","component","src_common","src_Admin","Pie","Line","ReduxThunkDemo","Redirect","ReactDOM","es","router_ERouter","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c0023fcf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport './style/common.less'\n\nclass App extends Component {\n  render() {\n    return (\n        <div>\n           {this.props.children}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Select } from 'antd';\nconst Option = Select.Option;\n\nconst filterDate = (date, fmt = 'YYYY-MM-DD HH:mm:ss') => {\n    if (!date) {\n        return '';\n    }\n    if (typeof date === 'number') {\n        date = new Date(date * 1000);\n    }\n    var o = {\n        'M+': date.getMonth() + 1,\n        'D+': date.getDate(),\n        'h+': date.getHours() % 12 === 0 ? 12 : date.getHours() % 12,\n        'H+': date.getHours(),\n        'm+': date.getMinutes(),\n        's+': date.getSeconds(),\n        'q+': Math.floor((date.getMonth() + 3) / 3),\n        'S': date.getMilliseconds()\n    }\n    var week = {\n        '0': '\\u65e5',\n        '1': '\\u4e00',\n        '2': '\\u4e8c',\n        '3': '\\u4e09',\n        '4': '\\u56db',\n        '5': '\\u4e94',\n        '6': '\\u516d'\n    }\n    if (/(Y+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, (date.getFullYear() + '').substr(4 - RegExp.$1.length))\n    }\n    if (/(E+)/.test(fmt)) {\n        fmt = fmt.replace(RegExp.$1, ((RegExp.$1.length > 1) ? (RegExp.$1.length > 2 ? '\\u661f\\u671f' : '\\u5468') : '') + week[date.getDay() + ''])\n    }\n    for (var k in o) {\n        if (new RegExp('(' + k + ')').test(fmt)) {\n            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n        }\n    }\n    return fmt\n}\n\nconst pagination = (data,pageOrPageSizeChange) =>{\n    return {\n        //这里page和pageSize 的回调是同一个函数处理\n        //page 变化的回调 参数是改变后的页码page及每页条数pageSize\n        onChange:(currentPage,currentPageSize)=>{\n            pageOrPageSizeChange(currentPage,currentPageSize)\n        },\n        //pageSize 变化的回调\n        onShowSizeChange: (currentPage,currentPageSize) => {\n            pageOrPageSizeChange(currentPage,currentPageSize);\n        },\n        // itemRender:(current, type, originalElement)=> {\n        //     console.log(type)\n        //     if (type === 'prev') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>上一页</Button>);\n        //     } if (type === 'next') {\n        //       return (<Button size=\"small\" style={{marginRight:10}}>下一页</Button>);\n        //     }\n        //     return originalElement;\n        // },\n        current:data.result.page,\n        pageSize:data.result.pageSize,\n        total: data.result.totalCount,\n        showTotal:()=>{\n            return `共${data.result.totalCount}条`\n        },\n        showQuickJumper: true,\n        showSizeChanger: true,//是否可以改变 pageSize\n        pageSizeOptions:['10','20','50','100','200','500','1000']\n    }\n}\n\nconst getOptions = (data, key, value) => {\n    if (!data) {\n        return [];\n    }\n    let options = [];\n    let option = '';\n    data.map((item, index) => {\n        if (key && value) {\n            option = <Option key={item[value]} value={item[value]}>{item[key]}</Option>;\n        } else {\n            option = <Option key={index} value={item}>{item}</Option>;\n        }\n\n        options.push(option);\n    })\n    return options;\n}\n\n//设置打包部署到github 上图片404问题\n//https://xuwenliu.github.io/react-antd 线上地址\n//需要在本地图片链接前加上 /react-antd，而本地访问确不需要，则需要cdnUrl来区分\n\nlet cdnUrl = '';\nlet host = window.location.host;\nif (host === \"xuwenliu.github.io\") {\n    cdnUrl = '/react-antd';\n}\n\n\n\nexport default {\n    filterDate,\n    pagination,\n    getOptions,\n    cdnUrl\n}","import JsonP from 'jsonp';\nimport axios from 'axios';\nimport { Modal } from 'antd';\nimport utils from '../utils/utils';\n\n\nexport default class Axios {\n    static jsonp(options) {\n        return new Promise((resolve, reject) => {\n            JsonP(options.url, {\n                param: 'callback'\n            }, (err, res) => {\n                if (res.status === 'success') {\n                    resolve(res);\n                } else {\n                    reject(res.msssage);\n                }\n            })\n        })\n    }\n\n    static getList(_this,url, params){\n        this.ajax({\n            url,\n            params\n        }).then((res) => {\n            let list = res.result.list.map((item, index) => {\n                item.key = index;\n                return item;\n            });\n            _this.setState({\n                list,\n                pagination: utils.pagination(res, (page,pageSize) => {\n                    _this.params.page = page;\n                    _this.params.pageSize = pageSize;\n                    _this.getList();\n                })\n            })\n        })\n    }\n\n    static ajax(options) {\n        let loading;\n        if (options.isShowLoading !==false){\n            loading = document.getElementById('ajaxLoading');\n            loading.style.display = 'block';\n        }\n\n        let baseURL = 'https://www.easy-mock.com/mock/5c83123e23107a1da64ea2fb/api';\n        return new Promise((resolve, reject) => {\n            console.log(options)\n            let postData = {};\n\n            if (options.params) { //get 请求\n                postData = {\n                    url: options.url,\n                    method:'get',\n                    baseURL,\n                    tiemout: 5000,\n                    params: options.params || ''\n    \n                }\n            }\n\n            if (options.data) {//post 请求\n                postData = {\n                    url: options.url,\n                    method: options.method || 'post',\n                    baseURL,\n                    tiemout: 5000,\n                    data: options.data || null\n                }\n            }\n\n            axios(postData).then((response) => {\n                if (options.isShowLoading !== false) {\n                    loading = document.getElementById('ajaxLoading');\n                    loading.style.display = 'none';\n                }\n\n                if (response.status === 200){\n                    let res = response.data;\n                    console.log('res', response)\n                    //请求的数据查询接口地址\n                    if (response.config.url === 'http://jx.1000phone.net/teacher.php/Api/studentJobData_month') {\n                        if (res){\n                            resolve(res);\n                        }\n                    } else {\n                        if (res.data.code === 0){\n                            resolve(res.data);\n                        }else{\n                            Modal.info({\n                                title:\"提示\",\n                                content:res.data.msg\n                            })\n                        }\n                    }\n                    \n                }else{\n                    reject(response.data);\n                }\n            })\n        })\n    }\n}","import React from 'react';\nimport { Row, Col} from 'antd'\nimport './header.less'\nimport Utils from '../../utils/utils'\nimport axios from '../../axios/axios';\nimport { connect } from 'react-redux'\n\n\n\n\nclass Header extends React.Component {\n    state = {\n        userName: '',\n        date: Utils.filterDate(new Date()),\n    }\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        this.setState({\n            userName:'一定要爱你'\n        })\n        setInterval(() => {\n            this.setState({\n                date: Utils.filterDate(new Date())\n            })\n        }, 1000)\n        this.getWeatherAPIData();\n    }\n\n    getWeatherAPIData = () => {\n        let city = \"成都\";\n        axios.jsonp({\n            url: `https://api.map.baidu.com/telematics/v3/weather?location=${encodeURIComponent(city)}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\n        }).then((res) => {\n            let data = res.results[0].weather_data[0];\n            this.setState({\n                city:res.results[0].currentCity,\n                ...data\n            })\n        })\n    }\n\n    render() {\n        const menuType = this.props.menuType;\n        return (\n            <div className=\"header \">\n                <Row className=\"header-top\">\n                    {\n                        menuType ?\n                            <Col span={6} className=\"logo\">\n                                <img src={`${Utils.cdnUrl}/assets/img/me.png`} alt=\"\" />\n                                <span>react-antd管理系统</span>\n                            </Col> : ''\n                    }\n                    <Col span={menuType ?18:24}>\n                        <span>欢迎，{this.state.userName}</span>\n                        <a href=\"#\">退出</a>\n                    </Col>\n                </Row>\n                {\n                    menuType ? '' :\n                    <Row className=\"breadcrumb\">\n                        <Col span={4} className=\"breadcrumb-title\">\n                            {this.props.title}\n                        </Col>\n                        <Col span={20} className=\"weather\">\n                            <span className=\"date\">{this.state.date}</span>\n                            <span className=\"weather-city\">\n                                {this.state.city}\n                            </span>\n                            <span className=\"weather-img\">\n                                <img src={this.state.dayPictureUrl} alt=\"\" />\n                            </span>\n                            <span className=\"weather-detail\">\n                                {this.state.weather}{this.state.temperature}\n                            </span>\n                        </Col>\n                    </Row>\n                }\n                    \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        title: state.titleReducers.title\n    }\n}\n\nexport default connect(mapStateToProps,null)(Header);","import React from 'react';\nimport './footer.less'\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"footer\">\n            一定要爱你（推荐使用谷歌浏览器，可以获得更佳操作页面体验） 技术支持：一定要爱你\n         </div>\n        )\n    }\n}\n","const menuList = [\n    {\n        title: '首页',\n        key: '/home'\n    },\n    {\n        title: 'UI',\n        key: '/ui',\n        children: [\n            {\n                title: '按钮',\n                key: '/ui/buttons',\n            },\n            {\n                title: '弹框',\n                key: '/ui/modals',\n            },\n            {\n                title: 'Loading',\n                key: '/ui/loadings',\n            },\n            {\n                title: '通知提醒',\n                key: '/ui/notification',\n            },\n            {\n                title: '全局Message',\n                key: '/ui/messages',\n            },\n            {\n                title: 'Tab页签',\n                key: '/ui/tabs',\n            },\n            {\n                title: '图片画廊',\n                key: '/ui/gallery',\n            },\n            {\n                title: '轮播图',\n                key: '/ui/carousel',\n            }\n        ]\n    },\n    {\n        title: '表单',\n        key: '/form',\n        children: [\n            {\n                title: '登录',\n                key: '/form/login',\n            },\n            {\n                title: '注册',\n                key: '/form/register',\n            }\n        ]\n    },\n    {\n        title: '表格',\n        key: '/table',\n        children: [\n            {\n                title: '基础表格',\n                key: '/table/basic',\n            },\n            {\n                title: '高级表格',\n                key: '/table/hight',\n            }\n        ]\n    },\n    {\n        title: '富文本',\n        key: '/rich'\n    },\n    {\n        title: '城市管理',\n        key: '/city'\n    },\n    {\n        title: '订单管理',\n        key: '/order',\n        btnList: [\n            {\n                title: '订单详情',\n                key: 'detail'\n            },\n            {\n                title: '结束订单',\n                key: 'finish'\n            }\n        ]\n    },\n    {\n        title: '员工管理',\n        key: '/user'\n    },\n    {\n        title: '车辆地图',\n        key: '/bikeMap'\n    },\n    {\n        title: '图表',\n        key: '/charts',\n        children: [\n            {\n                title: '柱形图',\n                key: '/charts/bar'\n            },\n            {\n                title: '饼图',\n                key: '/charts/pie'\n            },\n            {\n                title: '折线图',\n                key: '/charts/line'\n            },\n        ]\n    },\n    {\n        title: '权限设置',\n        key: '/permission'\n    },\n    {\n        title: 'Redux demo',\n        key: '/redux',\n        children: [\n            {\n                title: 'redux-thunk',\n                key: '/redux/thunk'\n            },\n            {\n                title: 'redux-saga',\n                key: '/redux/saga'\n            },\n            {\n                title: 'react-redux-todolist',\n                key: '/redux/react/todolist',\n            }\n            \n        ]\n    },\n    {\n        title: '数据查询',\n        key: '/salary'\n    }\n];\nexport default menuList;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\nimport axios from '../../../axios/axios';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getInitActionData: ((callback) => {\n        return (dispatch) => {\n            axios.ajax({\n                url: '/user/list',\n            }).then((res) => {\n                if (res.code === 0) {\n                    dispatch(getAction.initActionData(res.result.list));\n                    callback && callback();\n                }\n            })\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport MenuConfig from '../../config/menuConfig';\nimport Utils from '../../utils/utils';\nimport { Menu } from 'antd';\nimport { NavLink } from 'react-router-dom';\nimport './navLeft.less';\nimport { connect } from 'react-redux'\n\n// import store from '../../pages/redux-thunk-demo/store/store';\nimport getAction from '../../pages/redux-thunk-demo/actionCreators/getAction';\n\n\nconst SubMenu = Menu.SubMenu;\n\n\nclass NavLeft extends React.Component {\n    state = {\n        menuList: [],\n        currentKey:'',\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n        const menuTreeNode = this.renderMenu(MenuConfig);\n        this.setState({\n            menuTreeNode\n        })\n\n    }\n    componentDidMount() {\n        // store.dispatch(getAction.getIndexTitleAction('首页'));\n        // this.props.dispatch();\n        let key = window.location.hash.replace(/#|\\?.*$/g,'');\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        //每次刷新浏览器就触发一次action\n        this.renderTitle(MenuConfig,key);\n       \n\n    }\n\n    renderTitle = (data,key) => {\n        data.map(item => {\n            if (item.key === key) {\n                this.props.dispatch(getAction.getIndexTitleAction(item.title));\n                return;\n            } \n            if (item.children) {\n                this.renderTitle(item.children,key);\n            } \n        })\n    }\n\n    handleClick = ({item,key})=>{\n        if (key === this.state.currentKey) {\n            return false;\n        }\n        this.setState(()=>{\n            return {\n                currentKey:key\n            }\n        })\n        this.props.dispatch(getAction.getIndexTitleAction(item.props.title));\n    }   \n\n    //菜单渲染\n    renderMenu = (data) => {\n        return data.map((item) => {\n            if (item.children) {\n                return (\n                    <SubMenu title={item.title} key={item.key}>\n                        {this.renderMenu(item.children)}\n                    </SubMenu>\n                )\n            }\n            return <Menu.Item title={item.title} key={item.key}>\n                <NavLink to={item.key}>{item.title}</NavLink>\n            </Menu.Item>\n\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className=\"logo\">\n                    <img src={`${Utils.cdnUrl}/assets/img/me.png`} alt=\"\" />\n                    <h1>Sys</h1>\n                </div>\n                <Menu \n                    onClick={this.handleClick}\n                    selectedKeys={[this.state.currentKey]}\n                    theme='dark'>\n                    {this.state.menuTreeNode}\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default connect()(NavLeft);","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport Header from './components/Header/Header'\nimport Footer from './components/Footer/Footer'\nimport NavLeft from './components/NavLeft/NavLeft'\nimport { connect } from 'react-redux'\n\nclass Admin extends React.Component {\n    state = {};\n    render() {\n        return (\n            <div>\n                <Row className=\"container\">\n                    <Col span={3} className=\"nav-left\">\n                    <NavLeft></NavLeft>\n                    </Col>\n                    <Col span={21} className=\"main\">\n                        \n                        <Header></Header>\n                        <Row className=\"content\">\n                            {/* <Home></Home> */}\n                            {this.props.children}\n                        </Row>\n                        <Footer></Footer>\n\n                    </Col>\n                </Row>\n\n            </div>\n        )\n    }\n}\nexport default connect()(Admin)\n\n","import React from 'react';\nimport './index.less'\n\nexport default class Home extends React.Component {\n    state = {};\n\n    render() {\n        return (\n            <div className=\"home-wrap\">\n                高兴地学习React\n            </div>\n        )\n    }\n\n    //组件即将挂载-->render函数还未执行\n    componentWillMount() {\n\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n\n    }\n\n    //props变化了-->接受到了新的props\n    componentWillReceiveProps(nextProps) {\n\n    }\n\n    //props或者state变化了-->接受到了新的props或者state\n    shouldComponentUpdate(nextProps, nextState) {\n        return true;\n    }\n\n    //即将更新-->render函数还未执行\n    componentWillUpdate(nextProps, nextState) {\n\n    }\n\n    //更新完毕-->render函数执行完毕\n    componentDidUpdate(prevProps, prevState) {\n\n    }\n\n    //销毁之前\n    componentWillUnMount() {\n\n    }\n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,Icon,Radio } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Buttons extends React.Component{\n    \n    state={\n        loading:true,\n        size:'default'\n    }\n    //不显示loading\n    handleCloseLoading = ()=>{\n        this.setState({\n            loading:false\n        })\n    }\n    //大小设置\n    handleChangeSize = (e) => {\n        this.setState({\n            size:e.target.value\n        })\n    }\n    render(){\n        return (\n            <div>\n                <Card title=\"基础按钮\" className=\"card-wrap\">\n                    <Button>default按钮</Button>\n                    <Button type=\"primary\">primary按钮</Button>\n                    <Button type=\"dashed\">dashed按钮</Button>\n                    <Button type=\"danger\">danger按钮</Button>\n                    <Button disabled>disabled按钮</Button>\n                </Card>\n                <Card title=\"图像按钮\" className=\"card-wrap\">\n                    <Button icon=\"plus\">创建</Button>\n                    <Button icon=\"edit\">编辑</Button>\n                    <Button icon=\"delete\">删除</Button>\n                    <Button icon=\"search\" shape=\"circle\"></Button>\n                    <Button icon=\"search\" type=\"primary\">搜索</Button>\n                    <Button icon=\"download\" type=\"primary\">下载</Button>\n                    <Button icon=\"download\" type=\"primary\" shape=\"round\">下载</Button>\n                </Card>\n                <Card title=\"Loading按钮\" className=\"card-wrap\">\n                    <Button loading={this.state.loading}>确定</Button>\n                    <Button loading={this.state.loading}  type=\"primary\" shape=\"circle\"></Button>\n                    <Button loading={this.state.loading}>点击加载</Button>\n                    <Button loading={this.state.loading} shape=\"circle\"></Button>\n                    <Button type=\"primary\" onClick={this.handleCloseLoading}>关闭</Button>\n                </Card>\n                <Card title=\"按钮组\" style={{marginBottom:10}}>\n                    <Button.Group>\n                        <Button type=\"primary\" icon=\"left\">返回</Button>\n                        <Button type=\"primary\">前进<Icon type=\"right\" /></Button>\n                    </Button.Group>\n                </Card>\n\n                <Card title=\"按钮尺寸\" className=\"card-wrap\">\n                    <Radio.Group onChange={this.handleChangeSize} value={this.state.size}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Button size={this.state.size}>default按钮</Button>\n                    <Button size={this.state.size} type=\"primary\">primary按钮</Button>\n                    <Button size={this.state.size} type=\"dashed\">dashed按钮</Button>\n                    <Button size={this.state.size} type=\"danger\">danger按钮</Button>\n                    <Button size={this.state.size} disabled>disabled按钮</Button>\n                </Card>\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Button,Modal } from 'antd';\n\n\nimport './ui.less';\n\n\nexport default class Modals extends React.Component{\n    state={\n        visible0: false,\n        visible1: false,\n        visible2: false,\n        visible3: false,\n        visible4: false,\n        ModalText:\"我是5s自动关闭弹框\",\n        visible4confirmLoading:false,\n    }\n\n    openBaseModal = (visible) => {\n        this.setState({\n            [visible]:true\n        })        \n    }\n\n    handleConfirm = (type) => {\n        Modal[type]({\n            title: '确定？',\n            content: '您确定进行该操作吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                console.log('ok')\n            },\n            onCancel() {\n                console.log('cancel')\n            }\n        })\n    }\n    \n    render(){\n        return (\n            <div>\n                <Card title=\"基础模态框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible0')}>Open</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible1')}>自定义页脚</Button>\n                    <Button type=\"primary\" onClick={()=> this.openBaseModal('visible2')}>顶部20px弹框</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible3')}>水平垂直居中</Button>\n                    <Button type=\"primary\" onClick={() => this.openBaseModal('visible4')}>点击确定5s后自动关闭</Button>\n                    \n                    \n                </Card>\n                <Card title=\"信息确认框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('confirm')}>Confirm</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleConfirm('warning')}>Warning</Button>\n                </Card>\n\n                <Modal \n                    title=\"基本弹框\"\n                    visible={this.state.visible0}\n                    onOk={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible0:false\n                        })\n                    }}>\n                    <p>知人者智，自知者明。胜人者有力，自胜者强。——老子</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自定义页脚\"\n                    visible={this.state.visible1}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    onOk={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible1:false\n                        })\n                    }}>\n                    <p>设置Modal属性 okText=\"确定\" cancelText=\"取消\"</p>\n                </Modal>\n\n                <Modal \n                    title=\"顶部20px弹框\"\n                    visible={this.state.visible2}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    style={{top:20}}\n                    onOk={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible2:false\n                        })\n                    }}>\n                    <p>顶部20px弹框 - 给Modal 设置style top:20即可</p>\n                </Modal>\n\n                <Modal \n                    title=\"水平垂直居中\"\n                    visible={this.state.visible3}\n                    okText=\"ok\"\n                    cancelText=\"cancel\"\n                    centered\n                    onOk={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible3:false\n                        })\n                    }}>\n                    <p>水平垂直居中 - 给Modal添加centered属性即可</p>\n                </Modal>\n\n                \n                <Modal \n                    title=\"自动关闭\"\n                    visible={this.state.visible4}\n                    okText=\"确定\"\n                    cancelText=\"取消\"\n                    centered\n                    confirmLoading={this.state.visible4confirmLoading}\n                    onOk={() => {\n                        this.setState({\n                            ModalText: '点击确定5s后自动关闭-在5s之内连续点击按钮是不会多次触发滴',\n                            visible4confirmLoading: true,\n                        });\n\n                        setTimeout(()=>{\n                            this.setState({\n                                visible4:false,\n                                visible4confirmLoading: false,\n                            });\n                        },5000)\n\n                    }}\n                    onCancel={() => {\n                        this.setState({\n                            visible4:false\n                        })\n                    }}>\n                    <p>{this.state.ModalText}</p>\n                </Modal>\n\n            </div>\n            \n        );\n    }\n}","import React from 'react';\nimport { Card,Spin,Radio, Icon,Alert,Switch } from 'antd';\nimport './ui.less';\n\nexport default class Loadings extends React.Component {\n    state = {\n        size: 'default',\n        loading:true,\n    }\n\n    handleChangeSize = (e)=>{\n        this.setState({\n            size:e.target.value\n        })\n    }\n\n    handleChangeLoading = (bool) => {\n        this.setState({\n            loading:bool\n        })\n    }\n\n    render() {\n        const icon = <Icon type=\"loading\"></Icon>\n        return (\n            <div>\n               \n                <Card title=\"spin用法\" className=\"card-wrap\">\n                    <Radio.Group value={this.state.size} onChange={this.handleChangeSize}>\n                        <Radio value=\"small\">小</Radio>\n                        <Radio value=\"default\">中</Radio>\n                        <Radio value=\"large\">大</Radio>\n                    </Radio.Group>\n                    <Spin size={this.state.size}></Spin>\n                    <Spin size={this.state.size} indicator={icon} style={{ marginLeft: 20 }}></Spin>\n                </Card>\n\n                <Card title=\"内容遮罩Spin + Alert\" className=\"card-wrap\">\n                   \n                    <div style={{marginBottom:20}}>\n                        Loading state: <Switch checked={this.state.loading} onChange={this.handleChangeLoading}/>\n                    </div>\n                    <Alert\n                        showIcon\n                        closable\n                        onClose={() => {\n                            alert('点击了关闭');\n                        }}\n                        message=\"Alert type='success'\"\n                        description=\"命名使用英文语义化，禁止使用特殊字符，禁止使用拼音，禁止使用中英文混合！\"\n                        type=\"success\"\n                        style={{marginBottom:20}}\n                    />\n                    \n                    <Spin size={this.state.size} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='info'\"\n                            description=\"项目、目录、html/css/js等文件命名全部采用小写方式， 以下划线分隔。eg：my_project_name\"\n                            type=\"info\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} tip=\"加载中...\" spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='warning' Spin tip='加载中...' \"\n                            description=\"html/css/js文件名一一对应参考微信小程序.eg: login.html、login.css、login.js\"\n                            type=\"warning\"\n                            style={{marginBottom:20}}\n                        />\n                    </Spin>\n\n                    <Spin size={this.state.size} indicator={icon} spinning={this.state.loading}>\n                        <Alert\n                            message=\"Alert type='error' indicator='<Icon type='loading'></Icon>' \"\n                            description=\"class、图片、视频、音频采用小写方式，以下划线或中划线分隔；eg：btn-play或btn_play\"\n                            type=\"error\"\n                        />\n                    </Spin>\n\n                </Card>\n\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card,Button,notification,Select } from 'antd';\nimport './ui.less';\n\nexport default class Notification extends React.Component {\n    state = {\n        size: 'default',\n        loading:true,\n    }\n\n    handleOpen = (type) => {\n        notification[type]({\n            message: '我是通知消息的title',\n            description: '我是通知消息的desc',\n            duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n            \n        })\n    }\n\n    \n\n    render() {\n        const options = ['topLeft', 'topRight', 'bottomLeft', 'bottomRight'];\n\n        return (\n            <div>\n                <Card title=\"通知提醒框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                </Card>\n                <Card title=\"通知提醒框-方向控制\" className=\"card-wrap\">\n                    <Select\n                        defaultValue=\"topRight\"\n                        style={{ width: 140, marginRight: 10 }}\n                        onChange={(val) => {\n                            notification.open({\n                                type:'info',\n                                message:`我是${val} title`,\n                                description: '这里是好长好长的描述',\n                                placement: val,//方向\n                            });\n                        }}\n                    >\n                        {options.map(val => \n                            <Select.Option key={val} value={val}>\n                                {val}\n                            </Select.Option>\n                        )}\n                    </Select>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Button, message } from 'antd';\nimport './ui.less';\n\nexport default class Messages extends React.Component {\n\n    state = {};\n    /**\n     * 第一个参数，提示内容\n     * 第二个参数，自动关闭的延时，单位秒。设为 0 时不自动关闭。\n     * 第三个参数，关闭时触发的回调函数\n     * 详情：https://ant.design/components/message-cn/#components-message-demo-duration\n     */\n    handleOpen = (type)=>{\n        message[type]('我是全局Message提示内容',2,()=>{\n            alert('2s -->close')\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"全局提示框\" className=\"card-wrap\">\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('success')}>Success</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('info')}>Info</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('warning')}>Warning</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('error')}>Error</Button>\n                    <Button type=\"primary\" onClick={()=>this.handleOpen('loading')}>Loading</Button>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from \"react\";\nimport { Card, Tabs, message, Icon, Radio } from \"antd\";\nimport \"./ui.less\";\n\nexport default class Tabpages extends React.Component {\n    newTabIndex = 0;\n\n    panes = [\n        { title: \"Tab 1\", content: \"Content of Tab 1\", key: \"1\" },\n        { title: \"Tab 2\", content: \"Content of Tab 2\", key: \"2\" },\n        {\n            title: \"Tab 3\",\n            content: \"Content of Tab 3\",\n            key: \"3\",\n            closable: false\n        }\n    ];\n    state = {\n        mode: \"top\",\n        size: \"default\",\n        activeKey: this.panes[0].key,\n        panes:this.panes\n    };\n\n    handleTab = key => {\n        message.info(\"选择了Tab\" + key, 3);\n    };\n\n    handleChangeMode = e => {\n        this.setState({\n            mode: e.target.value\n        });\n    };\n\n    handleChangeSize = e => {\n        this.setState({\n            size: e.target.value\n        });\n    };\n\n    onChange = activeKey => {\n        this.setState({\n            activeKey\n        });\n    };\n\n    onEdit = (targetKey, action) => {\n        // console.log(action);\n        // console.log(targetKey);\n        //action= 'remove' | 'add'\n        this[action](targetKey);\n    };\n\n    add = () => {\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: activeKey,\n            content: `New Tab Pane${activeKey}`,\n            key: activeKey\n        });\n        this.setState({ panes, activeKey });\n    };\n\n    remove = targetKey => {\n        console.log(targetKey);\n        console.log(this.state.activeKey);\n        let activeKey = this.state.activeKey;\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (lastIndex >= 0 && activeKey === targetKey) {\n            activeKey = panes[lastIndex].key;\n        }\n        this.setState({ panes, activeKey });\n    };\n\n    render() {\n        return (\n            <div>\n                <Card title=\"Tab页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane tab=\"首页\" key=\"1\">\n                            我是首页内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"财富\" key=\"2\">\n                            我是财富内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"出境\" key=\"3\" disabled>\n                            我是出境内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"朋友\" key=\"4\">\n                            我是朋友内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane tab=\"我的\" key=\"5\">\n                            我是我的内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"Tab带图标页签\" className=\"card-wrap\">\n                    <Tabs defaultActiveKey=\"1\" onChange={this.handleTab}>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"android\" />\n                                    android\n                                </span>\n                            }\n                            key=\"1\"\n                        >\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"apple\" />\n                                    apple\n                                </span>\n                            }\n                            key=\"2\"\n                        >\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"Tab方向/大小控制\" className=\"card-wrap\">\n                    <Radio.Group\n                        value={this.state.mode}\n                        onChange={this.handleChangeMode}\n                        style={{ marginBottom: 20 }}\n                    >\n                        <Radio.Button value=\"top\">top</Radio.Button>\n                        <Radio.Button value=\"left\">left</Radio.Button>\n                        <Radio.Button value=\"bottom\">bottom</Radio.Button>\n                        <Radio.Button value=\"right\">right</Radio.Button>\n                    </Radio.Group>\n\n                    <Radio.Group\n                        value={this.state.size}\n                        onChange={this.handleChangeSize}\n                        style={{ marginBottom: 20, marginLeft: 20 }}\n                    >\n                        <Radio.Button value=\"small\">小</Radio.Button>\n                        <Radio.Button value=\"default\">中</Radio.Button>\n                        <Radio.Button value=\"large\">大</Radio.Button>\n                    </Radio.Group>\n\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        onChange={this.handleTab}\n                        tabPosition={this.state.mode}\n                        size={this.state.size}\n                    >\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"android\" />\n                                    android\n                                </span>\n                            }\n                            key=\"1\"\n                        >\n                            我是android内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"apple\" />\n                                    apple\n                                </span>\n                            }\n                            key=\"2\"\n                        >\n                            我是apple内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"windows\" />\n                                    windows\n                                </span>\n                            }\n                            key=\"3\"\n                        >\n                            我是windows内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"ie\" />\n                                    ie\n                                </span>\n                            }\n                            key=\"4\"\n                        >\n                            我是ie内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"chrome\" />\n                                    chrome\n                                </span>\n                            }\n                            key=\"5\"\n                        >\n                            我是chrome内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"github\" />\n                                    github\n                                </span>\n                            }\n                            key=\"6\"\n                        >\n                            我是github内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"weibo\" />\n                                    weibo\n                                </span>\n                            }\n                            key=\"7\"\n                        >\n                            我是weibo内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"html5\" />\n                                    html5\n                                </span>\n                            }\n                            key=\"8\"\n                        >\n                            我是html5内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"qq\" />\n                                    qq\n                                </span>\n                            }\n                            key=\"9\"\n                        >\n                            我是qq内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"alipay\" />\n                                    alipay\n                                </span>\n                            }\n                            key=\"10\"\n                        >\n                            我是alipay内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"google\" />\n                                    google\n                                </span>\n                            }\n                            key=\"11\"\n                        >\n                            我是google内容。。。\n                        </Tabs.TabPane>\n                        <Tabs.TabPane\n                            tab={\n                                <span>\n                                    <Icon type=\"taobao\" />\n                                    taobao\n                                </span>\n                            }\n                            key=\"12\"\n                        >\n                            我是taobao内容。。。\n                        </Tabs.TabPane>\n                    </Tabs>\n                </Card>\n\n                <Card title=\"可添加/删除\" className=\"card-wrap\">\n                    <Tabs\n                        activeKey={this.state.activeKey}\n                        type=\"editable-card\"\n                        onChange={this.onChange}\n                        onEdit={this.onEdit}\n                    >\n                        {this.state.panes.map(pane => (\n                            <Tabs.TabPane\n                                tab={pane.title}\n                                closable={pane.closable}\n                                key={pane.key}\n                            >\n                                {pane.content}\n                            </Tabs.TabPane>\n                        ))}\n                    </Tabs>\n                </Card>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { Row,Col,Card,Modal } from 'antd';\nimport Utils from '../../utils/utils';\n\nexport default class Gallery extends React.Component {\n\n\n    state = {\n        visible: false,\n        currentImg:''\n    }\n\n    openGallery = (imgUrl) => {\n        this.setState({\n            visible: true,\n            currentImg:'/assets/img/gallery/'+imgUrl\n        })\n    }\n\n    render() {\n        const imgs = [\n            ['1.png', '2.png', '3.png', '4.png', '5.png'],\n            ['6.png', '7.png', '8.png', '9.png', '10.png'],\n            ['11.png', '12.png', '13.png', '14.png', '15.png'],\n            ['16.png', '17.png', '18.png', '19.png', '20.png'],\n            ['21.png', '22.png', '23.png', '24.png', '25.png']\n        ]\n        const imgList = imgs.map((list)=>\n            list.map(item=>\n                <Card\n                    key={item}\n                    style={{ marginBottom: 10 }}\n                    cover={<img alt={item} src={`${Utils.cdnUrl}/assets/img/gallery/` + item} />}\n                    onClick={()=>this.openGallery(item)}\n                   \n                >\n                <Card.Meta\n                    title=\"React antd gallery画廊\"\n                    description=\"www.google.com\"\n                    />\n                </Card>\n            )\n        );\n        return (\n            <div className=\"card-warp\">\n                <Row gutter={10}>\n                    {\n                        imgList.map((item,index) =>\n                            <Col key={index} md={index === imgList.length-1?4:5}>{item}</Col>\n                        )\n                    }\n                    {/* <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={5}></Col>\n                    <Col md={4}></Col> */}\n                </Row>\n\n                <Modal\n                    width={300}\n                    height={500}\n                    title=\"图片画廊\"\n                    visible={this.state.visible}\n                    footer={null}\n                    onCancel={() => {\n                        this.setState({\n                            visible:false\n                        })\n                    }}\n\n                >\n                    {<img src={this.state.currentImg} alt=\"\" style={{width:'100%'}}/>}\n                </Modal>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\nimport Utils from '../../utils/utils';\nimport { Card,Carousel} from 'antd';\n\nexport default class Carousels extends React.Component {\n    state = {};\n\n    afterChange = (currentIndex)=>{\n        // console.log('afterChange--currentIndex->',currentIndex)\n    }\n\n    beforeChange = (from,to) => {\n        // console.log('beforeChange--from->',from)\n        // console.log('beforeChange--to->',to)\n        \n    }\n\n    render() {\n        console.log(Utils.cdnUrl)\n        return (\n            <div>\n                <Card title=\"文字背景轮播\">\n                    <Carousel autoplay effect=\"fade\">\n                        <div><h3>Ant Motion Banner - React</h3></div>\n                        <div><h3>Ant Motion Banner - Vue</h3></div>\n                        <div><h3>Ant Motion Banner - Angular</h3></div>\n                    </Carousel>\n                </Card>\n\n                <Card title=\"图片轮播\" className=\"slider-wrap\">\n                    <Carousel autoplay afterChange={this.afterChange} beforeChange={this.beforeChange}>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-1.jpg`} alt=\"\"/></div>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-2.jpg`} alt=\"\"/></div>\n                        <div><img src={`${Utils.cdnUrl}/assets/img/carousel-img/carousel-3.jpg`} alt=\"\"/></div>\n                    </Carousel>\n                </Card>\n            </div>\n        )\n    }\n\n    \n\n\n}\n\n\n","import React from 'react';\n\nimport { Card,Form,Icon,Input,Button, Checkbox } from 'antd';\n\n\n\nfunction hasErrors(fieldsError) {\n    return Object.keys(fieldsError).some(field => fieldsError[field]);\n}\n\n  \n\nclass Login extends React.Component {\n   \n    state = {};\n\n    componentDidMount() {\n        this.props.form.validateFields();\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n\n    handleSubmit2 = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values)\n            }\n        })\n    }\n    \n\n   \n    render() {\n        // console.log(this.props.form);\n        const { isFieldTouched, getFieldError,getFieldDecorator,getFieldsError } = this.props.form;\n        const userNameError = isFieldTouched('userName') && getFieldError('userName');\n        const passwordError = isFieldTouched('password') && getFieldError('password');\n\n        return (\n            <div>\n                <Card title=\"登录行内表单\">\n                    <Form layout=\"inline\" onSubmit={this.handleSubmit}>\n                        <Form.Item\n                            validateStatus={userNameError ? \"error\" : \"\"}\n                            help={userNameError || \"\"}\n                        >\n                            {\n                                getFieldDecorator('userName', {\n                                    rules: [\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item\n                            validateStatus={passwordError ? \"error\" : ''}\n                            help={passwordError || ''}\n                        >\n                            {\n                                getFieldDecorator('password',{\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'密码不能为空'\n                                        },\n                                        // {\n                                        //     min:6,max:20,\n                                        //     message:'密码长度在6-20位'\n                                        // },\n                                        {\n                                            pattern:new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/,'g'),\n                                            message:'6-20位密码(包含字母、数字和下划线)'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefx={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" disabled={hasErrors(getFieldsError())}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            \n            \n                <Card title=\"登录水平表单\" style={{marginTop:20}}>\n                    <Form style={{width:300}}>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('userName',{\n                                    initialValue:'',\n                                    rules:[\n                                        {\n                                            required:true,\n                                            message:'用户名不能为空'\n                                        },\n                                        {\n                                            min:5,max:10,\n                                            message:'用户名长度在5-10位'\n                                        },\n                                        {\n                                            pattern:new RegExp('^\\\\w+$','g'),\n                                            message:'用户名必须为字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入用户名\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: []\n                                })(\n                                    <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }}/>} placeholder=\"请输入密码\"/>\n                                )\n                            }\n                        </Form.Item>\n                        <Form.Item>\n                            {\n                                getFieldDecorator('remember', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>记住密码</Checkbox>\n                                )\n                            }\n                            <a href=\"#\" style={{float:'right'}}>忘记密码</a>\n                        </Form.Item>\n                        <Form.Item>\n                            <Button onClick={this.handleSubmit2} type=\"primary\" htmlType=\"submit\" style={{width:'100%'}}>登录</Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\nexport default Form.create()(Login);\n\n\n","import React from 'react';\nimport { Card, Form, Input, Button, Icon, message, Radio, InputNumber, Select, Switch, DatePicker, TimePicker, Cascader, Upload, Checkbox } from 'antd';\nimport moment from 'moment';\n\nclass Register extends React.Component {\n    state = {\n        userImg: '',//头像\n        loading:false,\n    }\n\n\n\n    handleSubmit = () => {\n        // let values = this.props.form.getFieldsValue();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(JSON.stringify(values,null,2));\n                message.success(`恭喜${values.userName}注册成功，密码：${values.password}`)\n            }\n        })\n    }\n\n    //地址选择返回的自定义格式\n    displayRender = (label) => {\n        console.log(label)\n        return label.join('-');\n    }\n\n    //头像上传之前 可做一些对图片的要求\n    beforeUpload = (file)=>{\n        const isJPG = file.type === 'image/jpeg';\n        if (!isJPG) {\n            message.error('上传的图片必须是jpg格式');\n        }\n\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error('上传的图片必须小于2MB!');\n        }\n        return isJPG && isLt2M;\n    }\n\n    getBase64 = (img,callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    handleChange = (info) => {\n        if (info.file.status === 'uploading') {\n            this.setState({ loading: true });\n            return;\n        }\n        if (info.file.status === 'done') {\n            // Get this url from response in real world.\n            this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n                userImg:imageUrl,\n                loading: false,\n            }));\n        }\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 3\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 12\n            }\n        }\n        const offsetLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 24\n                },\n                sm: {\n                    span: 12,\n                    offset: 3\n                }\n            }\n        }\n        const roleSelectList = [\n            { id: 1, value: '皇帝' },\n            { id: 2, value: '大臣' },\n            { id: 3, value: '宰相' },\n            { id: 4, value: '将军' },\n            { id: 5, value: '臣子' }\n        ]\n        const interestSelectList = [\n            { id: 1, value: '写代码' },\n            { id: 2, value: '撩妹子' },\n            { id: 3, value: '打篮球' },\n            { id: 4, value: '泡网吧' },\n            { id: 5, value: 'K歌' }\n        ]\n        const options = [\n            {\n                value: '四川省',//获取的值\n                label: '四川省',//显示的值\n                children: [\n                    {\n                        value: '成都市',\n                        label: '成都市',\n                        children: [\n                            {\n                                value: '高新区',\n                                label: '高新区',\n                            },\n                            {\n                                value: '武侯区',\n                                label: '武侯区',\n                            },\n                            {\n                                value: '青羊区',\n                                label: '青羊区',\n                            },\n                            {\n                                value: '锦江区',\n                                label: '锦江区',\n                            }\n                        ]\n                    },\n                    {\n                        value: '绵阳市',\n                        label: '绵阳市',\n                        children: [\n                            {\n                                value: '涪城区',\n                                label: '涪城区',\n                            },\n                            {\n                                value: '三台县',\n                                label: '三台县',\n                            },\n                            {\n                                value: '江油市',\n                                label: '江油市',\n                            },\n                            {\n                                value: '游仙区',\n                                label: '游仙区',\n                            }\n\n                        ]\n                    }\n                ]\n            },\n            {\n                value: '广东省',\n                label: '广东省',\n                children: [\n                    {\n                        value: '广州市',\n                        label: '广州市',\n                        children: [\n                            {\n                                vlaue:'天河区',\n                                label:'天河区',\n                            },\n                            {\n                                vlaue:'白云区',\n                                label:'白云区',\n                            },\n                            {\n                                vlaue:'海珠区',\n                                label:'海珠区',\n                            }\n                       \n                        ]\n                    },\n                    {\n                        value: '中山市',\n                        label: '中山市',\n                    },\n                    {\n                        value: '珠海市',\n                        label: '珠海市',\n                    },\n                    {\n                        value: '江门市',\n                        label: '江门市',\n                    }\n                ]\n            }\n        ]\n\n        const uploadButton = (\n            <div>\n                <Icon type={this.state.loading ? 'loading' : 'plus'} />\n                <div className=\"ant-upload-text\">上传</div>\n            </div>\n        );\n        return (\n            <div>\n                <Card title=\"注册表单\">\n                    <Form layout=\"horizontal\">\n                        <Form.Item label=\"用户名\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userName', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '用户名不能为空'\n                                        },\n                                        {\n                                            min: 5, max: 12,\n                                            message: '用户名长度5-12'\n                                        }, {\n                                            pattern: new RegExp('^\\\\w+$', 'g'),\n                                            message: '用户名必须是字母或者数字'\n                                        }\n                                    ]\n                                })(\n                                    <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"密码\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('password', {\n                                    initialValue: '',\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '密码不能为空'\n                                        },\n                                        {\n                                            pattern: new RegExp(/^[A-Za-z0-9~`!@#$%^&*()_+-='\",;.?/|]{6,20}$/, 'g'),\n                                            message: '密码必须是6-20位(包含字母、数字和下划线、特殊字符)'\n                                        }\n                                    ]\n                                })(\n                                    <Input type=\"password\" prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入密码\" />\n                                )\n                            }\n\n                        </Form.Item>\n\n                        <Form.Item label=\"性别\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('sex', {\n                                    initialValue: 1,\n                                })(\n                                    <Radio.Group>\n                                        <Radio value={1}>男</Radio>\n                                        <Radio value={2}>女</Radio>\n                                    </Radio.Group>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"年龄\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('age', {\n                                    initialValue: 23,\n                                })(\n                                    <InputNumber min={18} max={60} />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"角色选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('role', {\n                                    initialValue: 3,\n                                })(\n                                    <Select>\n                                        {\n                                            roleSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"爱好选择\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('interest', {\n                                    initialValue: [2, 3, 4],\n                                })(\n                                    <Select mode=\"multiple\" placeholder=\"可多选爱好\">\n                                        {\n                                            interestSelectList.map((item, index) => {\n                                                return (\n                                                    <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                                )\n                                            })\n                                        }\n\n                                    </Select>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"是否婚配\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('isMarried', {\n                                    initialValue: false,\n                                    valuePropName:'checked'\n                                })(\n                                    <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"生日\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('birthday', {\n                                    initialValue: moment('1993-06-06'),\n                                })(\n                                    <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n                                )\n                            }\n                        </Form.Item>\n\n\n                        <Form.Item label=\"填写联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('address', {\n                                    initialValue: '四川省成都市高新区',\n                                })(\n                                    <Input.TextArea autosize={{\n                                        minRows: 4, maxRows: 6\n                                    }}></Input.TextArea>\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"选择联系地址\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('addressSelect', {\n                                    initialValue: ['四川省','成都市','高新区'],\n                                })(\n                                    <Cascader\n                                        options={options}\n                                        expandTrigger=\"hover\"\n                                        displayRender={this.displayRender}\n                                    />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"早起时间\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('time', {\n                                    initialValue: moment('08-10-00',\"HH:mm:ss\"),\n                                })(\n                                    <TimePicker />\n                                )\n                            }\n                        </Form.Item>\n\n                        <Form.Item label=\"头像\" {...formItemLayout}>\n                            {\n                                getFieldDecorator('userImg', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message:'请上传头像'\n                                        }\n                                    ]\n                                })(\n                                    <Upload\n                                        listType=\"picture-card\"\n                                        showUploadList={false}\n                                        action=\"//jsonplaceholder.typicode.com/posts/\"\n                                        beforeUpload={this.beforeUpload}\n                                        onChange={this.handleChange}\n                                    >\n                                    {this.state.userImg?<img src={this.state.userImg} alt=\"头像\"/>:uploadButton}\n                                    </Upload>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            {\n                                getFieldDecorator('isAgree', {\n                                    initialValue: true,\n                                    valuePropName:'checked'\n                                })(\n                                    <Checkbox>我已阅读过<a>注册协议</a> </Checkbox>\n                                )\n                            }\n                        </Form.Item>\n\n\n\n                        <Form.Item {...offsetLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}>注册</Button>\n                        </Form.Item>\n\n                    </Form>\n                </Card>\n            </div>\n        )\n    }\n}\n\nexport default Form.create()(Register);\n\n","import React from 'react';\nimport { Card, Table, Avatar,Badge,Tooltip, Button,Radio,Modal,notification }from 'antd';\nimport moment from 'moment';\nimport axios from './../../axios/axios';\nimport Utils from './../../utils/utils';\n\nexport default class BasicTable extends React.Component {\n    state = {\n        dataSource: [],\n        selectedRowKeys: [],\n        loading: false,\n        actionMode: 'radio',\n    }\n\n    params = {\n        page: 1,\n        pageSize:10\n    }\n\n    onChangeBtn = (e)=>{\n        this.setState({\n            actionMode: e.target.value,\n            selectedRowKeys: [],//单选和多选切换时将之前选中的清空\n            loading: false,\n        })\n    }\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk:()=> {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration:3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n    onRowClick = (record,index) => {\n        console.log('onRowClick->record',record);\n        console.log('onRowClick->index', index);\n        const selectedRowKeys = [index];\n        this.setState({\n            selectedRowKeys,\n            selectedItem:record\n        });\n    }\n\n   \n\n    onSelectChange = (selectedRowKeys,selectedRows) => {\n        console.log(selectedRowKeys);\n        console.log('selectedRows',selectedRows);\n        this.setState({\n            selectedRowKeys,\n            selectedRows\n        });\n    }\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params\n        }).then((res) => {\n            console.log('res',res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource:res.result.list,\n                    selectedRowKeys:[],\n                    selectedRows:null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n\n\n    render() {\n        const columns = [\n            {\n                title:'id',\n                key:'id',\n                dataIndex:'id'\n            },\n            {\n                title:'用户名',\n                key:'userName',\n                dataIndex:'userName'\n            },\n            {\n                title:'头像',\n                key:'userImg',\n                dataIndex: 'userImg',\n                render : (userImg) => {\n                    return userImg?<Avatar src={userImg}/>:<Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title:'性别',\n                key:'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title:'年龄',\n                key:'age',\n                dataIndex:'age'\n            },\n            {\n                title:'角色',\n                key:'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1:'皇帝',\n                        2:'大臣',\n                        3:'宰相',\n                        4:'将军',\n                        5:'臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title:'爱好',\n                key:'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1:'写代码',\n                        2:'撩妹子',\n                        3:'打篮球',\n                        4:'泡网吧',\n                        5:'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length >2? strArr.join(','):''}>\n                        <span>{strArr.length === 0?'无':strArr.length > 2?strArr.slice(0,2).join(',')+'...':strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n                  \n                }\n            },\n            {\n                title:'是否婚配',\n                key:'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title:'生日',\n                key:'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title:'联系地址',\n                key:'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length >10? address:''}>\n                        <span>{address.length >10?address.slice(0,10)+'...':address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title:'早起时间',\n                key:'time',\n                dataIndex:'time'\n            }\n        ]\n        //设置表格内容 居中显示\n        columns.map(item => {\n            item.align = \"center\";\n        })\n        const { loading, selectedRowKeys,actionMode } = this.state;\n        const rowSelection = {\n            type:actionMode,\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        const hasSelected = selectedRowKeys.length > 0;\n        \n\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Radio.Group defaultValue={actionMode} buttonStyle=\"solid\" onChange={this.onChangeBtn}>\n                                <Radio.Button value=\"radio\">单选</Radio.Button>\n                                <Radio.Button value=\"checkbox\">多选</Radio.Button>\n                            </Radio.Group>\n                            <Button\n                                style={{marginLeft:8}}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n                            \n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected?`当前选中${selectedRowKeys.length}项`:''}\n                            </span>\n                        </div>\n\n                    <Table\n                        size=\"middle\"\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.dataSource}\n                        // pagination={false}\n                        pagination={this.state.pagination}\n                            rowSelection={rowSelection} //选择行\n                            onRow={(record,index) => {\n                                return {\n                                    onClick: () => {\n                                        //如果是单选模式可以点击行选中，多选不行\n                                        if (actionMode === \"radio\") {\n                                            this.onRowClick(record,index);\n                                        }\n                                    }\n                                }\n                            }}\n                    />\n                    </div>\n                    \n\n                    \n                </Card>\n            </div>\n        )\n    }\n\n    \n    \n\n\n}\n\n\n","import React from 'react';\nimport { Card, Table, Avatar, Badge, Tooltip, Button, Radio, Modal, notification, Form, Switch } from 'antd';\nimport moment from 'moment';\nimport axios from '../../axios/axios';\nimport Utils from '../../utils/utils';\nconst FormItem = Form.Item;\n\nconst scrollY = { y: 300 };\nconst scrollX = { x: 1300 };\n\nexport default class HightTable extends React.Component {\n    state = {\n        dataSource: [],\n        selectedRowKeys: [],\n        loading: false,\n        scrollY: undefined,\n        scrollX: undefined,\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10\n    }\n\n\n\n    //删除\n    handleDelete = () => {\n        Modal.confirm({\n            title: '删除提示',\n            content: '确定删除所选用户？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk: () => {\n                console.log(this.state.selectedRowKeys);\n                console.log(this.state.dataSource);\n                notification.success({\n                    message: '提示',\n                    description: '删除成功！',\n                    duration: 3,//3s自动关闭 默认4.5s，设置为null不关闭\n                })\n            },\n        })\n    }\n\n\n    getList = () => {\n        axios.ajax({\n            url: '/user/list',\n            params: this.params\n        }).then((res) => {\n            console.log('res', res);\n            let _this = this;\n            if (res.code === 0) {\n                res.result.list.map((item, index) => {\n                    item.key = index;\n                })\n                console.log(res)\n                this.setState({\n                    dataSource: res.result.list,\n                    selectedRowKeys: [],\n                    selectedRows: null,\n                    pagination: Utils.pagination(res, (page, pageSize) => {\n                        _this.params.page = page;\n                        _this.params.pageSize = pageSize;\n                        this.getList();\n                    })\n                })\n            }\n        })\n    }\n\n    //组件已经挂载好了-->render函数执行完毕--->用的最多-常用来发起Ajax请求\n    componentDidMount() {\n        this.getList();\n    }\n\n    //固定头部\n    handleScollYChange = (enable) => {\n        this.setState({\n            scrollY: enable ? scrollY : undefined\n        })\n    }\n\n    handleScollXChange = (enable) => {\n        this.setState({\n            scrollX: enable ? scrollX : undefined\n        })\n    }\n\n\n    render() {\n        const columns1 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age',\n                sorter: (a, b) => a.age - b.age\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '功能操作',\n                key: 'action',\n                dataIndex: 'action',\n                render: () => {\n                    return (\n                        <div>\n                            <Button size=\"small\" type=\"primary\">修改</Button>\n                            <Button onClick={this.handleDelete} size=\"small\" type=\"danger\">删除</Button>\n                            <Button size=\"small\" type=\"default\">记录</Button>\n                            <Button size=\"small\" type=\"dashed\">复制</Button>\n                        </div>\n                    )\n                }\n            },\n\n        ]\n\n        columns1.map((item,index) => {\n            item.align = \"center\";\n            item.width = 80\n            if (index === columns1.length - 1) {\n                item.width = 200\n            }\n        })\n\n\n\n        const columns2 = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id',\n                fixed: 'left',\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName',\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age'\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time',\n                fixed: 'right',\n            }\n        ]\n\n       \n\n\n        //设置表格内容 居中显示\n        columns2.map(item => {\n            item.align = \"center\";\n            item.width = 80\n        })\n        const { loading, selectedRowKeys } = this.state;\n\n        const hasSelected = selectedRowKeys.length > 0;\n\n\n        return (\n            <div>\n                <Card title=\"高级表格-头固定-排序-操作按钮\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"头部固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollY} onChange={this.handleScollYChange} />\n                                </FormItem>\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns1}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollY}\n                        />\n                    </div>\n\n\n\n                </Card>\n\n                <Card title=\"高级表格-列固定\">\n                    <div>\n                        <div style={{ marginBottom: 16 }}>\n                            <Form layout=\"inline\">\n                                <FormItem label=\"列固定\">\n                                    <Switch checkedChildren=\"开\" unCheckedChildren=\"关\" checked={!!this.state.scrollX} onChange={this.handleScollXChange} />\n                                </FormItem>\n\n\n                            </Form>\n                            <Button\n                                style={{ marginLeft: 8 }}\n                                type=\"danger\"\n                                disabled={!hasSelected}\n                                loading={loading}\n                                onClick={this.handleDelete}\n\n                            >删除</Button>\n                            <span style={{ marginLeft: 8 }}>\n                                {hasSelected ? `当前选中${selectedRowKeys.length}项` : ''}\n                            </span>\n                        </div>\n\n                        <Table\n                            size=\"middle\"\n                            bordered\n                            columns={columns2}\n                            dataSource={this.state.dataSource}\n                            // pagination={false}\n                            pagination={this.state.pagination}\n                            scroll={this.state.scrollX}\n                        />\n                    </div>\n\n\n\n                </Card>\n            </div>\n        )\n    }\n\n\n\n\n\n}\n\n\n","import React from 'react';\nimport { Form, Select,Input,DatePicker,Checkbox,Button } from 'antd';\nimport utils from '../../utils/utils';\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nconst { MonthPicker } = DatePicker;\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nclass FilterForm extends React.Component{\n    state = {};\n\n    search = () => {\n        let data = this.props.filterList;\n        let searchData = this.props.form.getFieldsValue();\n        // isUnTimeStamp 默认不传返回的就是时间戳 传了true 就按照传递的format进行格式化。\n        data.map((item) => {\n            if (item.type === 'timeSelect') {\n                let formatStr = item.format || 'YYYY-MM-DD';\n                let start_time_field = item.startField || 'startTime';\n                let end_time_field = item.endField || 'endTime';\n                if (!item.isUnTimeStamp) {\n                    searchData[start_time_field] = searchData[start_time_field]?moment(searchData[start_time_field]).unix():'';\n                    searchData[end_time_field] = searchData[end_time_field]?moment(searchData[end_time_field]).unix():'';\n                } else {\n                    searchData[start_time_field] = searchData[start_time_field]?searchData[start_time_field].format(formatStr):'';\n                    searchData[end_time_field] = searchData[end_time_field]?searchData[end_time_field].format(formatStr):'';\n                }\n            }\n            if (item.type === 'timeSelectSingle') {\n                let formatStr = item.format || 'YYYY-MM-DD';\n                let start_time_field = item.startField || 'startTime';\n                if (!item.isUnTimeStamp) {\n                    searchData[start_time_field] = searchData[start_time_field]?moment(searchData[start_time_field]).unix():'';\n                } else {\n                    searchData[start_time_field] = searchData[start_time_field]?searchData[start_time_field].format(formatStr):'';\n                }\n                \n            }\n        })\n        this.props.search(searchData);\n    }\n\n    getItems = () => {\n        const { getFieldDecorator } = this.props.form;\n        let data = this.props.filterList;\n        let formItems = [];\n        if (data && data.length > 0) {\n            data.map(item => {\n                let label = item.label;\n                let field = item.field;\n                let initialValue = item.initialValue || '';\n                let width = item.width || 120;\n                let list = item.list || [];\n                let key = item.key || '';\n                let value = item.value || '';\n                let placeholder = item.placeholder || '请选择';\n                let showSearch = item.showSearch || false; //是否开启搜索\n                let mode = item.mode && item.mode === 'm' ? \"multiple\" : '';//m多选 否则单选\n\n                //input\n                let allowClear = item.allowClear || false;//是否显示清除按钮\n                let inputType = item.inputType || 'text';//类型\n\n                //时间区间选择相关属性\n                let showTime = item.showTime?item.showTime:true;//时间选择 是否显示选择时分秒\n                let format = item.format || 'YYYY-MM-DD HH:mm:ss';\n\n                let startField = item.startField || 'startTime';\n                let endField = item.endField || 'endTime';\n\n                let initialStartTime = item.initialStartTime || null;//开始时间 初始值\n                let initialEndTime = item.initialEndTime || null;//结束时间 初始值\n                \n                let startPlaceholder = item.startPlaceholder || '开始时间';\n                let endPlaceholder = item.endPlaceholder || '结束时间';\n\n                let onChange = item.onChange || null;\n\n\n                switch (item.type) {\n                    case 'select':\n                        let select = <FormItem key={field} label={label}>\n                            {\n                                getFieldDecorator([field], {\n                                    initialValue:initialValue\n                                })(\n                                    <Select\n                                        key={field}\n                                        style={{ width }}\n                                        placeholder={placeholder}\n                                        showSearch={showSearch}\n                                        mode={mode}\n                                    >\n                                        { utils.getOptions(list,key,value)}\n                                    </Select>\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(select);\n                        break;\n                    case 'input':\n                        let input = <FormItem key={field} label={label}>\n                            {\n                                getFieldDecorator([field], {\n                                    initialValue:initialValue\n                                })(\n                                    <Input\n                                        style={{ width }}\n                                        type={inputType}\n                                        placeholder={placeholder}\n                                        allowClear={allowClear}\n                                    />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(input);\n                        break;\n                    case 'timeSelect':\n                        let startTime = <FormItem label={label} key={startField}>\n                            {\n                                getFieldDecorator([startField], {\n                                    initialValue: initialStartTime,\n                                })(\n                                    <DatePicker\n                                        style={{width}}\n                                        showTime={showTime}\n                                        placeholder={startPlaceholder}\n                                        format={format} />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(startTime);\n\n                        let endTime = <FormItem label=\"~\" colon={false} key={endField}>\n                            {\n                                getFieldDecorator([endField], {\n                                    initialValue: initialEndTime,\n                                })(\n                                    <DatePicker\n                                        style={{ width }}\n                                        showTime={showTime}\n                                        placeholder={endPlaceholder}\n                                        format={format} />\n                                )\n                            }\n                        </FormItem>\n                        formItems.push(endTime);\n                        break;\n                    case 'timeSelectSingle':\n                        let startTimeSingle = '';\n                        if (format === 'YYYY-MM') {\n                            startTimeSingle= <FormItem label={label} key={startField}>\n                            {\n                                getFieldDecorator([startField], {\n                                    initialValue: initialValue,\n                                })(\n                                    <MonthPicker\n                                        style={{ width }}\n                                        showTime={showTime}\n                                        placeholder={placeholder}\n                                        format={format}\n                                        onChange={onChange}/>\n                                )\n                            }\n                        </FormItem>;\n                        } else {\n                            startTimeSingle = <FormItem label={label} key={startField}>\n                                {\n                                    getFieldDecorator([startField], {\n                                        initialValue: initialStartTime,\n                                    })(\n                                        <DatePicker\n                                            style={{ width }}\n                                            showTime={showTime}\n                                            placeholder={placeholder}\n                                            format={format} />\n                                    )\n                                }\n                            </FormItem>;\n                        }\n                        \n                        formItems.push(startTimeSingle);\n                        break;\n                    \n                    case 'checkbox':\n                    let checkbox = <FormItem key={field}>\n                        {\n                            getFieldDecorator([field], {\n                                valuePropName: 'checked',\n                                initialValue: initialValue || false,\n                            })(\n                                <Checkbox>\n                                    {label}\n                                </Checkbox>\n                            )\n                        }\n                    </FormItem>\n                    formItems.push(checkbox);\n                        break;\n                    \n                }\n            })\n            return formItems;\n\n        }\n    }\n\n    render() {\n        return (\n            <Form layout=\"inline\">\n                {this.getItems()}\n                <FormItem>\n                    <Button onClick={this.search} type=\"primary\" icon=\"search\" style={{ margin: '0 10px' }}>搜索</Button>\n                    <Button onClick={()=>this.props.form.resetFields()}>重置</Button>\n                 </FormItem>\n            </Form>\n        )\n    }\n\n\n}\n\nexport default Form.create({})(FilterForm);\n","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\n\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nconst cityIdArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '北京' },\n    { id: 2, name: '上海' },\n    { id: 3, name: '广州' },\n    { id: 4, name: '深圳' },\n    { id: 5, name: '成都' }\n]\n\nconst modeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '指定停车点模式' },\n    { id: 2, name: '禁停区模式' },\n]\nconst opModeArr = [\n    { id: '', name: '全部' },\n    { id: 1, name: '自营' },\n    { id: 2, name: '加盟' },\n]\n\nexport default class City extends React.Component {\n   \n    state = {\n        isShowOpenCityModal: false,\n    };\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n    \n\n    getList() {\n        axios.getList(this,'/open/city',this.params);\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n\n    //开通城市按钮-显示Modal\n    handleOpenCity = () => {\n        this.setState(() => {\n            return {\n                isShowOpenCityModal: true\n            }\n        })\n    }\n\n    //弹框-开通城市-确定提交\n    openCitySubmit = () => {\n        let cityInfo = this.cityForm.props.form.getFieldsValue();\n        message.info(`开通城市所选数据：${JSON.stringify(cityInfo)}`);\n        setTimeout(() => {\n            this.setState(() => {\n                return {\n                    isShowOpenCityModal: false\n                }\n            })\n            notification.success({\n                message: '提示',\n                description: '开通成功',\n            })\n        }, 3000)\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '城市ID',\n                dataIndex: 'id',\n                width: 80,\n            },\n            {\n                title: '城市名称',\n                dataIndex: 'name',\n                width: 135,\n            },\n            {\n                title: '用车模式',\n                dataIndex: 'mode',\n                render: (mode) => {\n                    return mode == 1 ? '停车点' : '禁停区';\n                },\n                width: 135,\n            },\n            {\n                title: '营运模式',\n                dataIndex: 'op_mode',\n                render(op_mode) {\n                    return op_mode == 1 ? '自营' : '加盟';\n                },\n                width: 100,\n            },\n            {\n                title: '授权加盟商',\n                dataIndex: 'franchisee_name',\n                width: 135,\n            },\n            {\n                title: '城市管理员',\n                dataIndex: 'city_admins',\n                render(arr) {\n                    return arr.map((item) => {\n                        return item.user_name;\n                    }).join(',');\n                },\n                width: 150,\n            },\n            {\n                title: '城市开通时间',\n                dataIndex: 'open_time',\n                render: (open_time) => {\n                    return moment(open_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作时间',\n                dataIndex: 'update_time',\n                render: (update_time) => {\n                    return moment(update_time * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                },\n                width: 200,\n            },\n            {\n                title: '操作人',\n                dataIndex: 'sys_user_name',\n            }\n        ]\n\n        columns.map((item, index) => {\n            item.align = \"center\";\n        })\n\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'select',\n                label: '用车模式',\n                field: 'mode',\n                placeholder: '请选择用车模式',\n                width: 140,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '指定停车点模式' },\n                    { id: 2, name: '禁停区模式' },\n                ]\n            },\n            {\n                type: 'select',\n                label: '营运模式',\n                field: 'op_mode',\n                placeholder: '请选择营运模式',\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '自营' },\n                    { id: 2, name: '加盟' },\n                ]\n            },\n            {\n                type: 'select',\n                label: '加盟商授权状态',\n                field: 'auth_status',\n                placeholder: '请选择加盟商授权状态',\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '已授权' },\n                    { id: 2, name: '未授权' },\n                ]\n            },\n            // {\n            //     type: 'input',\n            //     inputType:'number',\n            //     label: '账号',\n            //     field: 'account',\n            //     placeholder: '请输入账号',\n            //     width:150,\n            //     initialValue: '',\n            //     allowClear:true,\n            // },\n            // {\n            //     type: 'checkbox',\n            //     label: '精确',\n            //     field: 'isMatch',\n            // },\n            // {\n            //     type: 'timeSelect',\n            //     label: '注册时间',\n            //     format:'YYYY-MM-DD',\n            //     width:200,\n            // },\n\n        ]\n\n\n\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search}\n                    />\n                </Card>\n                <Card style={{ marginTop: 20 }}>\n                    <Button type=\"primary\" onClick={this.handleOpenCity}>开通城市</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        scroll={{ y: 350 }}\n                    />\n                </div>\n                <Modal\n                    title=\"开通城市\"\n                    visible={this.state.isShowOpenCityModal}\n                    onCancel={() => {\n                        this.setState(() => {\n                            return {\n                                isShowOpenCityModal: false\n                            }\n                        })\n                        this.cityForm.props.form.resetFields();\n                    }}\n                    onOk={this.openCitySubmit}\n                >\n                    <OpenCityFormModal wrappedComponentRef={(open) => { this.cityForm = open; }} />\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nclass OpenCityFormModal extends React.Component {\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                span: 5\n            },\n            wrapperCol: {\n                span: 19\n            }\n        }\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"选择城市\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('city_id', {\n                            initialValue: 1,\n                        })(\n                            <Select style={{ width: 100 }}>\n                                {\n                                    cityIdArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Option key={item.id} value={item.id}>{item.name}</Option>\n                                    })\n                                }\n                            </Select>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"运营模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('op_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    opModeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n                <FormItem label=\"用车模式\" {...formItemLayout}>\n                    {\n                        getFieldDecorator('use_mode', {\n                            initialValue: 1,\n                        })(\n                            <Radio.Group>\n                                {\n                                    modeArr.filter((item, index) => index > 0).map((item) => {\n                                        return <Radio key={item.id} value={item.id}>{item.name}</Radio>\n                                    })\n                                }\n\n                            </Radio.Group>\n                        )\n                    }\n                </FormItem>\n\n            </Form>\n        );\n    }\n}\n\nOpenCityFormModal = Form.create({})(OpenCityFormModal);","import React from 'react';\nimport { Card, Form, Select, Button, Table, message, Modal, Radio, notification, DatePicker } from 'antd';\nimport axios from '../../axios/axios';\nimport Utils from './../../utils/utils';\nimport moment from 'moment';\n\nimport FilterForm from '../../components/filterForm/FilterForm';\n\n\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nexport default class Order extends React.Component {\n    state = {\n        list: [],//列表数据\n        pagination:()=>{},//分页\n        selectedRowKeys: [],//选择列表index数组 单选就是类似：[0]\n        selectedItem: {},//选中列表项\n        isShowFinishOrderModal: false,//是否显示结束订单弹框\n        orderInfo: {},//结束订单弹框详情\n        finishOrderBtnDisabled: true,\n        orderDetailBtnDisabled:true,\n    }\n\n    params = {\n        page: 1,\n        pageSize: 10,\n    }\n\n\n    //搜索-用选择的数据发请求\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    onRowClick = (item,index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            finishOrderBtnDisabled: false,\n            orderDetailBtnDisabled: false,\n        })\n    }\n\n    //订单详情\n    orderDetail = () => {\n        let orderId = this.state.selectedItem.id;\n        window.open(`${Utils.cdnUrl}/#/common/order/detail/${orderId}`,'_blank')\n    }\n\n    //结束订单 弹框\n    finishOrder = () => {\n        let item = this.state.selectedItem;\n       \n        // if (Object.keys(item).length === 0) {\n        //     //判断是否选择了，这里是由于在constructor里面的state初始化了selectedItem为{}\n        //     Modal.info({\n        //         title: '提示',\n        //         content:'请选择一条订单进行结束'\n        //     })\n        //     return;\n        // }\n        this.getOrderInfo(item);\n    }\n\n    //结束订单提交\n    onFinishOrderSubmit = () => {\n        axios.ajax({\n            url: '/order/finish',\n            method: 'post',\n            data: {\n                orderId:this.state.selectedItem.id\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success('订单结束成功');\n                this.setState({\n                    isShowFinishOrderModal:false\n                })\n                this.getList();\n                this.setState({\n                    selectedRowKeys: [],//结束后取消掉之前的选中\n                    selectedItem: {},//结束后重置详情数据\n                    finishOrderBtnDisabled: true,\n                    orderDetailBtnDisabled: true,\n                    \n                })\n            }\n        })\n    }\n\n    //获取订单详情\n    getOrderInfo = (item) => {\n        axios.ajax({\n            url: '/order/finish/info',\n            params: {\n                orderId:item.id\n            }\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    isShowFinishOrderModal:true,\n                    orderInfo:res.result\n                })\n            }\n        })\n    }\n\n    getList = () => {\n        axios.getList(this,'/order/list',this.params);\n    }\n\n    render() {\n        const columns = [\n            {\n                title: '订单编号',\n                dataIndex: 'orderSn',\n            },\n            {\n                title: '车辆编号',\n                dataIndex: 'bikeSn',\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName',\n            },\n            {\n                title: '手机号码',\n                dataIndex: 'mobile',\n            },\n            {\n                title: '里程',\n                dataIndex: 'distance',\n                render: (distance) => {\n                    return distance/1000 + 'km'\n                }\n            },\n            {\n                title: '行程时长',\n                dataIndex: 'totalTime',\n            },\n            {\n                title: '状态',\n                dataIndex: 'status',\n                render: (status) => {\n                    return status === 1?'进行中':'行程结束'\n                }\n            },\n            {\n                title: '开始时间',\n                dataIndex:'startTime',\n            },\n            {\n                title: '结束时间',\n                dataIndex: 'endTime',\n            },\n            {\n                title: '订单金额',\n                dataIndex: 'totalFee',\n            },\n            {\n                title: '实付金额',\n                dataIndex: 'userPay',\n            }\n        ]\n        columns.map(item => item.align = \"center\");\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys\n        }\n        const formItemLayout = {\n            labelCol:{span:5},\n            wrapperCol:{span:19}\n        }\n\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'timeSelect',\n                label: '订单时间',\n                width: 200,\n            },\n            {\n                type: 'select',\n                label: '订单状态',\n                field: 'orderStatus',\n                placeholder: '请选择订单状态',\n                width: 135,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '进行中' },\n                    { id: 2, name: '进行中(临时锁车)' },\n                    { id: 3, name: '行程结束' }\n                ]\n            },\n        ]\n\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search} />\n                </Card>\n                <Card style={{marginTop:20}}>\n                    <Button type=\"primary\" disabled={this.state.orderDetailBtnDisabled} onClick={this.orderDetail}>订单详情</Button>\n                    <Button type=\"primary\" disabled={this.state.finishOrderBtnDisabled} style={{marginLeft:10}} onClick={this.finishOrder}>结束订单</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item,index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item,index);\n                                }\n                            }\n                        }}\n                    />\n                </div>\n                <Modal\n                    title=\"结束订单\"\n                    width={600}\n                    visible={this.state.isShowFinishOrderModal}\n                    onCancel={() => {\n                        this.setState({\n                            isShowFinishOrderModal:false,\n                        })\n                    }}\n                    onOk={this.onFinishOrderSubmit}\n                >\n                    <Form layout=\"horizontal\">\n                        <FormItem label=\"车辆编号\" {...formItemLayout}>\n                            {this.state.orderInfo.bikeSn}\n                        </FormItem>\n                        <FormItem label=\"剩余电量\" {...formItemLayout}>\n                            {this.state.orderInfo.battery + '%'}\n                        </FormItem>\n                        <FormItem label=\"行程开始时间\" {...formItemLayout}>\n                            {this.state.orderInfo.startTime}\n                        </FormItem>\n                        <FormItem label=\"当前位置\" {...formItemLayout}>\n                            {this.state.orderInfo.location}\n                        </FormItem>\n                    </Form>\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport { Card } from 'antd';\nimport axios from '../../axios/axios';\nimport './detail.less';\nimport Utils from '../../utils/utils';\n\n\n\nfunction* getInfo(orderId) {\n    yield axios.ajax({\n            url: '/order/detail',\n            params: {\n                orderId,\n            }\n        })\n}\n\nexport default class OrderDetail extends React.Component{\n    state = {\n        orderInfo: {}\n    }\n\n    componentDidMount() {\n        let orderId = this.props.match.params.orderId * 1;\n        this.getOrderDetailInfo(orderId);\n    }\n\n    getOrderDetailInfo = (orderId) => {\n        let order = getInfo(orderId).next().value;\n        order.then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    orderInfo: res.result\n                })\n                this.renderMap(res.result);\n            }\n        })\n\n        // axios.ajax({\n        //     url: '/order/detail',\n        //     data: {\n        //         orderId,\n        //     }\n        // }).then((res) => {\n        //     if (res.code === 0) {\n        //         this.setState({\n        //             orderInfo: res.result\n        //         })\n        //         this.renderMap(res.result);\n        //     }\n        // })\n    }\n\n    renderMap = (result)=>{\n        this.map = new window.BMap.Map('orderDetailMap');\n        this.addMapControl();\n        this.drawBikeRoute(result.positionList);\n        this.drwaServiceArea(result.area);\n    }\n\n    //添加控件\n    addMapControl = () => {\n        this.map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        this.map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    }\n    //画行使路线\n    drawBikeRoute = (positionList) => {\n        let startPoint = '';\n        let endPoint = '';\n        if (positionList.length > 0) {\n            let first = positionList[0];\n            let last = positionList[positionList.length - 1];\n            startPoint = new window.BMap.Point(first.lon, first.lat);\n            endPoint = new window.BMap.Point(last.lon, last.lat);\n            let startIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/start_point.png`,\n                new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let startMarker = new window.BMap.Marker(startPoint, { icon: startIcon });\n            this.map.addOverlay(startMarker);\n\n            //终点\n            let endIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/end_point.png`,\n            new window.BMap.Size(36, 42),\n                {\n                    imageSize: new window.BMap.Size(36, 42),\n                    anchor:new window.BMap.Size(18, 42)\n                }\n            )\n            let endMarker = new window.BMap.Marker(endPoint, { icon: endIcon });\n            this.map.addOverlay(endMarker);\n            \n            //连接路线\n            let trackPoint = [];\n            positionList.map((item) => {\n                trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n            })\n            let polyline = new window.BMap.Polyline(trackPoint, {\n                strokeColor:'#1869AD',\n                strokeWeight:3,\n                strokeOpacity:1\n            });\n            this.map.addOverlay(polyline);\n            this.map.centerAndZoom(endPoint, 11);\n\n        }\n    }\n\n    //画服务区\n    drwaServiceArea = (areaList) => {\n        let trackPoint = [];\n        areaList.map((item) => {\n            trackPoint.push(new window.BMap.Point(item.lon, item.lat));\n        })\n        let polygon = new window.BMap.Polygon(trackPoint, {\n            strokeColor:'#CE0000',\n            strokeWeight:4,\n            strokeOpacity: 1,\n            fillColor: '#ff8605',\n            fillOpacity:0.4\n        });\n        this.map.addOverlay(polygon);\n    }\n\n\n    render() {\n        const orderInfo = this.state.orderInfo;\n        return (\n            <div>\n                <Card title=\"订单详情\">\n                    <div id=\"orderDetailMap\" className=\"order-map\"></div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">基础信息</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">用车模式</div>\n                                <div className=\"detail-form-content\">{orderInfo.mode === 1?'服务区':'停车点'}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">订单编号</div>\n                                <div className=\"detail-form-content\">{orderInfo.orderSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">车辆编号</div>\n                                    <div className=\"detail-form-content\">{orderInfo.bikeSn}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">用户姓名</div>\n                                <div className=\"detail-form-content\">{orderInfo.userName}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">手机号码</div>\n                                <div className=\"detail-form-content\">{orderInfo.mobile}</div>\n                            </li> \n                        </ul>\n                    </div>\n                    <div className=\"detail-items\">\n                        <div className=\"item-title\">行驶轨迹</div>\n                        <ul className=\"detail-form\">\n                            <li>\n                                <div className=\"detail-form-left\">行程起点</div>\n                                <div className=\"detail-form-content\">{orderInfo.startLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行程终点</div>\n                                <div className=\"detail-form-content\">{orderInfo.endLocation}</div>\n                            </li>\n                            <li>\n                                <div className=\"detail-form-left\">行驶里程</div>\n                                <div className=\"detail-form-content\">{orderInfo.distance/1000}公里</div>\n                            </li>\n                        </ul>\n                    </div>\n                </Card>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Card, Avatar, Badge, Tooltip, Table, message, Button, Modal, Form, Input, Select, Radio, InputNumber, DatePicker,Switch } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\nimport axios from '../../axios/axios';\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nconst roleSelectList = [\n    { id: 1, value: '皇帝' },\n    { id: 2, value: '大臣' },\n    { id: 3, value: '宰相' },\n    { id: 4, value: '将军' },\n    { id: 5, value: '臣子' }\n]\nconst interestSelectList = [\n    { id: 1, value: '写代码' },\n    { id: 2, value: '撩妹子' },\n    { id: 3, value: '打篮球' },\n    { id: 4, value: '泡网吧' },\n    { id: 5, value: 'K歌' }\n]\n\nexport default class User extends React.Component {\n    \n    state = {\n        actionBtndisabled: true,//\n        deleteVisible: false,//删除强提示\n        title: '',\n        isVisible: false,\n        type: ''\n    };\n\n    params = {\n        page: 1,\n        pageSize: 10\n    }\n    search = (postData) => {\n        this.params = {\n            ...this.params,\n            ...postData\n        }\n        message.info(`提交的搜索条件：${JSON.stringify(this.params)}`);\n        this.getList();\n    }\n    getList = () => {\n        axios.getList(this, '/user/list', this.params);\n    }\n\n    onRowClick = (item, index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            actionBtndisabled: false,\n        })\n    }\n    componentDidMount() {\n        this.getList();\n    }\n\n\n    // 创建 修改 详情\n    handleOperator = (type) => {\n        let item = this.state.selectedItem;\n        if (type === 'add') {\n            this.setState(() => {\n                return {\n                    title: '创建员工',\n                    isVisible: true,\n                    type,\n                    userInfo: {}\n                }\n            })\n        } else {\n            this.setState({\n                title: type === 'update' ? '修改员工' : '员工详情',\n                isVisible: true,\n                userInfo: item,\n                type\n            })\n        }\n    }\n\n    resetSubmit = () => {\n        this.setState({\n            isVisible: false,\n            selectedRowKeys: [],//结束后取消掉之前的选中\n            actionBtndisabled: true,\n        })\n        this.userForm.props.form.resetFields();\n    }\n\n    // 创建 修改 详情 -确定\n    handleSubmit = () => {\n        let type = this.state.type;\n        let _this = this;\n        if (type === 'detail') {\n            this.setState({\n                isVisible: false,\n                selectedRowKeys: [],//结束后取消掉之前的选中\n                actionBtndisabled: true,\n            })\n            return;\n        }\n\n\n        this.userForm.props.form.validateFields((err, values) => {\n            values.birthday = moment(values.birthday).unix();\n            if (!err) {\n                \n                axios.ajax({\n                    url:type == 'add'?'/user/add':'/user/update',\n                    data:{\n                        ...values\n                    }\n                }).then((res)=>{\n                    if(res.code === 0){\n                        _this.resetSubmit();\n                        _this.getList();\n                    }\n                })\n            }\n        })\n    }\n    //删除\n    delete = () => {\n        let item = this.state.selectedItem;\n        let _this = this;\n        Modal.confirm({\n            title: '确定要删除此用户吗？',\n            okText: '确认',\n            cancelText: '取消',\n            onOk() {\n                axios.ajax({\n                    url: '/user/delete',\n                    data: {\n                        userId: item.id,\n                    }\n                }).then(res => {\n                    if (res.code === 0) {\n                        message.success('删除成功');\n                        _this.setState({\n                            selectedRowKeys: [],//结束后取消掉之前的选中\n                            actionBtndisabled: true,\n                        })\n                        _this.getList();\n                    } else {\n                        message.success(res.msg);\n\n                    }\n                })\n            }\n\n        })\n\n\n    }\n\n    render() {\n        const filterList = [\n            {\n                type: 'input',\n                label: '用户名',\n                field: 'userName',\n                placeholder: '请输入用户名'\n            },\n            {\n                type: 'input',\n                label: '联系地址',\n                field: 'address',\n                placeholder: '请输入联系地址'\n            }\n        ]\n        const columns = [\n            {\n                title: 'id',\n                key: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                key: 'userName',\n                dataIndex: 'userName'\n            },\n            {\n                title: '头像',\n                key: 'userImg',\n                dataIndex: 'userImg',\n                render: (userImg) => {\n                    return userImg ? <Avatar src={userImg} /> : <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n                }\n            },\n            {\n                title: '性别',\n                key: 'sex',\n                dataIndex: 'sex',\n                render: (sex) => {\n                    if (sex === 1) {\n                        return <Badge count='男' style={{ backgroundColor: '#1890ff' }} />;\n                    }\n                    return <Badge count='女' style={{ backgroundColor: '#52c41a' }} />;\n                }\n            },\n            {\n                title: '年龄',\n                key: 'age',\n                dataIndex: 'age'\n            },\n            {\n                title: '角色',\n                key: 'role',\n                dataIndex: 'role',\n                render: (role) => {\n                    const roleObj = {\n                        1: '皇帝',\n                        2: '大臣',\n                        3: '宰相',\n                        4: '将军',\n                        5: '臣子',\n                    }\n                    return roleObj[role];\n                }\n            },\n            {\n                title: '爱好',\n                key: 'interest',\n                dataIndex: 'interest',\n                render: (interest) => {\n                    const interestObj = {\n                        1: '写代码',\n                        2: '撩妹子',\n                        3: '打篮球',\n                        4: '泡网吧',\n                        5: 'K歌',\n                    }\n                    let strArr = [];\n                    interest.map((item, index) => {\n                        strArr.push(interestObj[item]);\n                    })\n\n                    return (<Tooltip title={strArr.length > 2 ? strArr.join(',') : ''}>\n                        <span>{strArr.length === 0 ? '无' : strArr.length > 2 ? strArr.slice(0, 2).join(',') + '...' : strArr.join(',')}</span>\n                    </Tooltip>\n                    )\n\n                }\n            },\n            {\n                title: '是否婚配',\n                key: 'isMarried',\n                dataIndex: 'isMarried',\n                render: (isMarried) => {\n                    if (isMarried) {\n                        return <Badge status=\"success\" text=\"是\" />;\n                    }\n                    return <Badge status=\"error\" text=\"否\" />;\n                }\n            },\n            {\n                title: '生日',\n                key: 'birthday',\n                dataIndex: 'birthday',\n                render: (birthday) => {\n                    return moment(birthday * 1000).format(\"YYYY-MM-DD HH:mm:ss\");\n                }\n            },\n            {\n                title: '联系地址',\n                key: 'address',\n                dataIndex: 'address',\n                render: (address) => {\n                    return (<Tooltip title={address.length > 10 ? address : ''}>\n                        <span>{address.length > 10 ? address.slice(0, 10) + '...' : address}</span>\n                    </Tooltip>\n                    )\n                }\n            },\n            {\n                title: '早起时间',\n                key: 'time',\n                dataIndex: 'time'\n            }\n        ]\n        //设置表格内容 居中显示\n        columns.map(item => item.align = \"center\");\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n        }\n        let footer = {};\n        if (this.state.type === 'detail') {\n            footer = { footer: null }\n        }\n        return (\n            <div>\n                <Card>\n                    <FilterForm\n                        filterList={filterList}\n                        search={this.search}\n                    />\n                </Card>\n                <Card style={{ marginTop: 20 }}>\n                    <Button icon=\"plus\" onClick={() => this.handleOperator('add')}>创建</Button>\n                    <Button icon=\"edit\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={() => this.handleOperator('update')}>修改</Button>\n                    <Button icon=\"info-circle\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={() => this.handleOperator('detail')}>详情</Button>\n                    <Button icon=\"delete\" type=\"danger\" disabled={this.state.actionBtndisabled} style={{ marginLeft: 10 }} onClick={this.delete}>删除</Button>\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item, index);\n                                }\n                            }\n                        }}\n                    />\n                </div>\n                <Modal\n                    width={800}\n                    title={this.state.title}\n                    visible={this.state.isVisible}\n                    onOk={this.handleSubmit}\n                    onCancel={() => {\n                        this.resetSubmit();\n                    }}\n                    {...footer}\n\n                >\n                    <UserForm\n                        userInfo={this.state.userInfo}\n                        type={this.state.type}\n                        wrappedComponentRef={(inset) => this.userForm = inset}\n                    />\n                </Modal>\n            </div>\n        )\n    }\n}\n\n\nclass UserForm extends React.Component {\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 16 }\n        }\n        const userInfo = this.props.userInfo || {};\n        const type = this.props.type;\n\n        let getRole = (role) => {\n            let name = '';\n            roleSelectList.map(item => {\n                if (item.id === role) {\n                    name = item.value;\n                }\n            })\n            return name;\n        }\n\n        let getInterest = (interest) => {\n            interest = interest || [];\n            let names = [];\n            interestSelectList.map((item1) => {\n                interest.map((item2) => {\n                    if (item1.id === item2) {\n                        names.push(item1.value)\n                    }\n                })\n            })\n            return names.join(',');\n        }\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"姓名\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.userName :\n                            getFieldDecorator('userName', {\n                                initialValue: userInfo.userName,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '用户名不能为空'\n                                    },\n                                    {\n                                        min: 5, max: 12,\n                                        message: '用户名长度5-12'\n                                    }, {\n                                        pattern: new RegExp('^\\\\w+$', 'g'),\n                                        message: '用户名必须是字母或者数字'\n                                    }\n                                ]\n                            })(\n                                <Input placeholder=\"请输入用户名\" />\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"性别\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.sex === 1 ? '男' : '女' :\n                            getFieldDecorator('sex', {\n                                initialValue: userInfo.sex || 1\n                            })(\n                                <RadioGroup>\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                </RadioGroup>\n                            )\n                    }\n                </FormItem>\n                <FormItem label=\"角色\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? getRole(userInfo.role) :\n                            getFieldDecorator('role', {\n                                initialValue: userInfo.role\n                            })(\n                                <Select>\n                                    {\n                                        roleSelectList.map((item, index) => {\n                                            return <Option key={index} value={item.id}>{item.value}</Option>\n                                        })\n                                    }\n                                </Select>\n                            )\n                    }\n                </FormItem>\n                <Form.Item label=\"爱好\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? getInterest(userInfo.interest) :\n                            getFieldDecorator('interest', {\n                                initialValue: userInfo.interest,\n                            })(\n                                <Select mode=\"multiple\" placeholder=\"可多选爱好\">\n                                    {\n                                        interestSelectList.map((item, index) => {\n                                            return (\n                                                <Select.Option key={item.id} value={item.id}>{item.value}</Select.Option>\n                                            )\n                                        })\n                                    }\n\n                                </Select>\n                            )\n                    }\n                </Form.Item>\n\n                <Form.Item label=\"是否婚配\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? userInfo.isMarried ? '是':'否' :\n                        getFieldDecorator('isMarried', {\n                            initialValue: userInfo.isMarried || false,\n                        })(\n                            <Switch checkedChildren=\"是\" unCheckedChildren=\"否\" />\n                        )\n                    }\n                </Form.Item>\n\n                <FormItem label=\"生日\" {...formItemLayout}>\n                    {\n                        userInfo && type === \"detail\" ? moment(userInfo.birthday * 1000).format('YYYY-MM-DD') :\n                            getFieldDecorator('birthday', {\n                                initialValue: userInfo.birthday ? moment(userInfo.birthday * 1000) : null\n                            })(\n                                <DatePicker placeholder=\"请选择出生日期\" format=\"YYYY-MM-DD\" />\n                            )\n                    }\n                </FormItem>\n            </Form>\n        )\n    }\n}\nUserForm = Form.create({})(UserForm);\n","import React from 'react';\n\nimport { Card } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\nimport Axios from '../../axios/axios';\nimport Utils from '../../utils/utils';\n\nexport default class BikeMap extends React.Component{\n    state = {}\n\n    params = {};\n    search = (data) => {\n        this.params = data;\n        this.getMapData();\n    }\n\n    getMapData = () => {\n        Axios.ajax({\n            url: '/map/bike',\n            params:this.params\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    totalCount:res.result.totalCount\n                })\n                this.renderMap(res.result);\n            }\n        })\n    }\n\n    renderMap = (data) => {\n        let list = data.routeList;\n        this.map = new window.BMap.Map('container', { enableMapClick: false });\n        let first = list[0].split(',');\n        let last = list[list.length-1].split(',');\n        let startPoint = new window.BMap.Point(first[0], first[1]);\n        let endPoint = new window.BMap.Point(last[0], last[1]);\n        this.map.centerAndZoom(endPoint, 11);\n        \n        //添加起始图标\n        let startPointIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/start_point.png`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        var bikeMarkerStart = new window.BMap.Marker(startPoint, { icon: startPointIcon });\n        this.map.addOverlay(bikeMarkerStart);\n\n        //添加结束图标\n        let endPointIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/end_point.png`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n        var bikeMarkerEnd = new window.BMap.Marker(endPoint, { icon: endPointIcon });\n        this.map.addOverlay(bikeMarkerEnd);\n\n\n        //链接起始结束路线\n        let routeList = [];\n        list.map(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            routeList.push(point);\n        })\n        let polyline = new window.BMap.Polyline(routeList,{\n            strokeColor: \"#ef4136\",\n            strokeWeight: 3,\n            strokeOpacity: 1\n        })\n        this.map.addOverlay(polyline);\n\n        //添加服务区\n        let serviceList = data.serviceList;\n        let servicePointist = [];\n        serviceList.map(item => {\n            let point = new window.BMap.Point(item.lon, item.lat);\n            servicePointist.push(point);\n        })\n\n        let servicesPolygon = new window.BMap.Polygon(servicePointist,{\n            strokeColor: \"#ef4136\",\n            strokeWeight: 3,\n            strokeOpacity: 1\n        })\n        this.map.addOverlay(servicesPolygon);\n\n        //添加地图中的自行车\n        let bikeList = data.bikeList;\n        let bikeIcon = new window.BMap.Icon(`${Utils.cdnUrl}/assets/img/bike.jpg`, new window.BMap.Size(36, 42), {\n            imageSize: new window.BMap.Size(36, 42),\n            anchor: new window.BMap.Size(18, 42)\n        });\n\n        bikeList.map(item => {\n            let p = item.split(',');\n            let point = new window.BMap.Point(p[0], p[1]);\n            let bikeMarker = new window.BMap.Marker(point, { icon: bikeIcon });\n            this.map.addOverlay(bikeMarker);\n        })\n\n        this.addMapControl();\n    }\n\n    //添加控件\n    addMapControl = () => {\n        this.map.addControl(new window.BMap.ScaleControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n        this.map.addControl(new window.BMap.NavigationControl({ anchor: window.BMAP_ANCHOR_TOP_RIGHT }));\n    }\n\n    componentDidMount() {\n        this.getMapData();\n    }\n\n    render() {\n        const filterList = [\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '',\n                showSearch: true,\n                key: 'name',\n                value:'id',\n                list: [\n                    { id: '', name: '全部' },\n                    { id: 1, name: '北京' },\n                    { id: 2, name: '上海' },\n                    { id: 3, name: '广州' },\n                    { id: 4, name: '深圳' },\n                    { id: 5, name: '成都' }\n                ]\n            },\n            {\n                type: 'timeSelect',\n                label: '行使时间',\n                width: 200,\n            }\n        ]\n        return (\n            <div>\n                <Card>\n                    <FilterForm filterList={filterList} search={this.search} />\n                </Card>\n                <Card style={{marginTop:10}}>\n                    <div>共{this.state.totalCount}辆车</div>\n                    <div id=\"container\" style={{height:500}}></div>\n                </Card>\n            </div>\n        )\n    }\n}","\nlet contrastColor = '#eee';\nlet axisCommon = function () {\n    return {\n        axisLine: {\n            lineStyle: {\n                color: contrastColor\n            }\n        },\n        axisTick: {\n            lineStyle: {\n                color: contrastColor\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: contrastColor\n            }\n        },\n        splitLine: {\n            lineStyle: {\n                type: 'dashed',\n                color: '#aaa'\n            }\n        },\n        splitArea: {\n            areaStyle: {\n                color: contrastColor\n            }\n        }\n    };\n};\n\nlet colorPalette = ['#dd6b66','#759aa0','#e69d87','#8dc1a9','#ea7e53','#eedd78','#73a373','#73b9bc','#7289ab', '#91ca8c','#f49f42'];\nlet theme = {\n    color: colorPalette,\n    backgroundColor: '#333',\n    tooltip: {\n        axisPointer: {\n            lineStyle: {\n                color: contrastColor\n            },\n            crossStyle: {\n                color: contrastColor\n            }\n        }\n    },\n    legend: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    textStyle: {\n        color: contrastColor\n    },\n    title: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: contrastColor\n            }\n        }\n    },\n    dataZoom: {\n        textStyle: {\n            color: contrastColor\n        }\n    },\n    timeline: {\n        lineStyle: {\n            color: contrastColor\n        },\n        itemStyle: {\n            normal: {\n                color: colorPalette[1]\n            }\n        },\n        label: {\n            normal: {\n                textStyle: {\n                    color: contrastColor\n                }\n            }\n        },\n        controlStyle: {\n            normal: {\n                color: contrastColor,\n                borderColor: contrastColor\n            }\n        }\n    },\n    timeAxis: axisCommon(),\n    logAxis: axisCommon(),\n    valueAxis: axisCommon(),\n    categoryAxis: axisCommon(),\n\n    line: {\n        symbol: 'circle'\n    },\n    graph: {\n        color: colorPalette\n    },\n    gauge: {\n        title: {\n            textStyle: {\n                color: contrastColor\n            }\n        }\n    },\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#FD1050',\n                color0: '#0CF49B',\n                borderColor: '#FD1050',\n                borderColor0: '#0CF49B'\n            }\n        }\n    }\n};\n\nexport default theme;","import React from 'react';\nimport { Card } from 'antd';\n\nimport echartTheme from '../echartTheme';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', echartTheme);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'bar',\n                    data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            legend:{\n                data:['ofo','mobile','blue gogo']\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'ofo',\n                    type: 'bar',\n                    data: [2000, 3000, 5500, 7000, 8000, 12000, 20000]\n                },\n                {\n                    name: 'mobile',\n                    type: 'bar',\n                    data: [1500, 3000, 4500, 6000, 8000, 10000, 15000]\n                },\n                {\n                    name: 'blue gogo',\n                    type: 'bar',\n                    data: [1000, 2000, 2500, 4000, 6000, 7000, 8000]\n                }\n            ]\n        }\n        return option;\n    }\n    render() {\n        return (\n            <div>\n                <Card title=\"柱形图一\">\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption()} />\n                </Card>\n                <Card title=\"柱形图二\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption2()} />\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n","var colorPalette = [\n    '#C1232B',\n    '#27727B',\n    '#FCCE10',\n    '#E87C25',\n    '#B5C334',\n    '#FE8463',\n    '#9BCA63',\n    '#FAD860',\n    '#F3A43B',\n    '#60C0DD',\n    '#D7504B',\n    '#C6E579',\n    '#F4E001',\n    '#F0805A',\n    '#26C0C0'\n];\nexport default {\n\n    color: colorPalette,\n\n    title: {\n        textStyle: {\n            fontWeight: 'normal',\n            color: '#27727B'\n        }\n    },\n\n    visualMap: {\n        color: ['#C1232B', '#FCCE10']\n    },\n\n    toolbox: {\n        iconStyle: {\n            normal: {\n                borderColor: colorPalette[0]\n            }\n        }\n    },\n\n    tooltip: {\n        backgroundColor: 'rgba(50,50,50,0.5)',\n        axisPointer: {\n            type: 'line',\n            lineStyle: {\n                color: '#27727B',\n                type: 'dashed'\n            },\n            crossStyle: {\n                color: '#27727B'\n            },\n            shadowStyle: {\n                color: 'rgba(200,200,200,0.3)'\n            }\n        }\n    },\n\n    dataZoom: {\n        dataBackgroundColor: 'rgba(181,195,52,0.3)',\n        fillerColor: 'rgba(181,195,52,0.2)',\n        handleColor: '#27727B'\n    },\n\n    categoryAxis: {\n        axisLine: {\n            lineStyle: {\n                color: '#27727B'\n            }\n        },\n        splitLine: {\n            show: false\n        }\n    },\n\n    valueAxis: {\n        axisLine: {\n            show: false\n        },\n        splitArea: {\n            show: false\n        },\n        splitLine: {\n            lineStyle: {\n                color: ['#ccc'],\n                type: 'dashed'\n            }\n        }\n    },\n\n    timeline: {\n        lineStyle: {\n            color: '#27727B'\n        },\n        controlStyle: {\n            normal: {\n                color: '#27727B',\n                borderColor: '#27727B'\n            }\n        },\n        symbol: 'emptyCircle',\n        symbolSize: 3\n    },\n\n    line: {\n        itemStyle: {\n            normal: {\n                borderWidth: 2,\n                borderColor: '#fff',\n                lineStyle: {\n                    width: 3\n                }\n            },\n            emphasis: {\n                borderWidth: 0\n            }\n        },\n        symbol: 'circle',\n        symbolSize: 3.5\n    },\n\n    candlestick: {\n        itemStyle: {\n            normal: {\n                color: '#C1232B',\n                color0: '#B5C334',\n                lineStyle: {\n                    width: 1,\n                    color: '#C1232B',\n                    color0: '#B5C334'\n                }\n            }\n        }\n    },\n\n    graph: {\n        color: colorPalette\n    },\n\n    map: {\n        label: {\n            normal: {\n                textStyle: {\n                    color: '#C1232B'\n                }\n            },\n            emphasis: {\n                textStyle: {\n                    color: 'rgb(100,0,0)'\n                }\n            }\n        },\n        itemStyle: {\n            normal: {\n                areaColor: '#ddd',\n                borderColor: '#eee'\n            },\n            emphasis: {\n                areaColor: '#fe994e'\n            }\n        }\n    },\n\n    gauge: {\n        axisLine: {\n            lineStyle: {\n                color: [\n                    [\n                        0.2, '#B5C334'\n                    ],\n                    [\n                        0.8, '#27727B'\n                    ],\n                    [1, '#C1232B']\n                ]\n            }\n        },\n        axisTick: {\n            splitNumber: 2,\n            length: 5,\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        axisLabel: {\n            textStyle: {\n                color: '#fff'\n            }\n        },\n        splitLine: {\n            length: '5%',\n            lineStyle: {\n                color: '#fff'\n            }\n        },\n        title: {\n            offsetCenter: [0, -20]\n        }\n    }\n}","import React from 'react';\nimport { Card } from 'antd';\n\nimport themeLight from '../themeLight';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/pie';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', themeLight);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x : 'center'\n            },\n            legend : {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: ['周一','周二','周三','周四','周五','周六','周日']\n            },\n            tooltip: {\n                trigger : 'item',\n                formatter : \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name : '订单量',\n                    type : 'pie',\n                    radius : '55%',\n                    center : [\n                        '50%', '60%'\n                    ],\n                    data:[\n                        {\n                            value:1000,\n                            name:'周一'\n                        },\n                        {\n                            value: 1000,\n                            name: '周二'\n                        },\n                        {\n                            value: 2000,\n                            name: '周三'\n                        },\n                        {\n                            value: 1500,\n                            name: '周四'\n                        },\n                        {\n                            value: 3000,\n                            name: '周五'\n                        },\n                        {\n                            value: 2000,\n                            name: '周六'\n                        },\n                        {\n                            value: 1200,\n                            name: '周日'\n                        },\n                    ],\n                    itemStyle : {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2() {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: ['50%', '70%'],\n                    center: [\n                        '50%', '60%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ],\n                    itemStyle: {\n                        emphasis: {\n                            shadowBlur: 10,\n                            shadowOffsetX: 0,\n                            shadowColor: 'rgba(0, 0, 0, 0.5)'\n                        }\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption3() {\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                orient: 'vertical',\n                right: 10,\n                top: 20,\n                bottom: 20,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            tooltip: {\n                trigger: 'item',\n                formatter: \"{a} <br/>{b} : {c} ({d}%)\"\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: '55%',\n                    center: [\n                        '50%', '50%'\n                    ],\n                    data: [\n                        {\n                            value: 1000,\n                            name: '周一'\n                        }, {\n                            value: 1000,\n                            name: '周二'\n                        }, {\n                            value: 2000,\n                            name: '周三'\n                        }, {\n                            value: 1500,\n                            name: '周四'\n                        }, {\n                            value: 3000,\n                            name: '周五'\n                        }, {\n                            value: 2000,\n                            name: '周六'\n                        }, {\n                            value: 1200,\n                            name: '周日'\n                        }\n                    ].sort(function (a, b) { return a.value - b.value; }),\n                    roseType: 'radius',\n                    animationType: 'scale',\n                    animationEasing: 'elasticOut',\n                    animationDelay: function (idx) {\n                        return Math.random() * 200;\n                    }\n                }\n            ]\n        }\n        return option;\n    }\n\n    render() {\n        return (\n            <div>\n                <Card title=\"饼图一\">\n                    <ReactEcharts\n                        theme=\"heng\"\n                        style={{ height: 500 }}\n                        option={this.getOption()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                    />\n                </Card>\n                <Card title=\"饼图二\" style={{marginTop:10}}>\n                    <ReactEcharts\n                        theme=\"heng\"\n                        style={{ height: 500 }}\n                        option={this.getOption2()}\n                        notMerge={true}\n                        lazyUpdate={true}\n                    />\n                </Card>\n                <Card title=\"饼图三\" style={{marginTop:10}}>\n                    <ReactEcharts\n                        option={this.getOption3()}\n                        theme=\"heng\"\n                        notMerge={true}\n                        lazyUpdate={true}\n                        style={{ height: 500 }}/>\n                </Card>\n\n            </div>\n        )\n    }\n}\n\n\n","import React from 'react';\nimport { Card } from 'antd';\n\nimport echartTheme from '../echartTheme';\n// 引入 ECharts 主模块\nimport echarts from 'echarts/lib/echarts';\n\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/grid';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/markPoint';\n\nimport ReactEcharts from 'echarts-for-react';\n\n\nexport default class Bar extends React.Component {\n\n    state = {}\n    componentWillMount() {\n        echarts.registerTheme('heng', echartTheme);\n    }\n    getOption = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'line'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [1000, 2000, 1500, 3000, 2000, 1200, 800]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption2 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer : {            // 坐标轴指示器，坐标轴触发有效\n                    type : 'line'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            legend:{\n                data:['ofo','mobile','blue gogo']\n            },\n            xAxis: {\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: 'ofo',\n                    type: 'line',\n                    data: [2000, 3000, 5500, 7000, 8000, 12000, 20000]\n                },\n                {\n                    name: 'mobile',\n                    type: 'line',\n                    data: [1500, 3000, 4500, 6000, 8000, 10000, 15000]\n                },\n                {\n                    name: 'blue gogo',\n                    type: 'line',\n                    data: [1000, 2000, 2500, 4000, 6000, 7000, 8000]\n                }\n            ]\n        }\n        return option;\n    }\n\n    getOption3 = () => {\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis'\n            },\n            xAxis: {\n                type:'category',\n                boundaryGap: false,\n                data: [\n                    '周一',\n                    '周二',\n                    '周三',\n                    '周四',\n                    '周五',\n                    '周六',\n                    '周日'\n                ]\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '订单量',\n                    type: 'line',\n                    data: [\n                        1000,\n                        2000,\n                        1500,\n                        3000,\n                        2000,\n                        1200,\n                        800\n                    ],\n                    areaStyle: {}\n                }\n            ]\n        }\n        return option;\n    }\n    render() {\n        return (\n            <div>\n                <Card title=\"折线图一\">\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n                <Card title=\"折线图二\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption2()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n                <Card title=\"折线图三\" style={{marginTop:10}}>\n                    <ReactEcharts theme=\"heng\" style={{ height: 500 }} option={this.getOption3()}  notMerge={true}\n                        lazyUpdate={true}/>\n                </Card>\n            </div>\n        )\n    }\n}\n\n\n","import React from \"react\";\nimport {\n    Card,\n    Button,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Switch,\n    message,\n    Tree,\n    Transfer\n} from \"antd\";\nimport axios from \"../../axios/axios\";\nimport moment from \"moment\";\nimport menuConfig from \"../../config/menuConfig\";\n\nconst FormItem = Form.Item;\nconst TreeNode = Tree.TreeNode;\n\nexport default class Permission extends React.Component {\n    state = {\n        btnDisabled: true,\n        isShowCreateModal: false,//显示创建角色弹框\n        isShowAuthModal: false, //显示设置权限弹框\n        isShowUserAuthModal:false,//显示用户授权弹框\n    };\n    params = {\n        page: 1,\n        pageSize: 10\n    };\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    getList = () => {\n        axios.getList(this, \"/role/list\", this.params);\n    };\n\n    //点击表格每一行\n    onRowClick = (item, index) => {\n        this.setState({\n            selectedRowKeys: [index],\n            selectedItem: item,\n            btnDisabled: false\n        });\n    };\n\n\n    /*创建角色*********************************************************************************************** */\n    //点击创建角色按钮\n    handleCreate = () => {\n        this.setState({\n            isShowCreateModal: true\n        });\n    };\n\n    //创建角色-提交\n    onCreateSubmit = () => {\n        this.roleForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                axios\n                    .ajax({\n                        url: \"/role/add\",\n                        data: values\n                    })\n                    .then(res => {\n                        if (res.code === 0) {\n                            message.success(\"创建成功!\");\n                            this.getList();\n                            this.roleForm.props.form.resetFields();\n                            this.setState({\n                                isShowCreateModal: false\n                            });\n                        }\n                    });\n            }\n        });\n    };\n\n    /*置权限*********************************************************************************************** */\n    //点击设置权限按钮\n    handleAuth = () => {\n        let item = this.state.selectedItem;\n        this.setState({\n            isShowAuthModal: true,\n            menus: item.menus\n        });\n    };\n\n    //设置树形选择的菜单key\n    setMenus = menus => {\n        this.setState({\n            menus\n        });\n    };\n\n    //设置权限-提交\n    onAuthSubmit = () => {\n        this.authForm.props.form.validateFields((err, values) => {\n            if (!err) {\n                axios\n                    .ajax({\n                        url: \"/role/auth\",\n                        data: {\n                            ...values,\n                            menus: this.state.menus\n                        }\n                    })\n                    .then(res => {\n                        if (res.code === 0) {\n                            message.success(\"设置成功!\");\n                            this.getList();\n                            this.setState({\n                                isShowAuthModal: false\n                            });\n                        }\n                    });\n            }\n        });\n    };\n\n    /*用户授权*********************************************************************************************** */\n    //点击用户授权按钮\n    handleUserAuth = () => {\n        let item = this.state.selectedItem;\n        this.setState({\n            isShowUserAuthModal: true,\n        });\n        this.getUserAuthList(item);\n    }\n\n    //获取用户权限列表\n    getUserAuthList = (item) => {\n        axios.ajax({\n            url: '/role/user/auth',\n            params: {\n                userId:item.id\n            }\n        }).then(res => {\n            if (res.code === 0) {\n                let data = res.result;\n                let mockData = [];\n                let targetKeys = [];\n                if (data && data.length > 0) {\n                    data.map(item => {\n                        let dataObj = {\n                            key: item.userId,\n                            title: item.userName,\n                            status:item.status,\n                        }\n                        if (item.status === 1) {\n                            targetKeys.push(dataObj.key)\n                        }\n                        mockData.push(dataObj);\n                    })\n                    console.log('mockData',mockData)\n                    this.setState({\n                        mockData,\n                        targetKeys\n                    })\n                }\n                \n            }\n        })\n    }\n\n    //用户授权-提交\n    onUserAuthSubmit = () => {\n        let data = {\n            roleId: this.state.selectedItem.id,\n            roleName:this.state.selectedItem.roleName,\n            userIds:this.state.targetKeys,\n        }\n        axios.ajax({\n            url:'/role/user/auth/edit',\n            data\n        }).then(res => {\n            if (res.code === 0){\n                message.success(\"设置成功!\");\n                this.getList();\n                this.setState({\n                    isShowUserAuthModal: false,\n                    selectedItem: {}\n                });\n            }\n        })\n    }\n\n\n    render() {\n        const columns = [\n            {\n                title: \"角色ID\",\n                dataIndex: \"id\"\n            },\n            {\n                title: \"角色名称\",\n                dataIndex: \"roleName\"\n            },\n            {\n                title: \"创建时间\",\n                dataIndex: \"createTime\"\n            },\n            {\n                title: \"使用状态\",\n                dataIndex: \"status\",\n                render: status => {\n                    return status === 1 ? \"启用\" : \"停用\";\n                }\n            },\n            {\n                title: \"授权时间\",\n                dataIndex: \"authorizeTime\",\n                render: authorizeTime => {\n                    return moment(authorizeTime * 1000).format(\n                        \"YYYY-MM-DD HH:mm:ss\"\n                    );\n                }\n            },\n            {\n                title: \"授权人\",\n                dataIndex: \"authorizeUserName\"\n            }\n        ];\n        columns.map(item => {\n            item.align = \"center\";\n        });\n\n        const selectedRowKeys = this.state.selectedRowKeys;\n        const rowSelection = {\n            type: \"radio\",\n            selectedRowKeys\n        };\n\n        return (\n            <div>\n                <Card>\n                    <Button type=\"primary\" onClick={this.handleCreate}>\n                        创建角色\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        disabled={this.state.btnDisabled}\n                        style={{ margin: \"0 10\" }}\n                        onClick={this.handleAuth}\n                    >\n                        设置权限\n                    </Button>\n                    <Button\n                        type=\"primary\"\n                        disabled={this.state.btnDisabled}\n                        onClick={this.handleUserAuth}>\n                        用户授权\n                    </Button>\n                </Card>\n                <div style={{ marginTop: 20 }} className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={(item, index) => {\n                            return {\n                                onClick: () => {\n                                    this.onRowClick(item, index);\n                                }\n                            };\n                        }}\n                    />\n                </div>\n\n\n                <Modal\n                    title=\"创建角色\"\n                    width={600}\n                    visible={this.state.isShowCreateModal}\n                    onCancel={() => {\n                        this.roleForm.props.form.resetFields();\n                        this.setState({\n                            isShowCreateModal: false\n                        });\n                    }}\n                    onOk={this.onCreateSubmit}\n                >\n                    <RoleForm\n                        wrappedComponentRef={sss => (this.roleForm = sss)}\n                    />\n                </Modal>\n\n                \n                <Modal\n                    title=\"权限设置\"\n                    width={600}\n                    bodyStyle={{\n                        height: 400,\n                        overflow:'auto'\n                    }}\n                    visible={this.state.isShowAuthModal}\n                    onCancel={() => {\n                        this.authForm.props.form.resetFields();\n                        this.setState({\n                            isShowAuthModal: false\n                        });\n                    }}\n                    onOk={this.onAuthSubmit}\n                >\n                    <AuthForm\n                        info={this.state.selectedItem}\n                        menus={this.state.menus}\n                        setMenus={this.setMenus}\n                        wrappedComponentRef={sss => (this.authForm = sss)}\n                    />\n                </Modal>\n\n\n\n                <Modal\n                    title=\"用户授权\"\n                    width={800}\n                    visible={this.state.isShowUserAuthModal}\n                    onCancel={() => {\n                        this.userAuthForm.props.form.resetFields();\n                        this.setState({\n                            isShowUserAuthModal: false\n                        });\n                    }}\n                    onOk={this.onUserAuthSubmit}\n                >\n                    <UserAuthForm\n                        info={this.state.selectedItem}\n                        mockData={this.state.mockData}\n                        targetKeys={this.state.targetKeys}\n                        setTargetKeys={(targetKeys) => {\n                            this.setState({targetKeys})\n                        }}\n                        wrappedComponentRef={sss => (this.userAuthForm = sss)}\n                    />\n                </Modal>\n\n\n            </div>\n        );\n    }\n}\n\nclass RoleForm extends React.Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        };\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"roleName\", {\n                        rules: [\n                            {\n                                required: true,\n                                message: \"角色名称不能为空\"\n                            },\n                            {\n                                min: 5,\n                                max: 12,\n                                message: \"角色名称长度5-12\"\n                            },\n                            {\n                                pattern: new RegExp(\"[\\u4e00-\\u9fa5]\", \"g\"),\n                                message: \"角色名称必须是中文\"\n                            }\n                        ]\n                    })(<Input placeholder=\"请输入角色名称\" />)}\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"status\", {\n                        initialValue: true,\n                        valuePropName: \"checked\"\n                    })(\n                        <Switch\n                            checkedChildren=\"启用\"\n                            unCheckedChildren=\"停用\"\n                        />\n                    )}\n                </FormItem>\n            </Form>\n        );\n    }\n}\n\nRoleForm = Form.create({})(RoleForm);\n\nclass AuthForm extends React.Component {\n    getTreeNode = data => {\n        return data.map(item => {\n            if (item.children && item.children.length > 0) {\n                return (\n                    <TreeNode title={item.title} key={item.key}>\n                        {this.getTreeNode(item.children)}\n                    </TreeNode>\n                );\n            }\n            return <TreeNode {...item} />;\n        });\n    };\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        };\n        const { getFieldDecorator } = this.props.form;\n        const info = this.props.info;\n        const menus = this.props.menus;\n\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"roleName\", {\n                        initialValue: info.roleName\n                    })(<Input placeholder=\"请输入角色名称\" disabled />)}\n                </FormItem>\n                <FormItem label=\"状态\" {...formItemLayout}>\n                    {getFieldDecorator(\"status\", {\n                        initialValue: info.status === 1,\n                        valuePropName: \"checked\"\n                    })(\n                        <Switch\n                            checkedChildren=\"启用\"\n                            unCheckedChildren=\"停用\"\n                        />\n                    )}\n                </FormItem>\n                <Tree\n                    defaultExpandAll\n                    checkable\n                    checkedKeys={menus}\n                    onCheck={checkedKeys => {\n                        this.props.setMenus(checkedKeys);\n                    }}\n                >\n                    <TreeNode title=\"平台权限\">\n                        {this.getTreeNode(menuConfig)}\n                    </TreeNode>\n                </Tree>\n            </Form>\n        );\n    }\n}\nAuthForm = Form.create({})(AuthForm);\n\n\n\nclass UserAuthForm extends React.Component {\n\n    handleChange = (targetKeys) => {\n        this.props.setTargetKeys(targetKeys);\n    }\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 5 },\n            wrapperCol: { span: 19 }\n        };\n        const { getFieldDecorator } = this.props.form;\n        const { info, mockData, targetKeys } = this.props;\n        return (\n            <Form layout=\"horizontal\">\n                <FormItem label=\"角色名称\" {...formItemLayout}>\n                    {getFieldDecorator(\"roleName\", {\n                        initialValue: info.roleName\n                    })(<Input placeholder=\"请输入角色名称\" disabled />)}\n                </FormItem>\n                <FormItem label=\"选择用户\" {...formItemLayout}>\n                    <Transfer\n                        dataSource={mockData}\n                        targetKeys={targetKeys}\n                        showSearch\n                        locale={{\n                            itemUnit: '名',\n                            itemsUnit: '名',\n                            searchPlaceholder: \"请输入用户名\",\n                            notFoundContent:'暂无用户'\n                        }}\n                        listStyle={{width: 200,height: 400}}\n                        titles={['待选用户', '已选用户']}\n                        render={item => item.title}\n                        onChange={this.handleChange}\n                    />\n                </FormItem>\n                \n            </Form>\n        );\n    }\n}\nUserAuthForm = Form.create({})(UserAuthForm);\n","import React from 'react';\nimport { Card,Table } from 'antd';\nimport FilterForm from '../../components/filterForm/FilterForm';\nimport axios from '../../axios/axios';\nimport moment from 'moment';\n\nexport default class Salary extends React.Component{\n    state = {\n    };\n    listArr = [];\n    params = {\n        date:'2017-05'\n    }\n    search = (postData) => {\n        this.params = {\n            ...postData,\n        }\n        let filterData = this.listArr;\n        if (postData.city !== '全部') {\n            filterData = filterData.filter((item) => {\n                if (item.city && item.city.indexOf(postData.city) > -1) {\n                    return item;\n                }\n            })\n        } \n        if (postData.class || postData.lang) {\n            filterData = filterData.filter((item) => {\n                if (item.class && item.class.indexOf(postData.class) > -1) {\n                    return item;\n                }\n                if (item.class && item.class.indexOf(postData.lang) > -1) {\n                    return item;\n                }\n            })\n        } \n        if (postData.class && postData.lang) {\n            filterData = filterData.filter((item) => {\n                if (item.class && item.class.indexOf(postData.class) > -1 && item.class.indexOf(postData.lang) > -1) {\n                    return item;\n                }\n            })\n        } \n\n        this.setState({\n            list:filterData\n        })\n    }\n    onChange = (time,tiemString) => {\n        this.params.date = tiemString;\n        this.getList();\n    }\n\n    getList() {\n        axios.ajax({\n            url: 'http://jx.1000phone.net/teacher.php/Api/studentJobData_month',\n            params:this.params\n        }).then(res => {\n            this.listArr = res.student.map((item,index)=> {\n                item.key = index\n                return item;\n            });\n            this.setState({\n                list:this.listArr\n            })\n        })\n    }\n\n    componentDidMount() {\n        this.getList();\n    }\n\n    render() {\n\n        const filterList = [\n            {\n                type: 'timeSelectSingle',\n                label: '毕业时间',\n                format: 'YYYY-MM',\n                placeholder: '请选择毕业时间',\n                startField: 'date',\n                isUnTimeStamp:true,\n                width: 200,\n                showTime: false,\n                initialValue: moment('2017-05'),\n                onChange:this.onChange\n            },\n            {\n                type: 'select',\n                label: '城市',\n                field: 'city',\n                placeholder: '请选择城市',\n                width: 135,\n                initialValue: '全部',\n                list: ['全部','北京','上海','广州','深圳','成都','武汉']\n            },\n            {\n                type: 'select',\n                label: '语言',\n                field: 'lang',\n                placeholder: '请选择语言',\n                width: 135,\n                initialValue: '全部',\n                list: ['全部','HTML5','Android','JavaEE','IOS','UI','PHP']\n            },\n            {\n                type: 'input',\n                label: '班级',\n                field: 'class',\n                placeholder: '请输入1610类型班级',\n                width:200\n            }\n        ]\n        const columns = [\n            {\n                title: '班级',\n                dataIndex:'class',\n            },\n            {\n                title: '姓名',\n                dataIndex: 'student',\n                width:80,\n                \n            },\n            {\n                title: '学历',\n                dataIndex: 'education',\n                width:80,\n                \n            },\n            {\n                title: '状态',\n                dataIndex: 'status',\n                width:80,\n                \n            },\n            {\n                title: '专业',\n                dataIndex:'profession',\n            },\n            {\n                title: '薪资',\n                dataIndex: 'salary',\n                width:80,\n                \n            },\n            {\n                title: '城市',\n                dataIndex: 'city',\n                width:80,\n            },\n            {\n                title: '入职企业',\n                dataIndex: 'company',\n                width:200,\n            },\n            {\n                title: '毕业时间',\n                dataIndex: 'date',\n                width:200,\n            }\n        ]\n        columns.map(item => {\n            item.align = \"center\";\n        })\n        \n        \n\n\n        return (\n            <div>\n                <Card>\n                <FilterForm\n                    filterList={filterList}\n                    search={this.search}\n                />\n                </Card>\n                <div className=\"content-wrap\">\n                    <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={false}\n                    />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { Row } from 'antd';\n\nimport Header from './components/Header/Header'\nimport './style/common.less'\n\nclass Common extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Row className=\"simple-page\">\n                    <Header menuType=\"second\"></Header>\n                </Row>\n                <Row className=\"content\" style={{marginTop:54}}>\n                    {this.props.children}\n                </Row>\n            </div>\n        )\n    }\n}\nexport default Common\n\n","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware,compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducers from '../reducers/reducer_common';\n\n\n//使用redux-thunk中间件 目的是为了 处理异步请求\n//将 异步请求 放到 anctionCreators中去处理了。\n\n/* 原理是：以前的store.dispatch(action)中：\n    action是一个对象\n    而使用了redux-thunk就让这个action变成了一个函数\n    相当于给dispatch方法升级了\n*/\n/*\n    下面这里的写法 参照：https://github.com/zalmoxisus/redux-devtools-extension\n    主要是为了使用 redux-devtools-extension这个浏览器调试插件\n*/\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(thunk));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\nexport default store;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","import React from 'react';\nimport store from './store/store'\nimport getAction from './actionCreators/getAction'\nimport TodoListUI from './todoListUI';\nimport { message } from 'antd';\n\n\n//容器组件，只用于逻辑处理\nexport default class Name extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n        store.subscribe(() => {\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    handleInputChange = (e) => {\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () => {\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n    handleItemDelete = (index) => {\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n  \n    componentDidMount() {\n        //初始化 list 将ajax请求放到了getInitActionData中去处理了。\n        store.dispatch(getAction.getInitActionData(() => {\n            message.success('数据初始化成功');\n        }));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange={this.handleInputChange}\n                handleBtnAdd={this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n            />\n        )\n    }\n\n   \n    \n\n    \n\n\n}\n\n\n","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>\n    <div>\n        <div style={{ width: 400 }}>\n            <Input value={props.inputVal} onChange={props.handleInputChange} style={{ width: 300 }} placeholder=\"请输入item\" />\n            <Button onClick={props.handleBtnAdd} type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD',\n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import { takeEvery, put } from 'redux-saga/effects';\nimport getAction from '../actionCreators/getAction';\nimport ACTION_TYPES from '../actionCreators/actionTypes';\nimport axios from '../../../axios/axios';\n\nfunction* getListData(action) { \n    try {\n        const res = yield axios.ajax({ url: '/user/list' });\n        const actionInit = getAction.initActionData(res.result.list);\n        yield put(actionInit);\n    } catch (e) {\n        const actionInit = getAction.initActionData([]);\n        yield put(actionInit);\n    }\n   \n}\n\nfunction* valueChange(action){\n    console.log(\"action\",action)\n}\n\n\n\nfunction* todoListSaga() {\n    //这里可以 写多个action的异步处理 后面的函数可以是generator函数 或 普通函数\n    yield takeEvery(ACTION_TYPES.GET_LIST_DATA, getListData);\n    yield takeEvery(ACTION_TYPES.TODOLIST_VALUE_CHANGE, valueChange);\n}\n\nexport default todoListSaga;","import { createStore, applyMiddleware,compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\nimport createSagaMiddleware  from 'redux-saga';\nimport todoListSaga from '../sagas/todoListSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n    rootReducers,\n    enhancer\n);\n\nsagaMiddleware.run(todoListSaga);\n\n\nexport default store;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport store from './store/store';\nimport getAction from './actionCreators/getAction';\n\nclass ReduxSagaDemo extends React.Component{\n    constructor(props) {\n        super(props);\n        // this.state = store.getState().todoListReducers;\n        store.subscribe(() => {\n            console.log(store.getState().todoListReducers)\n            this.setState(store.getState().todoListReducers)\n        });\n    }\n\n    componentDidMount() {\n        const action = getAction.getListData();\n        store.dispatch(action);\n    }\n    handleInputChange = (e) =>{\n        store.dispatch(getAction.getInputChangeAction(e.target.value));\n    }\n    handleBtnAdd = () =>{\n        if (this.state.inputVal) {\n            store.dispatch(getAction.getTodoItemAddAction());\n        }\n    }\n\n    handleItemDelete = (index) =>{\n        store.dispatch(getAction.getTodoItemDeleteAction(index));\n    }\n\n    render() {\n        return (\n            <TodoListUI\n                {...this.state}\n                handleInputChange = {this.handleInputChange}\n                handleBtnAdd = {this.handleBtnAdd}\n                handleItemDelete = {this.handleItemDelete}\n        />);\n    }\n}\n\nexport default ReduxSagaDemo;","import React from 'react';\nimport { Input,Button,List} from 'antd';\n\n\n//UI组件-只用于页面显示，不用于逻辑处理。\nconst TodoListUI = (props =>{\n    return (<div>\n        <div style={{ width: 400 }}>\n            <Input\n                value={props.inputVal}\n                onChange={props.handleInputChange}\n                style={{ width: 300 }}\n                placeholder=\"请输入item\" />\n            <Button\n                onClick={props.handleBtnAdd}\n                type=\"primary\">添加</Button>\n        </div>\n        <List\n            style={{ width: 300 }}\n            bordered\n            dataSource={props.list}\n            renderItem={(item, index) => (<List.Item onClick={() => props.handleItemDelete(index)} key={index}>{item}</List.Item>)}\n        />\n    </div>);\n\n})\n    \n\n\nexport default TodoListUI;","//定义Action 类型\n\nconst ACTION_TYPES = {\n    TODOLIST_VALUE_CHANGE:'TODOLIST_VALUE_CHANGE',//input change\n    TODOLIST_TODO_ITEM_ADD:'TODOLIST_TODO_ITEM_ADD', //add \n    TODOLIST_TODO_ITEM_DELETE: 'TODOLIST_TODO_ITEM_DELETE',//delete\n    INIT_ACTION_DATA: 'INIT_ACTION_DATA',//初始化list\n    GET_LIST_DATA:'GET_LIST_DATA',//通过redux-saga 触发的action\n    \n    \n    INDEX_TITLE:'INDEX_TITLE',//首页标题\n}\n\nexport default ACTION_TYPES;","\n//获取Action\nimport ACTION_TYPES from './actionTypes';\n\n\nconst getAction = {\n    getInputChangeAction:((value) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_VALUE_CHANGE,\n            value\n        }\n    }),\n    getTodoItemAddAction: (() => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD,\n        }\n    }),\n    getTodoItemDeleteAction: ((index) => {\n        return {\n            type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE,\n            index\n        }\n    }),\n    getIndexTitleAction: ((title) => {\n        return {\n            type: ACTION_TYPES.INDEX_TITLE,\n            title\n        }\n    }),\n    initActionData: ((data) => {\n        return {\n            type: ACTION_TYPES.INIT_ACTION_DATA,\n            data\n        }\n    }),\n    getListData: (() => {\n        return {\n            type: ACTION_TYPES.GET_LIST_DATA\n        }\n    })\n\n}\n \n\nexport default getAction;","import React from 'react';\nimport TodoListUI from './todoListUI';\nimport getAction from './actionCreators/getAction';\nimport { connect } from 'react-redux';\n\n\n\nclass ReduxReactTodoList extends React.Component{\n   \n    // componentDidMount() {\n    //     const action = getAction.getListData();\n    //     store.dispatch(action);\n    // }\n    // handleInputChange = (e) =>{\n    //     store.dispatch(getAction.getInputChangeAction(e.target.value));\n    // }\n    addItem = () => {\n        if (this.props.inputVal) {\n            this.props.handleBtnAdd();\n        }\n    }\n\n    // handleItemDelete = (index) =>{\n    //     store.dispatch(getAction.getTodoItemDeleteAction(index));\n    // }\n\n    render() {\n        const { inputVal, list, handleInputChange, handleItemDelete} = this.props;\n        return (\n            <TodoListUI\n                inputVal = {inputVal}\n                list = {list}\n                handleInputChange = {handleInputChange}\n                handleBtnAdd = {this.addItem}\n                handleItemDelete = {handleItemDelete}\n        />);\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    //这里state 里面有todoListReducers 和 titleReducers \n    //里面有todoListReducers 里面有 inputVal 和 list 直接解构赋值\n    return {\n        ...state.todoListReducers\n        // inputVal:state.todoListReducers.inputVal,\n        // list:state.todoListReducers.list,\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        handleInputChange:(e) => {\n            dispatch(getAction.getInputChangeAction(e.target.value));\n        },\n        handleBtnAdd:()=>{\n            dispatch(getAction.getTodoItemAddAction());\n        },\n        handleItemDelete(index){\n            dispatch(getAction.getTodoItemDeleteAction(index));\n        }\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ReduxReactTodoList);\n\n","import React from 'react'\nimport { HashRouter, Route, Switch, Redirect} from 'react-router-dom'\n\nimport App from './App';\nimport Admin from './Admin';\nimport Home from './pages/home';\nimport Buttons from './pages/ui/Buttons';\nimport Modals from './pages/ui/Modals';\nimport Loadings from './pages/ui/Loadings';\nimport Notification from './pages/ui/Notification';\nimport Messages from './pages/ui/Messages';\nimport Tabpages from './pages/ui/Tabs';\nimport Gallery from './pages/ui/Gallery';\nimport Carousels from './pages/ui/Carousels';\nimport Login from './pages/form/Login';\nimport Register from './pages/form/Register';\nimport BasicTable from './pages/table/BasicTable';\nimport HightTable from './pages/table/HightTable';\nimport City from './pages/city/city';\nimport Order from './pages/order/Order';\nimport OrderDetail from './pages/order/OrderDetail';\nimport User from './pages/user/User';\nimport BikeMap from './pages/map/BikeMap';\nimport Bar from './pages/echarts/bar/Bar';\nimport Pie from './pages/echarts/pie/Pie';\nimport Line from './pages/echarts/line/Line';\nimport Permission from './pages/permission/Permission';\nimport Salary from './pages/salary/Salary';\n\nimport Common from './common';\n\n\n\nimport ReduxThunkDemo from './pages/redux-thunk-demo/redux-thunk-demo';\nimport ReduxSagaDemo from './pages/redux-saga-demo/redux-saga-demo';\nimport ReduxReactTodoList from './pages/redux-react-todoList/redux-react-todoList';\n\n\nexport default class ERouter extends React.Component{\n    render(){\n        return (\n            <HashRouter>\n                <App>\n                    <Switch>\n                        <Route path=\"/login\" component={Login}></Route>\n                        <Route path=\"/common\" render={() =>\n                            <Common>\n                                <Route path=\"/common/order/detail/:orderId\" component={OrderDetail}></Route>\n                            </Common>\n                        }></Route>\n                        <Route path=\"/\" render={()=>\n                            <Admin>\n                                <Switch>\n                                    <Route path=\"/home\" component={Home}></Route>\n                                    <Route path=\"/ui/buttons\" component={Buttons}></Route>\n                                    <Route path=\"/ui/modals\" component={Modals}></Route>\n                                    <Route path=\"/ui/loadings\" component={Loadings}></Route>\n                                    <Route path=\"/ui/notification\" component={Notification}></Route>\n                                    <Route path=\"/ui/messages\" component={Messages}></Route>\n                                    <Route path=\"/ui/tabs\" component={Tabpages}></Route>\n                                    <Route path=\"/ui/gallery\" component={Gallery}></Route>\n                                    <Route path=\"/ui/carousel\" component={Carousels}></Route>\n                                    <Route path=\"/form/login\" component={Login}></Route>\n                                    <Route path=\"/form/register\" component={Register}></Route>\n                                    <Route path=\"/table/basic\" component={BasicTable}></Route>\n                                    <Route path=\"/table/hight\" component={HightTable}></Route>\n                                    <Route path=\"/city\" component={City}></Route>\n                                    <Route path=\"/order\" component={Order}></Route>\n                                    <Route path=\"/user\" component={User}></Route>\n                                    <Route path=\"/bikeMap\" component={BikeMap}></Route>\n                                    <Route path=\"/charts/bar\" component={Bar}></Route>\n                                    <Route path=\"/charts/pie\" component={Pie}></Route>\n                                    <Route path=\"/charts/line\" component={Line}></Route>\n                                    <Route path=\"/permission\" component={Permission}></Route>\n                                    <Route path=\"/salary\" component={Salary}></Route>\n                                    \n\n                                    \n                                    <Route path=\"/redux/thunk\" component={ReduxThunkDemo}></Route>\n                                    <Route path=\"/redux/saga\" component={ReduxSagaDemo}></Route>\n                                    <Route path=\"/redux/react/todolist\" component={ReduxReactTodoList}></Route>\n\n                                    \n                                    <Redirect to=\"/home\" />\n                                </Switch>\n                            </Admin>\n                        }></Route>\n                    </Switch>\n                </App>\n            </HashRouter>\n        );\n    }\n}","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INIT_ACTION_DATA },\n        (state, action) => {\n            state.list = action.data.map(({ userName }) => userName);\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_VALUE_CHANGE },\n        (state, action) => {\n            state.inputVal = action.value;\n            return state;\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_ADD },\n        (state, action) => {\n            return {\n                // ...state,\n                list: [...state.list,state.inputVal],\n                inputVal: '',\n            };\n        }\n    ],\n    [\n        { type: ACTION_TYPES.TODOLIST_TODO_ITEM_DELETE },\n        (state, action) => {\n            state.list.splice(action.index, 1);\n            return state;\n        }\n    ],\n]);\n\nconst defaultState = {\n    inputVal: '',\n    list: []\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state 导致todolist 删除了视图未更新\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","import ACTION_TYPES from '../actionCreators/actionTypes';\n\n\n\nconst handleState = new Map([\n    [\n        { type: ACTION_TYPES.INDEX_TITLE },\n        (state, action) => {\n            state.title = action.title;\n            return state;\n        }\n    ],\n]);\n\nlet defaultState = {\n    title:''\n}\n\nexport default ((state = defaultState, action) => {\n    let newState = JSON.parse(JSON.stringify(state)); //深拷贝 state\n    // let newState = { ...state };//深拷贝 state\n    \n    [...handleState].map(([key, func]) => {\n        if (key.type && key.type === action.type) {\n            newState = func(newState,action);\n        }\n    })\n    return newState;\n})","//reducer 合并\nimport { combineReducers } from 'redux';\nimport todoListReducers from './reducer_todo_list';\nimport titleReducers from './reducer_title';\n\nlet rootReducers = combineReducers({\n    titleReducers,\n    todoListReducers,\n})\n\n\nexport default rootReducers;","import { createStore,applyMiddleware, compose } from 'redux';\nimport rootReducers from '../reducers/reducer_common';\n\n\n// const sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\nconst enhancer = composeEnhancers(applyMiddleware());\n\n\n\nconst store = createStore(rootReducers,enhancer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport ERouter from './router';\nimport { Provider } from 'react-redux';\nimport store from './pages/redux-react-todoList/store/store';\n\nReactDOM.render(\n    <Provider\n        store = {store}\n    >\n        <ERouter />\n    </Provider>, \n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}